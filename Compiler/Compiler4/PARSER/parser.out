Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    NEW

Grammar

Rule 0     S' -> PROGRAM
Rule 1     PROGRAM -> Z
Rule 2     Z -> CLASSDECLARATION Z
Rule 3     Z -> EMPTY
Rule 4     CLASSDECLARATION -> CLASS ID OPENAKOL A CLOSEAKOL
Rule 5     A -> FIELDDECLARATION A
Rule 6     A -> METHODDECLARATION A
Rule 7     A -> EMPTY
Rule 8     FIELDDECLARATION -> DECLARATORS ID SEMI
Rule 9     FIELDDECLARATION -> STATEMENT
Rule 10    METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL
Rule 11    METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL
Rule 12    METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B CLOSEAKOL
Rule 13    METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B CLOSEAKOL
Rule 14    B -> STATEMENT B
Rule 15    B -> EMPTY
Rule 16    DECLARATORS -> C STATIC TYPE
Rule 17    DECLARATORS -> STATIC TYPE
Rule 18    DECLARATORS -> C TYPE
Rule 19    DECLARATORS -> TYPE
Rule 20    C -> PUBLIC
Rule 21    C -> PRIVATE
Rule 22    EMPTY -> <empty>
Rule 23    TYPE -> PRIMTYPE
Rule 24    TYPE -> CLASSTYPE
Rule 25    TYPE -> ARRTYPE
Rule 26    PRIMTYPE -> INT
Rule 27    PRIMTYPE -> BOOLEAN
Rule 28    PRIMTYPE -> STRING
Rule 29    PRIMTYPE -> DOUBLE
Rule 30    PRIMTYPE -> CHARACTER
Rule 31    PRIMTYPE -> FLOAT
Rule 32    PRIMTYPE -> VOID
Rule 33    CLASSTYPE -> ID
Rule 34    ARRTYPE -> INT OPENBRACKET CLOSEBRACKET
Rule 35    ARRTYPE -> CLASSTYPE OPENBRACKET CLOSEBRACKET
Rule 36    PARAMERERLIST -> TYPE ID D
Rule 37    D -> COMMA TYPE ID D
Rule 38    D -> EMPTY
Rule 39    ARGUMENTLIST -> EXPRESSION E
Rule 40    E -> COMMA EXPRESSION
Rule 41    E -> EMPTY
Rule 42    REFERENCE -> THIS G
Rule 43    REFERENCE -> ID G
Rule 44    G -> DOT ID G
Rule 45    G -> EMPTY
Rule 46    STATEMENT -> OPENAKOL H CLOSEAKOL
Rule 47    STATEMENT -> EXPRESSION
Rule 48    STATEMENT -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI
Rule 49    STATEMENT -> REFERENCE ASSIGN EXPRESSION SEMI
Rule 50    STATEMENT -> REFERENCE OPENPAR CLOSEPAR SEMI
Rule 51    STATEMENT -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI
Rule 52    STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT
Rule 53    STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT
Rule 54    STATEMENT -> FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT
Rule 55    STATEMENT -> WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT
Rule 56    H -> STATEMENT H
Rule 57    H -> EMPTY
Rule 58    EXPRESSION -> EXPRESSION1
Rule 59    EXPRESSION -> EXPRESSION2
Rule 60    EXPRESSION -> EXPRESSION3
Rule 61    EXPRESSION -> EXPRESSION4
Rule 62    EXPRESSION -> EXPRESSION5
Rule 63    EXPRESSION -> EXPRESSION6
Rule 64    EXPRESSION1 -> ID ASSIGN ID OP ID SEMI
Rule 65    EXPRESSION2 -> TYPE ID ASSIGN ID OP ID SEMI
Rule 66    EXPRESSION3 -> TYPE ID SEMI
Rule 67    EXPRESSION4 -> TYPE ID ASSIGN VALUE SEMI
Rule 68    EXPRESSION5 -> ID ASSIGN VALUE SEMI
Rule 69    VALUE -> VALUE1
Rule 70    VALUE -> VALUE2
Rule 71    VALUE1 -> NUMBER
Rule 72    VALUE2 -> CHAR
Rule 73    EXPRESSION6 -> TRUE
Rule 74    EXPRESSION6 -> FALSE
Rule 75    EXPRESSION6 -> NULL
Rule 76    EXPRESSION6 -> ID
Rule 77    EXPRESSION6 -> VALUE
Rule 78    EXPRESSION6 -> TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI
Rule 79    EXPRESSION6 -> ID ASSIGN ID OP ID OP ID SEMI
Rule 80    EXPRESSION6 -> EMPTY
Rule 81    EXPRESSION6 -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I
Rule 82    OP -> LESSEQUAL
Rule 83    OP -> ASSIGN
Rule 84    OP -> EQUALS
Rule 85    OP -> GREATEREQUAL
Rule 86    OP -> GREATERTHAN
Rule 87    OP -> LESSTHAN
Rule 88    OP -> ADD
Rule 89    OP -> MINUS
Rule 90    OP -> MULT
Rule 91    OP -> NOTEQUAL
Rule 92    OP -> DIVIDE
Rule 93    OP -> PEQUAL
Rule 94    OP -> MEQUAL
Rule 95    OP -> PLUSPLUS
Rule 96    I -> REFERENCE OP
Rule 97    I -> REFERENCE OP NUMBER
Rule 98    I -> REFERENCE OP REFERENCE

Terminals, with rules where they appear

ADD                  : 88
ASSIGN               : 48 49 64 65 67 68 78 79 81 83
BOOLEAN              : 27
CHAR                 : 72
CHARACTER            : 30
CLASS                : 4
CLOSEAKOL            : 4 10 11 12 13 46
CLOSEBRACKET         : 34 35 48
CLOSEPAR             : 10 11 12 13 50 51 52 53 54 55
COMMA                : 37 40
DIVIDE               : 92
DOT                  : 44
DOUBLE               : 29
ELSE                 : 52
EQUALS               : 84
FALSE                : 74
FLOAT                : 31
FOR                  : 54
GREATEREQUAL         : 85
GREATERTHAN          : 86
ID                   : 4 8 10 11 12 13 33 36 37 43 44 64 64 64 65 65 65 66 67 68 76 78 79 79 79 79
IF                   : 52 53
INT                  : 26 34
LESSEQUAL            : 82
LESSTHAN             : 87
MEQUAL               : 94
MINUS                : 89
MULT                 : 90
NEW                  : 
NOTEQUAL             : 91
NULL                 : 75
NUMBER               : 71 81 97
OPENAKOL             : 4 10 11 12 13 46
OPENBRACKET          : 34 35 48
OPENPAR              : 10 11 12 13 50 51 52 53 54 55
PEQUAL               : 93
PLUSPLUS             : 95
PRIVATE              : 21
PUBLIC               : 20
RETURN               : 10 11
SEMI                 : 8 10 11 48 49 50 51 64 65 66 67 68 78 79 81 81
STATIC               : 16 17
STRING               : 28
THIS                 : 42
TRUE                 : 73
VOID                 : 32
WHILE                : 55
error                : 

Nonterminals, with rules where they appear

A                    : 4 5 6
ARGUMENTLIST         : 51
ARRTYPE              : 25
B                    : 10 11 12 13 14
C                    : 16 18
CLASSDECLARATION     : 2
CLASSTYPE            : 24 35
D                    : 36 37
DECLARATORS          : 8 10 11 12 13
E                    : 39
EMPTY                : 3 7 15 38 41 45 57 80
EXPRESSION           : 10 11 39 40 47 48 48 49 52 53 54 55 78 78
EXPRESSION1          : 58
EXPRESSION2          : 59
EXPRESSION3          : 60
EXPRESSION4          : 61
EXPRESSION5          : 62
EXPRESSION6          : 63
FIELDDECLARATION     : 5
G                    : 42 43 44
H                    : 46 56
I                    : 81
METHODDECLARATION    : 6
OP                   : 64 65 78 79 79 81 96 97 98
PARAMERERLIST        : 10 12
PRIMTYPE             : 23
PROGRAM              : 0
REFERENCE            : 48 49 50 51 81 81 81 96 97 98 98
STATEMENT            : 9 14 52 52 53 54 55 56
TYPE                 : 16 17 18 19 36 37 65 66 67 78
VALUE                : 67 68 77
VALUE1               : 69
VALUE2               : 70
Z                    : 1 2

Parsing method: LALR

state 0

    (0) S' -> . PROGRAM
    (1) PROGRAM -> . Z
    (2) Z -> . CLASSDECLARATION Z
    (3) Z -> . EMPTY
    (4) CLASSDECLARATION -> . CLASS ID OPENAKOL A CLOSEAKOL
    (22) EMPTY -> .

    CLASS           shift and go to state 5
    $end            reduce using rule 22 (EMPTY -> .)

    PROGRAM                        shift and go to state 1
    Z                              shift and go to state 2
    CLASSDECLARATION               shift and go to state 3
    EMPTY                          shift and go to state 4

state 1

    (0) S' -> PROGRAM .



state 2

    (1) PROGRAM -> Z .

    $end            reduce using rule 1 (PROGRAM -> Z .)


state 3

    (2) Z -> CLASSDECLARATION . Z
    (2) Z -> . CLASSDECLARATION Z
    (3) Z -> . EMPTY
    (4) CLASSDECLARATION -> . CLASS ID OPENAKOL A CLOSEAKOL
    (22) EMPTY -> .

    CLASS           shift and go to state 5
    $end            reduce using rule 22 (EMPTY -> .)

    CLASSDECLARATION               shift and go to state 3
    Z                              shift and go to state 6
    EMPTY                          shift and go to state 4

state 4

    (3) Z -> EMPTY .

    $end            reduce using rule 3 (Z -> EMPTY .)


state 5

    (4) CLASSDECLARATION -> CLASS . ID OPENAKOL A CLOSEAKOL

    ID              shift and go to state 7


state 6

    (2) Z -> CLASSDECLARATION Z .

    $end            reduce using rule 2 (Z -> CLASSDECLARATION Z .)


state 7

    (4) CLASSDECLARATION -> CLASS ID . OPENAKOL A CLOSEAKOL

    OPENAKOL        shift and go to state 8


state 8

    (4) CLASSDECLARATION -> CLASS ID OPENAKOL . A CLOSEAKOL
    (5) A -> . FIELDDECLARATION A
    (6) A -> . METHODDECLARATION A
    (7) A -> . EMPTY
    (8) FIELDDECLARATION -> . DECLARATORS ID SEMI
    (9) FIELDDECLARATION -> . STATEMENT
    (10) METHODDECLARATION -> . DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL
    (11) METHODDECLARATION -> . DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL
    (12) METHODDECLARATION -> . DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B CLOSEAKOL
    (13) METHODDECLARATION -> . DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B CLOSEAKOL
    (22) EMPTY -> .
    (16) DECLARATORS -> . C STATIC TYPE
    (17) DECLARATORS -> . STATIC TYPE
    (18) DECLARATORS -> . C TYPE
    (19) DECLARATORS -> . TYPE
    (46) STATEMENT -> . OPENAKOL H CLOSEAKOL
    (47) STATEMENT -> . EXPRESSION
    (48) STATEMENT -> . REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI
    (49) STATEMENT -> . REFERENCE ASSIGN EXPRESSION SEMI
    (50) STATEMENT -> . REFERENCE OPENPAR CLOSEPAR SEMI
    (51) STATEMENT -> . REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI
    (52) STATEMENT -> . IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT
    (53) STATEMENT -> . IF OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (54) STATEMENT -> . FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (55) STATEMENT -> . WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (20) C -> . PUBLIC
    (21) C -> . PRIVATE
    (23) TYPE -> . PRIMTYPE
    (24) TYPE -> . CLASSTYPE
    (25) TYPE -> . ARRTYPE
    (58) EXPRESSION -> . EXPRESSION1
    (59) EXPRESSION -> . EXPRESSION2
    (60) EXPRESSION -> . EXPRESSION3
    (61) EXPRESSION -> . EXPRESSION4
    (62) EXPRESSION -> . EXPRESSION5
    (63) EXPRESSION -> . EXPRESSION6
    (42) REFERENCE -> . THIS G
    (43) REFERENCE -> . ID G
    (26) PRIMTYPE -> . INT
    (27) PRIMTYPE -> . BOOLEAN
    (28) PRIMTYPE -> . STRING
    (29) PRIMTYPE -> . DOUBLE
    (30) PRIMTYPE -> . CHARACTER
    (31) PRIMTYPE -> . FLOAT
    (32) PRIMTYPE -> . VOID
    (33) CLASSTYPE -> . ID
    (34) ARRTYPE -> . INT OPENBRACKET CLOSEBRACKET
    (35) ARRTYPE -> . CLASSTYPE OPENBRACKET CLOSEBRACKET
    (64) EXPRESSION1 -> . ID ASSIGN ID OP ID SEMI
    (65) EXPRESSION2 -> . TYPE ID ASSIGN ID OP ID SEMI
    (66) EXPRESSION3 -> . TYPE ID SEMI
    (67) EXPRESSION4 -> . TYPE ID ASSIGN VALUE SEMI
    (68) EXPRESSION5 -> . ID ASSIGN VALUE SEMI
    (73) EXPRESSION6 -> . TRUE
    (74) EXPRESSION6 -> . FALSE
    (75) EXPRESSION6 -> . NULL
    (76) EXPRESSION6 -> . ID
    (77) EXPRESSION6 -> . VALUE
    (78) EXPRESSION6 -> . TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI
    (79) EXPRESSION6 -> . ID ASSIGN ID OP ID OP ID SEMI
    (80) EXPRESSION6 -> . EMPTY
    (81) EXPRESSION6 -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I
    (69) VALUE -> . VALUE1
    (70) VALUE -> . VALUE2
    (71) VALUE1 -> . NUMBER
    (72) VALUE2 -> . CHAR

  ! shift/reduce conflict for STATIC resolved as shift
  ! shift/reduce conflict for OPENAKOL resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for THIS resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for CHARACTER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    CLOSEAKOL       reduce using rule 22 (EMPTY -> .)
    STATIC          shift and go to state 19
    OPENAKOL        shift and go to state 10
    IF              shift and go to state 22
    FOR             shift and go to state 23
    WHILE           shift and go to state 24
    PUBLIC          shift and go to state 25
    PRIVATE         shift and go to state 26
    THIS            shift and go to state 36
    ID              shift and go to state 9
    INT             shift and go to state 37
    BOOLEAN         shift and go to state 38
    STRING          shift and go to state 39
    DOUBLE          shift and go to state 40
    CHARACTER       shift and go to state 41
    FLOAT           shift and go to state 42
    VOID            shift and go to state 43
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    NULL            shift and go to state 47
    NUMBER          shift and go to state 48
    CHAR            shift and go to state 51

  ! STATIC          [ reduce using rule 22 (EMPTY -> .) ]
  ! OPENAKOL        [ reduce using rule 22 (EMPTY -> .) ]
  ! IF              [ reduce using rule 22 (EMPTY -> .) ]
  ! FOR             [ reduce using rule 22 (EMPTY -> .) ]
  ! WHILE           [ reduce using rule 22 (EMPTY -> .) ]
  ! PUBLIC          [ reduce using rule 22 (EMPTY -> .) ]
  ! PRIVATE         [ reduce using rule 22 (EMPTY -> .) ]
  ! THIS            [ reduce using rule 22 (EMPTY -> .) ]
  ! ID              [ reduce using rule 22 (EMPTY -> .) ]
  ! INT             [ reduce using rule 22 (EMPTY -> .) ]
  ! BOOLEAN         [ reduce using rule 22 (EMPTY -> .) ]
  ! STRING          [ reduce using rule 22 (EMPTY -> .) ]
  ! DOUBLE          [ reduce using rule 22 (EMPTY -> .) ]
  ! CHARACTER       [ reduce using rule 22 (EMPTY -> .) ]
  ! FLOAT           [ reduce using rule 22 (EMPTY -> .) ]
  ! VOID            [ reduce using rule 22 (EMPTY -> .) ]
  ! TRUE            [ reduce using rule 22 (EMPTY -> .) ]
  ! FALSE           [ reduce using rule 22 (EMPTY -> .) ]
  ! NULL            [ reduce using rule 22 (EMPTY -> .) ]
  ! NUMBER          [ reduce using rule 22 (EMPTY -> .) ]
  ! CHAR            [ reduce using rule 22 (EMPTY -> .) ]

    A                              shift and go to state 11
    FIELDDECLARATION               shift and go to state 12
    METHODDECLARATION              shift and go to state 13
    EMPTY                          shift and go to state 14
    DECLARATORS                    shift and go to state 15
    STATEMENT                      shift and go to state 16
    EXPRESSION                     shift and go to state 17
    C                              shift and go to state 18
    TYPE                           shift and go to state 20
    REFERENCE                      shift and go to state 21
    PRIMTYPE                       shift and go to state 27
    CLASSTYPE                      shift and go to state 28
    ARRTYPE                        shift and go to state 29
    EXPRESSION1                    shift and go to state 30
    EXPRESSION2                    shift and go to state 31
    EXPRESSION3                    shift and go to state 32
    EXPRESSION4                    shift and go to state 33
    EXPRESSION5                    shift and go to state 34
    EXPRESSION6                    shift and go to state 35
    VALUE                          shift and go to state 44
    VALUE1                         shift and go to state 49
    VALUE2                         shift and go to state 50

state 9

    (43) REFERENCE -> ID . G
    (33) CLASSTYPE -> ID .
    (64) EXPRESSION1 -> ID . ASSIGN ID OP ID SEMI
    (68) EXPRESSION5 -> ID . ASSIGN VALUE SEMI
    (76) EXPRESSION6 -> ID .
    (79) EXPRESSION6 -> ID . ASSIGN ID OP ID OP ID SEMI
    (44) G -> . DOT ID G
    (45) G -> . EMPTY
    (22) EMPTY -> .

  ! reduce/reduce conflict for ID resolved using rule 33 (CLASSTYPE -> ID .)
  ! reduce/reduce conflict for OPENBRACKET resolved using rule 22 (EMPTY -> .)
  ! shift/reduce conflict for ASSIGN resolved as shift
    ID              reduce using rule 33 (CLASSTYPE -> ID .)
    ASSIGN          shift and go to state 53
    STATIC          reduce using rule 76 (EXPRESSION6 -> ID .)
    OPENAKOL        reduce using rule 76 (EXPRESSION6 -> ID .)
    IF              reduce using rule 76 (EXPRESSION6 -> ID .)
    FOR             reduce using rule 76 (EXPRESSION6 -> ID .)
    WHILE           reduce using rule 76 (EXPRESSION6 -> ID .)
    PUBLIC          reduce using rule 76 (EXPRESSION6 -> ID .)
    PRIVATE         reduce using rule 76 (EXPRESSION6 -> ID .)
    THIS            reduce using rule 76 (EXPRESSION6 -> ID .)
    INT             reduce using rule 76 (EXPRESSION6 -> ID .)
    BOOLEAN         reduce using rule 76 (EXPRESSION6 -> ID .)
    STRING          reduce using rule 76 (EXPRESSION6 -> ID .)
    DOUBLE          reduce using rule 76 (EXPRESSION6 -> ID .)
    CHARACTER       reduce using rule 76 (EXPRESSION6 -> ID .)
    FLOAT           reduce using rule 76 (EXPRESSION6 -> ID .)
    VOID            reduce using rule 76 (EXPRESSION6 -> ID .)
    TRUE            reduce using rule 76 (EXPRESSION6 -> ID .)
    FALSE           reduce using rule 76 (EXPRESSION6 -> ID .)
    NULL            reduce using rule 76 (EXPRESSION6 -> ID .)
    NUMBER          reduce using rule 76 (EXPRESSION6 -> ID .)
    CHAR            reduce using rule 76 (EXPRESSION6 -> ID .)
    CLOSEAKOL       reduce using rule 76 (EXPRESSION6 -> ID .)
    DOT             shift and go to state 54
    OPENBRACKET     reduce using rule 22 (EMPTY -> .)
    OPENPAR         reduce using rule 22 (EMPTY -> .)

  ! OPENBRACKET     [ reduce using rule 33 (CLASSTYPE -> ID .) ]
  ! ID              [ reduce using rule 76 (EXPRESSION6 -> ID .) ]
  ! ASSIGN          [ reduce using rule 22 (EMPTY -> .) ]

    G                              shift and go to state 52
    EMPTY                          shift and go to state 55

state 10

    (46) STATEMENT -> OPENAKOL . H CLOSEAKOL
    (56) H -> . STATEMENT H
    (57) H -> . EMPTY
    (46) STATEMENT -> . OPENAKOL H CLOSEAKOL
    (47) STATEMENT -> . EXPRESSION
    (48) STATEMENT -> . REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI
    (49) STATEMENT -> . REFERENCE ASSIGN EXPRESSION SEMI
    (50) STATEMENT -> . REFERENCE OPENPAR CLOSEPAR SEMI
    (51) STATEMENT -> . REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI
    (52) STATEMENT -> . IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT
    (53) STATEMENT -> . IF OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (54) STATEMENT -> . FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (55) STATEMENT -> . WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (22) EMPTY -> .
    (58) EXPRESSION -> . EXPRESSION1
    (59) EXPRESSION -> . EXPRESSION2
    (60) EXPRESSION -> . EXPRESSION3
    (61) EXPRESSION -> . EXPRESSION4
    (62) EXPRESSION -> . EXPRESSION5
    (63) EXPRESSION -> . EXPRESSION6
    (42) REFERENCE -> . THIS G
    (43) REFERENCE -> . ID G
    (64) EXPRESSION1 -> . ID ASSIGN ID OP ID SEMI
    (65) EXPRESSION2 -> . TYPE ID ASSIGN ID OP ID SEMI
    (66) EXPRESSION3 -> . TYPE ID SEMI
    (67) EXPRESSION4 -> . TYPE ID ASSIGN VALUE SEMI
    (68) EXPRESSION5 -> . ID ASSIGN VALUE SEMI
    (73) EXPRESSION6 -> . TRUE
    (74) EXPRESSION6 -> . FALSE
    (75) EXPRESSION6 -> . NULL
    (76) EXPRESSION6 -> . ID
    (77) EXPRESSION6 -> . VALUE
    (78) EXPRESSION6 -> . TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI
    (79) EXPRESSION6 -> . ID ASSIGN ID OP ID OP ID SEMI
    (80) EXPRESSION6 -> . EMPTY
    (81) EXPRESSION6 -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I
    (23) TYPE -> . PRIMTYPE
    (24) TYPE -> . CLASSTYPE
    (25) TYPE -> . ARRTYPE
    (69) VALUE -> . VALUE1
    (70) VALUE -> . VALUE2
    (26) PRIMTYPE -> . INT
    (27) PRIMTYPE -> . BOOLEAN
    (28) PRIMTYPE -> . STRING
    (29) PRIMTYPE -> . DOUBLE
    (30) PRIMTYPE -> . CHARACTER
    (31) PRIMTYPE -> . FLOAT
    (32) PRIMTYPE -> . VOID
    (33) CLASSTYPE -> . ID
    (34) ARRTYPE -> . INT OPENBRACKET CLOSEBRACKET
    (35) ARRTYPE -> . CLASSTYPE OPENBRACKET CLOSEBRACKET
    (71) VALUE1 -> . NUMBER
    (72) VALUE2 -> . CHAR

  ! shift/reduce conflict for OPENAKOL resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for THIS resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for CHARACTER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    OPENAKOL        shift and go to state 10
    IF              shift and go to state 22
    FOR             shift and go to state 23
    WHILE           shift and go to state 24
    CLOSEAKOL       reduce using rule 22 (EMPTY -> .)
    THIS            shift and go to state 36
    ID              shift and go to state 59
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    NULL            shift and go to state 47
    INT             shift and go to state 37
    BOOLEAN         shift and go to state 38
    STRING          shift and go to state 39
    DOUBLE          shift and go to state 40
    CHARACTER       shift and go to state 41
    FLOAT           shift and go to state 42
    VOID            shift and go to state 43
    NUMBER          shift and go to state 48
    CHAR            shift and go to state 51

  ! OPENAKOL        [ reduce using rule 22 (EMPTY -> .) ]
  ! IF              [ reduce using rule 22 (EMPTY -> .) ]
  ! FOR             [ reduce using rule 22 (EMPTY -> .) ]
  ! WHILE           [ reduce using rule 22 (EMPTY -> .) ]
  ! THIS            [ reduce using rule 22 (EMPTY -> .) ]
  ! ID              [ reduce using rule 22 (EMPTY -> .) ]
  ! TRUE            [ reduce using rule 22 (EMPTY -> .) ]
  ! FALSE           [ reduce using rule 22 (EMPTY -> .) ]
  ! NULL            [ reduce using rule 22 (EMPTY -> .) ]
  ! INT             [ reduce using rule 22 (EMPTY -> .) ]
  ! BOOLEAN         [ reduce using rule 22 (EMPTY -> .) ]
  ! STRING          [ reduce using rule 22 (EMPTY -> .) ]
  ! DOUBLE          [ reduce using rule 22 (EMPTY -> .) ]
  ! CHARACTER       [ reduce using rule 22 (EMPTY -> .) ]
  ! FLOAT           [ reduce using rule 22 (EMPTY -> .) ]
  ! VOID            [ reduce using rule 22 (EMPTY -> .) ]
  ! NUMBER          [ reduce using rule 22 (EMPTY -> .) ]
  ! CHAR            [ reduce using rule 22 (EMPTY -> .) ]

    H                              shift and go to state 56
    STATEMENT                      shift and go to state 57
    EMPTY                          shift and go to state 58
    EXPRESSION                     shift and go to state 17
    REFERENCE                      shift and go to state 21
    EXPRESSION1                    shift and go to state 30
    EXPRESSION2                    shift and go to state 31
    EXPRESSION3                    shift and go to state 32
    EXPRESSION4                    shift and go to state 33
    EXPRESSION5                    shift and go to state 34
    EXPRESSION6                    shift and go to state 35
    TYPE                           shift and go to state 60
    VALUE                          shift and go to state 44
    PRIMTYPE                       shift and go to state 27
    CLASSTYPE                      shift and go to state 28
    ARRTYPE                        shift and go to state 29
    VALUE1                         shift and go to state 49
    VALUE2                         shift and go to state 50

state 11

    (4) CLASSDECLARATION -> CLASS ID OPENAKOL A . CLOSEAKOL

    CLOSEAKOL       shift and go to state 61


state 12

    (5) A -> FIELDDECLARATION . A
    (5) A -> . FIELDDECLARATION A
    (6) A -> . METHODDECLARATION A
    (7) A -> . EMPTY
    (8) FIELDDECLARATION -> . DECLARATORS ID SEMI
    (9) FIELDDECLARATION -> . STATEMENT
    (10) METHODDECLARATION -> . DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL
    (11) METHODDECLARATION -> . DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL
    (12) METHODDECLARATION -> . DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B CLOSEAKOL
    (13) METHODDECLARATION -> . DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B CLOSEAKOL
    (22) EMPTY -> .
    (16) DECLARATORS -> . C STATIC TYPE
    (17) DECLARATORS -> . STATIC TYPE
    (18) DECLARATORS -> . C TYPE
    (19) DECLARATORS -> . TYPE
    (46) STATEMENT -> . OPENAKOL H CLOSEAKOL
    (47) STATEMENT -> . EXPRESSION
    (48) STATEMENT -> . REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI
    (49) STATEMENT -> . REFERENCE ASSIGN EXPRESSION SEMI
    (50) STATEMENT -> . REFERENCE OPENPAR CLOSEPAR SEMI
    (51) STATEMENT -> . REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI
    (52) STATEMENT -> . IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT
    (53) STATEMENT -> . IF OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (54) STATEMENT -> . FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (55) STATEMENT -> . WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (20) C -> . PUBLIC
    (21) C -> . PRIVATE
    (23) TYPE -> . PRIMTYPE
    (24) TYPE -> . CLASSTYPE
    (25) TYPE -> . ARRTYPE
    (58) EXPRESSION -> . EXPRESSION1
    (59) EXPRESSION -> . EXPRESSION2
    (60) EXPRESSION -> . EXPRESSION3
    (61) EXPRESSION -> . EXPRESSION4
    (62) EXPRESSION -> . EXPRESSION5
    (63) EXPRESSION -> . EXPRESSION6
    (42) REFERENCE -> . THIS G
    (43) REFERENCE -> . ID G
    (26) PRIMTYPE -> . INT
    (27) PRIMTYPE -> . BOOLEAN
    (28) PRIMTYPE -> . STRING
    (29) PRIMTYPE -> . DOUBLE
    (30) PRIMTYPE -> . CHARACTER
    (31) PRIMTYPE -> . FLOAT
    (32) PRIMTYPE -> . VOID
    (33) CLASSTYPE -> . ID
    (34) ARRTYPE -> . INT OPENBRACKET CLOSEBRACKET
    (35) ARRTYPE -> . CLASSTYPE OPENBRACKET CLOSEBRACKET
    (64) EXPRESSION1 -> . ID ASSIGN ID OP ID SEMI
    (65) EXPRESSION2 -> . TYPE ID ASSIGN ID OP ID SEMI
    (66) EXPRESSION3 -> . TYPE ID SEMI
    (67) EXPRESSION4 -> . TYPE ID ASSIGN VALUE SEMI
    (68) EXPRESSION5 -> . ID ASSIGN VALUE SEMI
    (73) EXPRESSION6 -> . TRUE
    (74) EXPRESSION6 -> . FALSE
    (75) EXPRESSION6 -> . NULL
    (76) EXPRESSION6 -> . ID
    (77) EXPRESSION6 -> . VALUE
    (78) EXPRESSION6 -> . TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI
    (79) EXPRESSION6 -> . ID ASSIGN ID OP ID OP ID SEMI
    (80) EXPRESSION6 -> . EMPTY
    (81) EXPRESSION6 -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I
    (69) VALUE -> . VALUE1
    (70) VALUE -> . VALUE2
    (71) VALUE1 -> . NUMBER
    (72) VALUE2 -> . CHAR

  ! shift/reduce conflict for STATIC resolved as shift
  ! shift/reduce conflict for OPENAKOL resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for THIS resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for CHARACTER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    CLOSEAKOL       reduce using rule 22 (EMPTY -> .)
    STATIC          shift and go to state 19
    OPENAKOL        shift and go to state 10
    IF              shift and go to state 22
    FOR             shift and go to state 23
    WHILE           shift and go to state 24
    PUBLIC          shift and go to state 25
    PRIVATE         shift and go to state 26
    THIS            shift and go to state 36
    ID              shift and go to state 9
    INT             shift and go to state 37
    BOOLEAN         shift and go to state 38
    STRING          shift and go to state 39
    DOUBLE          shift and go to state 40
    CHARACTER       shift and go to state 41
    FLOAT           shift and go to state 42
    VOID            shift and go to state 43
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    NULL            shift and go to state 47
    NUMBER          shift and go to state 48
    CHAR            shift and go to state 51

  ! STATIC          [ reduce using rule 22 (EMPTY -> .) ]
  ! OPENAKOL        [ reduce using rule 22 (EMPTY -> .) ]
  ! IF              [ reduce using rule 22 (EMPTY -> .) ]
  ! FOR             [ reduce using rule 22 (EMPTY -> .) ]
  ! WHILE           [ reduce using rule 22 (EMPTY -> .) ]
  ! PUBLIC          [ reduce using rule 22 (EMPTY -> .) ]
  ! PRIVATE         [ reduce using rule 22 (EMPTY -> .) ]
  ! THIS            [ reduce using rule 22 (EMPTY -> .) ]
  ! ID              [ reduce using rule 22 (EMPTY -> .) ]
  ! INT             [ reduce using rule 22 (EMPTY -> .) ]
  ! BOOLEAN         [ reduce using rule 22 (EMPTY -> .) ]
  ! STRING          [ reduce using rule 22 (EMPTY -> .) ]
  ! DOUBLE          [ reduce using rule 22 (EMPTY -> .) ]
  ! CHARACTER       [ reduce using rule 22 (EMPTY -> .) ]
  ! FLOAT           [ reduce using rule 22 (EMPTY -> .) ]
  ! VOID            [ reduce using rule 22 (EMPTY -> .) ]
  ! TRUE            [ reduce using rule 22 (EMPTY -> .) ]
  ! FALSE           [ reduce using rule 22 (EMPTY -> .) ]
  ! NULL            [ reduce using rule 22 (EMPTY -> .) ]
  ! NUMBER          [ reduce using rule 22 (EMPTY -> .) ]
  ! CHAR            [ reduce using rule 22 (EMPTY -> .) ]

    FIELDDECLARATION               shift and go to state 12
    A                              shift and go to state 62
    METHODDECLARATION              shift and go to state 13
    EMPTY                          shift and go to state 14
    DECLARATORS                    shift and go to state 15
    STATEMENT                      shift and go to state 16
    EXPRESSION                     shift and go to state 17
    C                              shift and go to state 18
    TYPE                           shift and go to state 20
    REFERENCE                      shift and go to state 21
    PRIMTYPE                       shift and go to state 27
    CLASSTYPE                      shift and go to state 28
    ARRTYPE                        shift and go to state 29
    EXPRESSION1                    shift and go to state 30
    EXPRESSION2                    shift and go to state 31
    EXPRESSION3                    shift and go to state 32
    EXPRESSION4                    shift and go to state 33
    EXPRESSION5                    shift and go to state 34
    EXPRESSION6                    shift and go to state 35
    VALUE                          shift and go to state 44
    VALUE1                         shift and go to state 49
    VALUE2                         shift and go to state 50

state 13

    (6) A -> METHODDECLARATION . A
    (5) A -> . FIELDDECLARATION A
    (6) A -> . METHODDECLARATION A
    (7) A -> . EMPTY
    (8) FIELDDECLARATION -> . DECLARATORS ID SEMI
    (9) FIELDDECLARATION -> . STATEMENT
    (10) METHODDECLARATION -> . DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL
    (11) METHODDECLARATION -> . DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL
    (12) METHODDECLARATION -> . DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B CLOSEAKOL
    (13) METHODDECLARATION -> . DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B CLOSEAKOL
    (22) EMPTY -> .
    (16) DECLARATORS -> . C STATIC TYPE
    (17) DECLARATORS -> . STATIC TYPE
    (18) DECLARATORS -> . C TYPE
    (19) DECLARATORS -> . TYPE
    (46) STATEMENT -> . OPENAKOL H CLOSEAKOL
    (47) STATEMENT -> . EXPRESSION
    (48) STATEMENT -> . REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI
    (49) STATEMENT -> . REFERENCE ASSIGN EXPRESSION SEMI
    (50) STATEMENT -> . REFERENCE OPENPAR CLOSEPAR SEMI
    (51) STATEMENT -> . REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI
    (52) STATEMENT -> . IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT
    (53) STATEMENT -> . IF OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (54) STATEMENT -> . FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (55) STATEMENT -> . WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (20) C -> . PUBLIC
    (21) C -> . PRIVATE
    (23) TYPE -> . PRIMTYPE
    (24) TYPE -> . CLASSTYPE
    (25) TYPE -> . ARRTYPE
    (58) EXPRESSION -> . EXPRESSION1
    (59) EXPRESSION -> . EXPRESSION2
    (60) EXPRESSION -> . EXPRESSION3
    (61) EXPRESSION -> . EXPRESSION4
    (62) EXPRESSION -> . EXPRESSION5
    (63) EXPRESSION -> . EXPRESSION6
    (42) REFERENCE -> . THIS G
    (43) REFERENCE -> . ID G
    (26) PRIMTYPE -> . INT
    (27) PRIMTYPE -> . BOOLEAN
    (28) PRIMTYPE -> . STRING
    (29) PRIMTYPE -> . DOUBLE
    (30) PRIMTYPE -> . CHARACTER
    (31) PRIMTYPE -> . FLOAT
    (32) PRIMTYPE -> . VOID
    (33) CLASSTYPE -> . ID
    (34) ARRTYPE -> . INT OPENBRACKET CLOSEBRACKET
    (35) ARRTYPE -> . CLASSTYPE OPENBRACKET CLOSEBRACKET
    (64) EXPRESSION1 -> . ID ASSIGN ID OP ID SEMI
    (65) EXPRESSION2 -> . TYPE ID ASSIGN ID OP ID SEMI
    (66) EXPRESSION3 -> . TYPE ID SEMI
    (67) EXPRESSION4 -> . TYPE ID ASSIGN VALUE SEMI
    (68) EXPRESSION5 -> . ID ASSIGN VALUE SEMI
    (73) EXPRESSION6 -> . TRUE
    (74) EXPRESSION6 -> . FALSE
    (75) EXPRESSION6 -> . NULL
    (76) EXPRESSION6 -> . ID
    (77) EXPRESSION6 -> . VALUE
    (78) EXPRESSION6 -> . TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI
    (79) EXPRESSION6 -> . ID ASSIGN ID OP ID OP ID SEMI
    (80) EXPRESSION6 -> . EMPTY
    (81) EXPRESSION6 -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I
    (69) VALUE -> . VALUE1
    (70) VALUE -> . VALUE2
    (71) VALUE1 -> . NUMBER
    (72) VALUE2 -> . CHAR

  ! shift/reduce conflict for STATIC resolved as shift
  ! shift/reduce conflict for OPENAKOL resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for THIS resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for CHARACTER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    CLOSEAKOL       reduce using rule 22 (EMPTY -> .)
    STATIC          shift and go to state 19
    OPENAKOL        shift and go to state 10
    IF              shift and go to state 22
    FOR             shift and go to state 23
    WHILE           shift and go to state 24
    PUBLIC          shift and go to state 25
    PRIVATE         shift and go to state 26
    THIS            shift and go to state 36
    ID              shift and go to state 9
    INT             shift and go to state 37
    BOOLEAN         shift and go to state 38
    STRING          shift and go to state 39
    DOUBLE          shift and go to state 40
    CHARACTER       shift and go to state 41
    FLOAT           shift and go to state 42
    VOID            shift and go to state 43
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    NULL            shift and go to state 47
    NUMBER          shift and go to state 48
    CHAR            shift and go to state 51

  ! STATIC          [ reduce using rule 22 (EMPTY -> .) ]
  ! OPENAKOL        [ reduce using rule 22 (EMPTY -> .) ]
  ! IF              [ reduce using rule 22 (EMPTY -> .) ]
  ! FOR             [ reduce using rule 22 (EMPTY -> .) ]
  ! WHILE           [ reduce using rule 22 (EMPTY -> .) ]
  ! PUBLIC          [ reduce using rule 22 (EMPTY -> .) ]
  ! PRIVATE         [ reduce using rule 22 (EMPTY -> .) ]
  ! THIS            [ reduce using rule 22 (EMPTY -> .) ]
  ! ID              [ reduce using rule 22 (EMPTY -> .) ]
  ! INT             [ reduce using rule 22 (EMPTY -> .) ]
  ! BOOLEAN         [ reduce using rule 22 (EMPTY -> .) ]
  ! STRING          [ reduce using rule 22 (EMPTY -> .) ]
  ! DOUBLE          [ reduce using rule 22 (EMPTY -> .) ]
  ! CHARACTER       [ reduce using rule 22 (EMPTY -> .) ]
  ! FLOAT           [ reduce using rule 22 (EMPTY -> .) ]
  ! VOID            [ reduce using rule 22 (EMPTY -> .) ]
  ! TRUE            [ reduce using rule 22 (EMPTY -> .) ]
  ! FALSE           [ reduce using rule 22 (EMPTY -> .) ]
  ! NULL            [ reduce using rule 22 (EMPTY -> .) ]
  ! NUMBER          [ reduce using rule 22 (EMPTY -> .) ]
  ! CHAR            [ reduce using rule 22 (EMPTY -> .) ]

    METHODDECLARATION              shift and go to state 13
    A                              shift and go to state 63
    FIELDDECLARATION               shift and go to state 12
    EMPTY                          shift and go to state 14
    DECLARATORS                    shift and go to state 15
    STATEMENT                      shift and go to state 16
    EXPRESSION                     shift and go to state 17
    C                              shift and go to state 18
    TYPE                           shift and go to state 20
    REFERENCE                      shift and go to state 21
    PRIMTYPE                       shift and go to state 27
    CLASSTYPE                      shift and go to state 28
    ARRTYPE                        shift and go to state 29
    EXPRESSION1                    shift and go to state 30
    EXPRESSION2                    shift and go to state 31
    EXPRESSION3                    shift and go to state 32
    EXPRESSION4                    shift and go to state 33
    EXPRESSION5                    shift and go to state 34
    EXPRESSION6                    shift and go to state 35
    VALUE                          shift and go to state 44
    VALUE1                         shift and go to state 49
    VALUE2                         shift and go to state 50

state 14

    (7) A -> EMPTY .
    (80) EXPRESSION6 -> EMPTY .

  ! reduce/reduce conflict for CLOSEAKOL resolved using rule 7 (A -> EMPTY .)
    CLOSEAKOL       reduce using rule 7 (A -> EMPTY .)
    STATIC          reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    OPENAKOL        reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    IF              reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    FOR             reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    WHILE           reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    PUBLIC          reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    PRIVATE         reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    THIS            reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    ID              reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    INT             reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    BOOLEAN         reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    STRING          reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    DOUBLE          reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    CHARACTER       reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    FLOAT           reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    VOID            reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    TRUE            reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    FALSE           reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    NULL            reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    NUMBER          reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    CHAR            reduce using rule 80 (EXPRESSION6 -> EMPTY .)

  ! CLOSEAKOL       [ reduce using rule 80 (EXPRESSION6 -> EMPTY .) ]


state 15

    (8) FIELDDECLARATION -> DECLARATORS . ID SEMI
    (10) METHODDECLARATION -> DECLARATORS . ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL
    (11) METHODDECLARATION -> DECLARATORS . ID OPENPAR CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL
    (12) METHODDECLARATION -> DECLARATORS . ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B CLOSEAKOL
    (13) METHODDECLARATION -> DECLARATORS . ID OPENPAR CLOSEPAR OPENAKOL B CLOSEAKOL

    ID              shift and go to state 64


state 16

    (9) FIELDDECLARATION -> STATEMENT .

    STATIC          reduce using rule 9 (FIELDDECLARATION -> STATEMENT .)
    OPENAKOL        reduce using rule 9 (FIELDDECLARATION -> STATEMENT .)
    IF              reduce using rule 9 (FIELDDECLARATION -> STATEMENT .)
    FOR             reduce using rule 9 (FIELDDECLARATION -> STATEMENT .)
    WHILE           reduce using rule 9 (FIELDDECLARATION -> STATEMENT .)
    PUBLIC          reduce using rule 9 (FIELDDECLARATION -> STATEMENT .)
    PRIVATE         reduce using rule 9 (FIELDDECLARATION -> STATEMENT .)
    THIS            reduce using rule 9 (FIELDDECLARATION -> STATEMENT .)
    ID              reduce using rule 9 (FIELDDECLARATION -> STATEMENT .)
    INT             reduce using rule 9 (FIELDDECLARATION -> STATEMENT .)
    BOOLEAN         reduce using rule 9 (FIELDDECLARATION -> STATEMENT .)
    STRING          reduce using rule 9 (FIELDDECLARATION -> STATEMENT .)
    DOUBLE          reduce using rule 9 (FIELDDECLARATION -> STATEMENT .)
    CHARACTER       reduce using rule 9 (FIELDDECLARATION -> STATEMENT .)
    FLOAT           reduce using rule 9 (FIELDDECLARATION -> STATEMENT .)
    VOID            reduce using rule 9 (FIELDDECLARATION -> STATEMENT .)
    TRUE            reduce using rule 9 (FIELDDECLARATION -> STATEMENT .)
    FALSE           reduce using rule 9 (FIELDDECLARATION -> STATEMENT .)
    NULL            reduce using rule 9 (FIELDDECLARATION -> STATEMENT .)
    NUMBER          reduce using rule 9 (FIELDDECLARATION -> STATEMENT .)
    CHAR            reduce using rule 9 (FIELDDECLARATION -> STATEMENT .)
    CLOSEAKOL       reduce using rule 9 (FIELDDECLARATION -> STATEMENT .)


state 17

    (47) STATEMENT -> EXPRESSION .

    STATIC          reduce using rule 47 (STATEMENT -> EXPRESSION .)
    OPENAKOL        reduce using rule 47 (STATEMENT -> EXPRESSION .)
    IF              reduce using rule 47 (STATEMENT -> EXPRESSION .)
    FOR             reduce using rule 47 (STATEMENT -> EXPRESSION .)
    WHILE           reduce using rule 47 (STATEMENT -> EXPRESSION .)
    PUBLIC          reduce using rule 47 (STATEMENT -> EXPRESSION .)
    PRIVATE         reduce using rule 47 (STATEMENT -> EXPRESSION .)
    THIS            reduce using rule 47 (STATEMENT -> EXPRESSION .)
    ID              reduce using rule 47 (STATEMENT -> EXPRESSION .)
    INT             reduce using rule 47 (STATEMENT -> EXPRESSION .)
    BOOLEAN         reduce using rule 47 (STATEMENT -> EXPRESSION .)
    STRING          reduce using rule 47 (STATEMENT -> EXPRESSION .)
    DOUBLE          reduce using rule 47 (STATEMENT -> EXPRESSION .)
    CHARACTER       reduce using rule 47 (STATEMENT -> EXPRESSION .)
    FLOAT           reduce using rule 47 (STATEMENT -> EXPRESSION .)
    VOID            reduce using rule 47 (STATEMENT -> EXPRESSION .)
    TRUE            reduce using rule 47 (STATEMENT -> EXPRESSION .)
    FALSE           reduce using rule 47 (STATEMENT -> EXPRESSION .)
    NULL            reduce using rule 47 (STATEMENT -> EXPRESSION .)
    NUMBER          reduce using rule 47 (STATEMENT -> EXPRESSION .)
    CHAR            reduce using rule 47 (STATEMENT -> EXPRESSION .)
    CLOSEAKOL       reduce using rule 47 (STATEMENT -> EXPRESSION .)
    ELSE            reduce using rule 47 (STATEMENT -> EXPRESSION .)
    RETURN          reduce using rule 47 (STATEMENT -> EXPRESSION .)


state 18

    (16) DECLARATORS -> C . STATIC TYPE
    (18) DECLARATORS -> C . TYPE
    (23) TYPE -> . PRIMTYPE
    (24) TYPE -> . CLASSTYPE
    (25) TYPE -> . ARRTYPE
    (26) PRIMTYPE -> . INT
    (27) PRIMTYPE -> . BOOLEAN
    (28) PRIMTYPE -> . STRING
    (29) PRIMTYPE -> . DOUBLE
    (30) PRIMTYPE -> . CHARACTER
    (31) PRIMTYPE -> . FLOAT
    (32) PRIMTYPE -> . VOID
    (33) CLASSTYPE -> . ID
    (34) ARRTYPE -> . INT OPENBRACKET CLOSEBRACKET
    (35) ARRTYPE -> . CLASSTYPE OPENBRACKET CLOSEBRACKET

    STATIC          shift and go to state 65
    INT             shift and go to state 37
    BOOLEAN         shift and go to state 38
    STRING          shift and go to state 39
    DOUBLE          shift and go to state 40
    CHARACTER       shift and go to state 41
    FLOAT           shift and go to state 42
    VOID            shift and go to state 43
    ID              shift and go to state 67

    TYPE                           shift and go to state 66
    PRIMTYPE                       shift and go to state 27
    CLASSTYPE                      shift and go to state 28
    ARRTYPE                        shift and go to state 29

state 19

    (17) DECLARATORS -> STATIC . TYPE
    (23) TYPE -> . PRIMTYPE
    (24) TYPE -> . CLASSTYPE
    (25) TYPE -> . ARRTYPE
    (26) PRIMTYPE -> . INT
    (27) PRIMTYPE -> . BOOLEAN
    (28) PRIMTYPE -> . STRING
    (29) PRIMTYPE -> . DOUBLE
    (30) PRIMTYPE -> . CHARACTER
    (31) PRIMTYPE -> . FLOAT
    (32) PRIMTYPE -> . VOID
    (33) CLASSTYPE -> . ID
    (34) ARRTYPE -> . INT OPENBRACKET CLOSEBRACKET
    (35) ARRTYPE -> . CLASSTYPE OPENBRACKET CLOSEBRACKET

    INT             shift and go to state 37
    BOOLEAN         shift and go to state 38
    STRING          shift and go to state 39
    DOUBLE          shift and go to state 40
    CHARACTER       shift and go to state 41
    FLOAT           shift and go to state 42
    VOID            shift and go to state 43
    ID              shift and go to state 67

    TYPE                           shift and go to state 68
    PRIMTYPE                       shift and go to state 27
    CLASSTYPE                      shift and go to state 28
    ARRTYPE                        shift and go to state 29

state 20

    (19) DECLARATORS -> TYPE .
    (65) EXPRESSION2 -> TYPE . ID ASSIGN ID OP ID SEMI
    (66) EXPRESSION3 -> TYPE . ID SEMI
    (67) EXPRESSION4 -> TYPE . ID ASSIGN VALUE SEMI
    (78) EXPRESSION6 -> TYPE . ID ASSIGN EXPRESSION OP EXPRESSION SEMI

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 69

  ! ID              [ reduce using rule 19 (DECLARATORS -> TYPE .) ]


state 21

    (48) STATEMENT -> REFERENCE . OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI
    (49) STATEMENT -> REFERENCE . ASSIGN EXPRESSION SEMI
    (50) STATEMENT -> REFERENCE . OPENPAR CLOSEPAR SEMI
    (51) STATEMENT -> REFERENCE . OPENPAR ARGUMENTLIST CLOSEPAR SEMI
    (81) EXPRESSION6 -> REFERENCE . ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I

    OPENBRACKET     shift and go to state 70
    ASSIGN          shift and go to state 71
    OPENPAR         shift and go to state 72


state 22

    (52) STATEMENT -> IF . OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT
    (53) STATEMENT -> IF . OPENPAR EXPRESSION CLOSEPAR STATEMENT

    OPENPAR         shift and go to state 73


state 23

    (54) STATEMENT -> FOR . OPENPAR EXPRESSION CLOSEPAR STATEMENT

    OPENPAR         shift and go to state 74


state 24

    (55) STATEMENT -> WHILE . OPENPAR EXPRESSION CLOSEPAR STATEMENT

    OPENPAR         shift and go to state 75


state 25

    (20) C -> PUBLIC .

    STATIC          reduce using rule 20 (C -> PUBLIC .)
    INT             reduce using rule 20 (C -> PUBLIC .)
    BOOLEAN         reduce using rule 20 (C -> PUBLIC .)
    STRING          reduce using rule 20 (C -> PUBLIC .)
    DOUBLE          reduce using rule 20 (C -> PUBLIC .)
    CHARACTER       reduce using rule 20 (C -> PUBLIC .)
    FLOAT           reduce using rule 20 (C -> PUBLIC .)
    VOID            reduce using rule 20 (C -> PUBLIC .)
    ID              reduce using rule 20 (C -> PUBLIC .)


state 26

    (21) C -> PRIVATE .

    STATIC          reduce using rule 21 (C -> PRIVATE .)
    INT             reduce using rule 21 (C -> PRIVATE .)
    BOOLEAN         reduce using rule 21 (C -> PRIVATE .)
    STRING          reduce using rule 21 (C -> PRIVATE .)
    DOUBLE          reduce using rule 21 (C -> PRIVATE .)
    CHARACTER       reduce using rule 21 (C -> PRIVATE .)
    FLOAT           reduce using rule 21 (C -> PRIVATE .)
    VOID            reduce using rule 21 (C -> PRIVATE .)
    ID              reduce using rule 21 (C -> PRIVATE .)


state 27

    (23) TYPE -> PRIMTYPE .

    ID              reduce using rule 23 (TYPE -> PRIMTYPE .)


state 28

    (24) TYPE -> CLASSTYPE .
    (35) ARRTYPE -> CLASSTYPE . OPENBRACKET CLOSEBRACKET

    ID              reduce using rule 24 (TYPE -> CLASSTYPE .)
    OPENBRACKET     shift and go to state 76


state 29

    (25) TYPE -> ARRTYPE .

    ID              reduce using rule 25 (TYPE -> ARRTYPE .)


state 30

    (58) EXPRESSION -> EXPRESSION1 .

    STATIC          reduce using rule 58 (EXPRESSION -> EXPRESSION1 .)
    OPENAKOL        reduce using rule 58 (EXPRESSION -> EXPRESSION1 .)
    IF              reduce using rule 58 (EXPRESSION -> EXPRESSION1 .)
    FOR             reduce using rule 58 (EXPRESSION -> EXPRESSION1 .)
    WHILE           reduce using rule 58 (EXPRESSION -> EXPRESSION1 .)
    PUBLIC          reduce using rule 58 (EXPRESSION -> EXPRESSION1 .)
    PRIVATE         reduce using rule 58 (EXPRESSION -> EXPRESSION1 .)
    THIS            reduce using rule 58 (EXPRESSION -> EXPRESSION1 .)
    ID              reduce using rule 58 (EXPRESSION -> EXPRESSION1 .)
    INT             reduce using rule 58 (EXPRESSION -> EXPRESSION1 .)
    BOOLEAN         reduce using rule 58 (EXPRESSION -> EXPRESSION1 .)
    STRING          reduce using rule 58 (EXPRESSION -> EXPRESSION1 .)
    DOUBLE          reduce using rule 58 (EXPRESSION -> EXPRESSION1 .)
    CHARACTER       reduce using rule 58 (EXPRESSION -> EXPRESSION1 .)
    FLOAT           reduce using rule 58 (EXPRESSION -> EXPRESSION1 .)
    VOID            reduce using rule 58 (EXPRESSION -> EXPRESSION1 .)
    TRUE            reduce using rule 58 (EXPRESSION -> EXPRESSION1 .)
    FALSE           reduce using rule 58 (EXPRESSION -> EXPRESSION1 .)
    NULL            reduce using rule 58 (EXPRESSION -> EXPRESSION1 .)
    NUMBER          reduce using rule 58 (EXPRESSION -> EXPRESSION1 .)
    CHAR            reduce using rule 58 (EXPRESSION -> EXPRESSION1 .)
    CLOSEAKOL       reduce using rule 58 (EXPRESSION -> EXPRESSION1 .)
    CLOSEBRACKET    reduce using rule 58 (EXPRESSION -> EXPRESSION1 .)
    SEMI            reduce using rule 58 (EXPRESSION -> EXPRESSION1 .)
    COMMA           reduce using rule 58 (EXPRESSION -> EXPRESSION1 .)
    CLOSEPAR        reduce using rule 58 (EXPRESSION -> EXPRESSION1 .)
    LESSEQUAL       reduce using rule 58 (EXPRESSION -> EXPRESSION1 .)
    ASSIGN          reduce using rule 58 (EXPRESSION -> EXPRESSION1 .)
    EQUALS          reduce using rule 58 (EXPRESSION -> EXPRESSION1 .)
    GREATEREQUAL    reduce using rule 58 (EXPRESSION -> EXPRESSION1 .)
    GREATERTHAN     reduce using rule 58 (EXPRESSION -> EXPRESSION1 .)
    LESSTHAN        reduce using rule 58 (EXPRESSION -> EXPRESSION1 .)
    ADD             reduce using rule 58 (EXPRESSION -> EXPRESSION1 .)
    MINUS           reduce using rule 58 (EXPRESSION -> EXPRESSION1 .)
    MULT            reduce using rule 58 (EXPRESSION -> EXPRESSION1 .)
    NOTEQUAL        reduce using rule 58 (EXPRESSION -> EXPRESSION1 .)
    DIVIDE          reduce using rule 58 (EXPRESSION -> EXPRESSION1 .)
    PEQUAL          reduce using rule 58 (EXPRESSION -> EXPRESSION1 .)
    MEQUAL          reduce using rule 58 (EXPRESSION -> EXPRESSION1 .)
    PLUSPLUS        reduce using rule 58 (EXPRESSION -> EXPRESSION1 .)
    ELSE            reduce using rule 58 (EXPRESSION -> EXPRESSION1 .)
    RETURN          reduce using rule 58 (EXPRESSION -> EXPRESSION1 .)


state 31

    (59) EXPRESSION -> EXPRESSION2 .

    STATIC          reduce using rule 59 (EXPRESSION -> EXPRESSION2 .)
    OPENAKOL        reduce using rule 59 (EXPRESSION -> EXPRESSION2 .)
    IF              reduce using rule 59 (EXPRESSION -> EXPRESSION2 .)
    FOR             reduce using rule 59 (EXPRESSION -> EXPRESSION2 .)
    WHILE           reduce using rule 59 (EXPRESSION -> EXPRESSION2 .)
    PUBLIC          reduce using rule 59 (EXPRESSION -> EXPRESSION2 .)
    PRIVATE         reduce using rule 59 (EXPRESSION -> EXPRESSION2 .)
    THIS            reduce using rule 59 (EXPRESSION -> EXPRESSION2 .)
    ID              reduce using rule 59 (EXPRESSION -> EXPRESSION2 .)
    INT             reduce using rule 59 (EXPRESSION -> EXPRESSION2 .)
    BOOLEAN         reduce using rule 59 (EXPRESSION -> EXPRESSION2 .)
    STRING          reduce using rule 59 (EXPRESSION -> EXPRESSION2 .)
    DOUBLE          reduce using rule 59 (EXPRESSION -> EXPRESSION2 .)
    CHARACTER       reduce using rule 59 (EXPRESSION -> EXPRESSION2 .)
    FLOAT           reduce using rule 59 (EXPRESSION -> EXPRESSION2 .)
    VOID            reduce using rule 59 (EXPRESSION -> EXPRESSION2 .)
    TRUE            reduce using rule 59 (EXPRESSION -> EXPRESSION2 .)
    FALSE           reduce using rule 59 (EXPRESSION -> EXPRESSION2 .)
    NULL            reduce using rule 59 (EXPRESSION -> EXPRESSION2 .)
    NUMBER          reduce using rule 59 (EXPRESSION -> EXPRESSION2 .)
    CHAR            reduce using rule 59 (EXPRESSION -> EXPRESSION2 .)
    CLOSEAKOL       reduce using rule 59 (EXPRESSION -> EXPRESSION2 .)
    CLOSEBRACKET    reduce using rule 59 (EXPRESSION -> EXPRESSION2 .)
    SEMI            reduce using rule 59 (EXPRESSION -> EXPRESSION2 .)
    COMMA           reduce using rule 59 (EXPRESSION -> EXPRESSION2 .)
    CLOSEPAR        reduce using rule 59 (EXPRESSION -> EXPRESSION2 .)
    LESSEQUAL       reduce using rule 59 (EXPRESSION -> EXPRESSION2 .)
    ASSIGN          reduce using rule 59 (EXPRESSION -> EXPRESSION2 .)
    EQUALS          reduce using rule 59 (EXPRESSION -> EXPRESSION2 .)
    GREATEREQUAL    reduce using rule 59 (EXPRESSION -> EXPRESSION2 .)
    GREATERTHAN     reduce using rule 59 (EXPRESSION -> EXPRESSION2 .)
    LESSTHAN        reduce using rule 59 (EXPRESSION -> EXPRESSION2 .)
    ADD             reduce using rule 59 (EXPRESSION -> EXPRESSION2 .)
    MINUS           reduce using rule 59 (EXPRESSION -> EXPRESSION2 .)
    MULT            reduce using rule 59 (EXPRESSION -> EXPRESSION2 .)
    NOTEQUAL        reduce using rule 59 (EXPRESSION -> EXPRESSION2 .)
    DIVIDE          reduce using rule 59 (EXPRESSION -> EXPRESSION2 .)
    PEQUAL          reduce using rule 59 (EXPRESSION -> EXPRESSION2 .)
    MEQUAL          reduce using rule 59 (EXPRESSION -> EXPRESSION2 .)
    PLUSPLUS        reduce using rule 59 (EXPRESSION -> EXPRESSION2 .)
    ELSE            reduce using rule 59 (EXPRESSION -> EXPRESSION2 .)
    RETURN          reduce using rule 59 (EXPRESSION -> EXPRESSION2 .)


state 32

    (60) EXPRESSION -> EXPRESSION3 .

    STATIC          reduce using rule 60 (EXPRESSION -> EXPRESSION3 .)
    OPENAKOL        reduce using rule 60 (EXPRESSION -> EXPRESSION3 .)
    IF              reduce using rule 60 (EXPRESSION -> EXPRESSION3 .)
    FOR             reduce using rule 60 (EXPRESSION -> EXPRESSION3 .)
    WHILE           reduce using rule 60 (EXPRESSION -> EXPRESSION3 .)
    PUBLIC          reduce using rule 60 (EXPRESSION -> EXPRESSION3 .)
    PRIVATE         reduce using rule 60 (EXPRESSION -> EXPRESSION3 .)
    THIS            reduce using rule 60 (EXPRESSION -> EXPRESSION3 .)
    ID              reduce using rule 60 (EXPRESSION -> EXPRESSION3 .)
    INT             reduce using rule 60 (EXPRESSION -> EXPRESSION3 .)
    BOOLEAN         reduce using rule 60 (EXPRESSION -> EXPRESSION3 .)
    STRING          reduce using rule 60 (EXPRESSION -> EXPRESSION3 .)
    DOUBLE          reduce using rule 60 (EXPRESSION -> EXPRESSION3 .)
    CHARACTER       reduce using rule 60 (EXPRESSION -> EXPRESSION3 .)
    FLOAT           reduce using rule 60 (EXPRESSION -> EXPRESSION3 .)
    VOID            reduce using rule 60 (EXPRESSION -> EXPRESSION3 .)
    TRUE            reduce using rule 60 (EXPRESSION -> EXPRESSION3 .)
    FALSE           reduce using rule 60 (EXPRESSION -> EXPRESSION3 .)
    NULL            reduce using rule 60 (EXPRESSION -> EXPRESSION3 .)
    NUMBER          reduce using rule 60 (EXPRESSION -> EXPRESSION3 .)
    CHAR            reduce using rule 60 (EXPRESSION -> EXPRESSION3 .)
    CLOSEAKOL       reduce using rule 60 (EXPRESSION -> EXPRESSION3 .)
    CLOSEBRACKET    reduce using rule 60 (EXPRESSION -> EXPRESSION3 .)
    SEMI            reduce using rule 60 (EXPRESSION -> EXPRESSION3 .)
    COMMA           reduce using rule 60 (EXPRESSION -> EXPRESSION3 .)
    CLOSEPAR        reduce using rule 60 (EXPRESSION -> EXPRESSION3 .)
    LESSEQUAL       reduce using rule 60 (EXPRESSION -> EXPRESSION3 .)
    ASSIGN          reduce using rule 60 (EXPRESSION -> EXPRESSION3 .)
    EQUALS          reduce using rule 60 (EXPRESSION -> EXPRESSION3 .)
    GREATEREQUAL    reduce using rule 60 (EXPRESSION -> EXPRESSION3 .)
    GREATERTHAN     reduce using rule 60 (EXPRESSION -> EXPRESSION3 .)
    LESSTHAN        reduce using rule 60 (EXPRESSION -> EXPRESSION3 .)
    ADD             reduce using rule 60 (EXPRESSION -> EXPRESSION3 .)
    MINUS           reduce using rule 60 (EXPRESSION -> EXPRESSION3 .)
    MULT            reduce using rule 60 (EXPRESSION -> EXPRESSION3 .)
    NOTEQUAL        reduce using rule 60 (EXPRESSION -> EXPRESSION3 .)
    DIVIDE          reduce using rule 60 (EXPRESSION -> EXPRESSION3 .)
    PEQUAL          reduce using rule 60 (EXPRESSION -> EXPRESSION3 .)
    MEQUAL          reduce using rule 60 (EXPRESSION -> EXPRESSION3 .)
    PLUSPLUS        reduce using rule 60 (EXPRESSION -> EXPRESSION3 .)
    ELSE            reduce using rule 60 (EXPRESSION -> EXPRESSION3 .)
    RETURN          reduce using rule 60 (EXPRESSION -> EXPRESSION3 .)


state 33

    (61) EXPRESSION -> EXPRESSION4 .

    STATIC          reduce using rule 61 (EXPRESSION -> EXPRESSION4 .)
    OPENAKOL        reduce using rule 61 (EXPRESSION -> EXPRESSION4 .)
    IF              reduce using rule 61 (EXPRESSION -> EXPRESSION4 .)
    FOR             reduce using rule 61 (EXPRESSION -> EXPRESSION4 .)
    WHILE           reduce using rule 61 (EXPRESSION -> EXPRESSION4 .)
    PUBLIC          reduce using rule 61 (EXPRESSION -> EXPRESSION4 .)
    PRIVATE         reduce using rule 61 (EXPRESSION -> EXPRESSION4 .)
    THIS            reduce using rule 61 (EXPRESSION -> EXPRESSION4 .)
    ID              reduce using rule 61 (EXPRESSION -> EXPRESSION4 .)
    INT             reduce using rule 61 (EXPRESSION -> EXPRESSION4 .)
    BOOLEAN         reduce using rule 61 (EXPRESSION -> EXPRESSION4 .)
    STRING          reduce using rule 61 (EXPRESSION -> EXPRESSION4 .)
    DOUBLE          reduce using rule 61 (EXPRESSION -> EXPRESSION4 .)
    CHARACTER       reduce using rule 61 (EXPRESSION -> EXPRESSION4 .)
    FLOAT           reduce using rule 61 (EXPRESSION -> EXPRESSION4 .)
    VOID            reduce using rule 61 (EXPRESSION -> EXPRESSION4 .)
    TRUE            reduce using rule 61 (EXPRESSION -> EXPRESSION4 .)
    FALSE           reduce using rule 61 (EXPRESSION -> EXPRESSION4 .)
    NULL            reduce using rule 61 (EXPRESSION -> EXPRESSION4 .)
    NUMBER          reduce using rule 61 (EXPRESSION -> EXPRESSION4 .)
    CHAR            reduce using rule 61 (EXPRESSION -> EXPRESSION4 .)
    CLOSEAKOL       reduce using rule 61 (EXPRESSION -> EXPRESSION4 .)
    CLOSEBRACKET    reduce using rule 61 (EXPRESSION -> EXPRESSION4 .)
    SEMI            reduce using rule 61 (EXPRESSION -> EXPRESSION4 .)
    COMMA           reduce using rule 61 (EXPRESSION -> EXPRESSION4 .)
    CLOSEPAR        reduce using rule 61 (EXPRESSION -> EXPRESSION4 .)
    LESSEQUAL       reduce using rule 61 (EXPRESSION -> EXPRESSION4 .)
    ASSIGN          reduce using rule 61 (EXPRESSION -> EXPRESSION4 .)
    EQUALS          reduce using rule 61 (EXPRESSION -> EXPRESSION4 .)
    GREATEREQUAL    reduce using rule 61 (EXPRESSION -> EXPRESSION4 .)
    GREATERTHAN     reduce using rule 61 (EXPRESSION -> EXPRESSION4 .)
    LESSTHAN        reduce using rule 61 (EXPRESSION -> EXPRESSION4 .)
    ADD             reduce using rule 61 (EXPRESSION -> EXPRESSION4 .)
    MINUS           reduce using rule 61 (EXPRESSION -> EXPRESSION4 .)
    MULT            reduce using rule 61 (EXPRESSION -> EXPRESSION4 .)
    NOTEQUAL        reduce using rule 61 (EXPRESSION -> EXPRESSION4 .)
    DIVIDE          reduce using rule 61 (EXPRESSION -> EXPRESSION4 .)
    PEQUAL          reduce using rule 61 (EXPRESSION -> EXPRESSION4 .)
    MEQUAL          reduce using rule 61 (EXPRESSION -> EXPRESSION4 .)
    PLUSPLUS        reduce using rule 61 (EXPRESSION -> EXPRESSION4 .)
    ELSE            reduce using rule 61 (EXPRESSION -> EXPRESSION4 .)
    RETURN          reduce using rule 61 (EXPRESSION -> EXPRESSION4 .)


state 34

    (62) EXPRESSION -> EXPRESSION5 .

    STATIC          reduce using rule 62 (EXPRESSION -> EXPRESSION5 .)
    OPENAKOL        reduce using rule 62 (EXPRESSION -> EXPRESSION5 .)
    IF              reduce using rule 62 (EXPRESSION -> EXPRESSION5 .)
    FOR             reduce using rule 62 (EXPRESSION -> EXPRESSION5 .)
    WHILE           reduce using rule 62 (EXPRESSION -> EXPRESSION5 .)
    PUBLIC          reduce using rule 62 (EXPRESSION -> EXPRESSION5 .)
    PRIVATE         reduce using rule 62 (EXPRESSION -> EXPRESSION5 .)
    THIS            reduce using rule 62 (EXPRESSION -> EXPRESSION5 .)
    ID              reduce using rule 62 (EXPRESSION -> EXPRESSION5 .)
    INT             reduce using rule 62 (EXPRESSION -> EXPRESSION5 .)
    BOOLEAN         reduce using rule 62 (EXPRESSION -> EXPRESSION5 .)
    STRING          reduce using rule 62 (EXPRESSION -> EXPRESSION5 .)
    DOUBLE          reduce using rule 62 (EXPRESSION -> EXPRESSION5 .)
    CHARACTER       reduce using rule 62 (EXPRESSION -> EXPRESSION5 .)
    FLOAT           reduce using rule 62 (EXPRESSION -> EXPRESSION5 .)
    VOID            reduce using rule 62 (EXPRESSION -> EXPRESSION5 .)
    TRUE            reduce using rule 62 (EXPRESSION -> EXPRESSION5 .)
    FALSE           reduce using rule 62 (EXPRESSION -> EXPRESSION5 .)
    NULL            reduce using rule 62 (EXPRESSION -> EXPRESSION5 .)
    NUMBER          reduce using rule 62 (EXPRESSION -> EXPRESSION5 .)
    CHAR            reduce using rule 62 (EXPRESSION -> EXPRESSION5 .)
    CLOSEAKOL       reduce using rule 62 (EXPRESSION -> EXPRESSION5 .)
    CLOSEBRACKET    reduce using rule 62 (EXPRESSION -> EXPRESSION5 .)
    SEMI            reduce using rule 62 (EXPRESSION -> EXPRESSION5 .)
    COMMA           reduce using rule 62 (EXPRESSION -> EXPRESSION5 .)
    CLOSEPAR        reduce using rule 62 (EXPRESSION -> EXPRESSION5 .)
    LESSEQUAL       reduce using rule 62 (EXPRESSION -> EXPRESSION5 .)
    ASSIGN          reduce using rule 62 (EXPRESSION -> EXPRESSION5 .)
    EQUALS          reduce using rule 62 (EXPRESSION -> EXPRESSION5 .)
    GREATEREQUAL    reduce using rule 62 (EXPRESSION -> EXPRESSION5 .)
    GREATERTHAN     reduce using rule 62 (EXPRESSION -> EXPRESSION5 .)
    LESSTHAN        reduce using rule 62 (EXPRESSION -> EXPRESSION5 .)
    ADD             reduce using rule 62 (EXPRESSION -> EXPRESSION5 .)
    MINUS           reduce using rule 62 (EXPRESSION -> EXPRESSION5 .)
    MULT            reduce using rule 62 (EXPRESSION -> EXPRESSION5 .)
    NOTEQUAL        reduce using rule 62 (EXPRESSION -> EXPRESSION5 .)
    DIVIDE          reduce using rule 62 (EXPRESSION -> EXPRESSION5 .)
    PEQUAL          reduce using rule 62 (EXPRESSION -> EXPRESSION5 .)
    MEQUAL          reduce using rule 62 (EXPRESSION -> EXPRESSION5 .)
    PLUSPLUS        reduce using rule 62 (EXPRESSION -> EXPRESSION5 .)
    ELSE            reduce using rule 62 (EXPRESSION -> EXPRESSION5 .)
    RETURN          reduce using rule 62 (EXPRESSION -> EXPRESSION5 .)


state 35

    (63) EXPRESSION -> EXPRESSION6 .

    STATIC          reduce using rule 63 (EXPRESSION -> EXPRESSION6 .)
    OPENAKOL        reduce using rule 63 (EXPRESSION -> EXPRESSION6 .)
    IF              reduce using rule 63 (EXPRESSION -> EXPRESSION6 .)
    FOR             reduce using rule 63 (EXPRESSION -> EXPRESSION6 .)
    WHILE           reduce using rule 63 (EXPRESSION -> EXPRESSION6 .)
    PUBLIC          reduce using rule 63 (EXPRESSION -> EXPRESSION6 .)
    PRIVATE         reduce using rule 63 (EXPRESSION -> EXPRESSION6 .)
    THIS            reduce using rule 63 (EXPRESSION -> EXPRESSION6 .)
    ID              reduce using rule 63 (EXPRESSION -> EXPRESSION6 .)
    INT             reduce using rule 63 (EXPRESSION -> EXPRESSION6 .)
    BOOLEAN         reduce using rule 63 (EXPRESSION -> EXPRESSION6 .)
    STRING          reduce using rule 63 (EXPRESSION -> EXPRESSION6 .)
    DOUBLE          reduce using rule 63 (EXPRESSION -> EXPRESSION6 .)
    CHARACTER       reduce using rule 63 (EXPRESSION -> EXPRESSION6 .)
    FLOAT           reduce using rule 63 (EXPRESSION -> EXPRESSION6 .)
    VOID            reduce using rule 63 (EXPRESSION -> EXPRESSION6 .)
    TRUE            reduce using rule 63 (EXPRESSION -> EXPRESSION6 .)
    FALSE           reduce using rule 63 (EXPRESSION -> EXPRESSION6 .)
    NULL            reduce using rule 63 (EXPRESSION -> EXPRESSION6 .)
    NUMBER          reduce using rule 63 (EXPRESSION -> EXPRESSION6 .)
    CHAR            reduce using rule 63 (EXPRESSION -> EXPRESSION6 .)
    CLOSEAKOL       reduce using rule 63 (EXPRESSION -> EXPRESSION6 .)
    CLOSEBRACKET    reduce using rule 63 (EXPRESSION -> EXPRESSION6 .)
    SEMI            reduce using rule 63 (EXPRESSION -> EXPRESSION6 .)
    COMMA           reduce using rule 63 (EXPRESSION -> EXPRESSION6 .)
    CLOSEPAR        reduce using rule 63 (EXPRESSION -> EXPRESSION6 .)
    LESSEQUAL       reduce using rule 63 (EXPRESSION -> EXPRESSION6 .)
    ASSIGN          reduce using rule 63 (EXPRESSION -> EXPRESSION6 .)
    EQUALS          reduce using rule 63 (EXPRESSION -> EXPRESSION6 .)
    GREATEREQUAL    reduce using rule 63 (EXPRESSION -> EXPRESSION6 .)
    GREATERTHAN     reduce using rule 63 (EXPRESSION -> EXPRESSION6 .)
    LESSTHAN        reduce using rule 63 (EXPRESSION -> EXPRESSION6 .)
    ADD             reduce using rule 63 (EXPRESSION -> EXPRESSION6 .)
    MINUS           reduce using rule 63 (EXPRESSION -> EXPRESSION6 .)
    MULT            reduce using rule 63 (EXPRESSION -> EXPRESSION6 .)
    NOTEQUAL        reduce using rule 63 (EXPRESSION -> EXPRESSION6 .)
    DIVIDE          reduce using rule 63 (EXPRESSION -> EXPRESSION6 .)
    PEQUAL          reduce using rule 63 (EXPRESSION -> EXPRESSION6 .)
    MEQUAL          reduce using rule 63 (EXPRESSION -> EXPRESSION6 .)
    PLUSPLUS        reduce using rule 63 (EXPRESSION -> EXPRESSION6 .)
    ELSE            reduce using rule 63 (EXPRESSION -> EXPRESSION6 .)
    RETURN          reduce using rule 63 (EXPRESSION -> EXPRESSION6 .)


state 36

    (42) REFERENCE -> THIS . G
    (44) G -> . DOT ID G
    (45) G -> . EMPTY
    (22) EMPTY -> .

    DOT             shift and go to state 54
    OPENBRACKET     reduce using rule 22 (EMPTY -> .)
    ASSIGN          reduce using rule 22 (EMPTY -> .)
    OPENPAR         reduce using rule 22 (EMPTY -> .)
    LESSEQUAL       reduce using rule 22 (EMPTY -> .)
    EQUALS          reduce using rule 22 (EMPTY -> .)
    GREATEREQUAL    reduce using rule 22 (EMPTY -> .)
    GREATERTHAN     reduce using rule 22 (EMPTY -> .)
    LESSTHAN        reduce using rule 22 (EMPTY -> .)
    ADD             reduce using rule 22 (EMPTY -> .)
    MINUS           reduce using rule 22 (EMPTY -> .)
    MULT            reduce using rule 22 (EMPTY -> .)
    NOTEQUAL        reduce using rule 22 (EMPTY -> .)
    DIVIDE          reduce using rule 22 (EMPTY -> .)
    PEQUAL          reduce using rule 22 (EMPTY -> .)
    MEQUAL          reduce using rule 22 (EMPTY -> .)
    PLUSPLUS        reduce using rule 22 (EMPTY -> .)
    SEMI            reduce using rule 22 (EMPTY -> .)
    STATIC          reduce using rule 22 (EMPTY -> .)
    OPENAKOL        reduce using rule 22 (EMPTY -> .)
    IF              reduce using rule 22 (EMPTY -> .)
    FOR             reduce using rule 22 (EMPTY -> .)
    WHILE           reduce using rule 22 (EMPTY -> .)
    PUBLIC          reduce using rule 22 (EMPTY -> .)
    PRIVATE         reduce using rule 22 (EMPTY -> .)
    THIS            reduce using rule 22 (EMPTY -> .)
    ID              reduce using rule 22 (EMPTY -> .)
    INT             reduce using rule 22 (EMPTY -> .)
    BOOLEAN         reduce using rule 22 (EMPTY -> .)
    STRING          reduce using rule 22 (EMPTY -> .)
    DOUBLE          reduce using rule 22 (EMPTY -> .)
    CHARACTER       reduce using rule 22 (EMPTY -> .)
    FLOAT           reduce using rule 22 (EMPTY -> .)
    VOID            reduce using rule 22 (EMPTY -> .)
    TRUE            reduce using rule 22 (EMPTY -> .)
    FALSE           reduce using rule 22 (EMPTY -> .)
    NULL            reduce using rule 22 (EMPTY -> .)
    NUMBER          reduce using rule 22 (EMPTY -> .)
    CHAR            reduce using rule 22 (EMPTY -> .)
    CLOSEAKOL       reduce using rule 22 (EMPTY -> .)
    CLOSEBRACKET    reduce using rule 22 (EMPTY -> .)
    COMMA           reduce using rule 22 (EMPTY -> .)
    CLOSEPAR        reduce using rule 22 (EMPTY -> .)
    ELSE            reduce using rule 22 (EMPTY -> .)
    RETURN          reduce using rule 22 (EMPTY -> .)

    G                              shift and go to state 77
    EMPTY                          shift and go to state 55

state 37

    (26) PRIMTYPE -> INT .
    (34) ARRTYPE -> INT . OPENBRACKET CLOSEBRACKET

    ID              reduce using rule 26 (PRIMTYPE -> INT .)
    OPENBRACKET     shift and go to state 78


state 38

    (27) PRIMTYPE -> BOOLEAN .

    ID              reduce using rule 27 (PRIMTYPE -> BOOLEAN .)


state 39

    (28) PRIMTYPE -> STRING .

    ID              reduce using rule 28 (PRIMTYPE -> STRING .)


state 40

    (29) PRIMTYPE -> DOUBLE .

    ID              reduce using rule 29 (PRIMTYPE -> DOUBLE .)


state 41

    (30) PRIMTYPE -> CHARACTER .

    ID              reduce using rule 30 (PRIMTYPE -> CHARACTER .)


state 42

    (31) PRIMTYPE -> FLOAT .

    ID              reduce using rule 31 (PRIMTYPE -> FLOAT .)


state 43

    (32) PRIMTYPE -> VOID .

    ID              reduce using rule 32 (PRIMTYPE -> VOID .)


state 44

    (77) EXPRESSION6 -> VALUE .

    STATIC          reduce using rule 77 (EXPRESSION6 -> VALUE .)
    OPENAKOL        reduce using rule 77 (EXPRESSION6 -> VALUE .)
    IF              reduce using rule 77 (EXPRESSION6 -> VALUE .)
    FOR             reduce using rule 77 (EXPRESSION6 -> VALUE .)
    WHILE           reduce using rule 77 (EXPRESSION6 -> VALUE .)
    PUBLIC          reduce using rule 77 (EXPRESSION6 -> VALUE .)
    PRIVATE         reduce using rule 77 (EXPRESSION6 -> VALUE .)
    THIS            reduce using rule 77 (EXPRESSION6 -> VALUE .)
    ID              reduce using rule 77 (EXPRESSION6 -> VALUE .)
    INT             reduce using rule 77 (EXPRESSION6 -> VALUE .)
    BOOLEAN         reduce using rule 77 (EXPRESSION6 -> VALUE .)
    STRING          reduce using rule 77 (EXPRESSION6 -> VALUE .)
    DOUBLE          reduce using rule 77 (EXPRESSION6 -> VALUE .)
    CHARACTER       reduce using rule 77 (EXPRESSION6 -> VALUE .)
    FLOAT           reduce using rule 77 (EXPRESSION6 -> VALUE .)
    VOID            reduce using rule 77 (EXPRESSION6 -> VALUE .)
    TRUE            reduce using rule 77 (EXPRESSION6 -> VALUE .)
    FALSE           reduce using rule 77 (EXPRESSION6 -> VALUE .)
    NULL            reduce using rule 77 (EXPRESSION6 -> VALUE .)
    NUMBER          reduce using rule 77 (EXPRESSION6 -> VALUE .)
    CHAR            reduce using rule 77 (EXPRESSION6 -> VALUE .)
    CLOSEAKOL       reduce using rule 77 (EXPRESSION6 -> VALUE .)
    CLOSEBRACKET    reduce using rule 77 (EXPRESSION6 -> VALUE .)
    SEMI            reduce using rule 77 (EXPRESSION6 -> VALUE .)
    COMMA           reduce using rule 77 (EXPRESSION6 -> VALUE .)
    CLOSEPAR        reduce using rule 77 (EXPRESSION6 -> VALUE .)
    ELSE            reduce using rule 77 (EXPRESSION6 -> VALUE .)
    RETURN          reduce using rule 77 (EXPRESSION6 -> VALUE .)


state 45

    (73) EXPRESSION6 -> TRUE .

    STATIC          reduce using rule 73 (EXPRESSION6 -> TRUE .)
    OPENAKOL        reduce using rule 73 (EXPRESSION6 -> TRUE .)
    IF              reduce using rule 73 (EXPRESSION6 -> TRUE .)
    FOR             reduce using rule 73 (EXPRESSION6 -> TRUE .)
    WHILE           reduce using rule 73 (EXPRESSION6 -> TRUE .)
    PUBLIC          reduce using rule 73 (EXPRESSION6 -> TRUE .)
    PRIVATE         reduce using rule 73 (EXPRESSION6 -> TRUE .)
    THIS            reduce using rule 73 (EXPRESSION6 -> TRUE .)
    ID              reduce using rule 73 (EXPRESSION6 -> TRUE .)
    INT             reduce using rule 73 (EXPRESSION6 -> TRUE .)
    BOOLEAN         reduce using rule 73 (EXPRESSION6 -> TRUE .)
    STRING          reduce using rule 73 (EXPRESSION6 -> TRUE .)
    DOUBLE          reduce using rule 73 (EXPRESSION6 -> TRUE .)
    CHARACTER       reduce using rule 73 (EXPRESSION6 -> TRUE .)
    FLOAT           reduce using rule 73 (EXPRESSION6 -> TRUE .)
    VOID            reduce using rule 73 (EXPRESSION6 -> TRUE .)
    TRUE            reduce using rule 73 (EXPRESSION6 -> TRUE .)
    FALSE           reduce using rule 73 (EXPRESSION6 -> TRUE .)
    NULL            reduce using rule 73 (EXPRESSION6 -> TRUE .)
    NUMBER          reduce using rule 73 (EXPRESSION6 -> TRUE .)
    CHAR            reduce using rule 73 (EXPRESSION6 -> TRUE .)
    CLOSEAKOL       reduce using rule 73 (EXPRESSION6 -> TRUE .)
    CLOSEBRACKET    reduce using rule 73 (EXPRESSION6 -> TRUE .)
    SEMI            reduce using rule 73 (EXPRESSION6 -> TRUE .)
    COMMA           reduce using rule 73 (EXPRESSION6 -> TRUE .)
    CLOSEPAR        reduce using rule 73 (EXPRESSION6 -> TRUE .)
    LESSEQUAL       reduce using rule 73 (EXPRESSION6 -> TRUE .)
    ASSIGN          reduce using rule 73 (EXPRESSION6 -> TRUE .)
    EQUALS          reduce using rule 73 (EXPRESSION6 -> TRUE .)
    GREATEREQUAL    reduce using rule 73 (EXPRESSION6 -> TRUE .)
    GREATERTHAN     reduce using rule 73 (EXPRESSION6 -> TRUE .)
    LESSTHAN        reduce using rule 73 (EXPRESSION6 -> TRUE .)
    ADD             reduce using rule 73 (EXPRESSION6 -> TRUE .)
    MINUS           reduce using rule 73 (EXPRESSION6 -> TRUE .)
    MULT            reduce using rule 73 (EXPRESSION6 -> TRUE .)
    NOTEQUAL        reduce using rule 73 (EXPRESSION6 -> TRUE .)
    DIVIDE          reduce using rule 73 (EXPRESSION6 -> TRUE .)
    PEQUAL          reduce using rule 73 (EXPRESSION6 -> TRUE .)
    MEQUAL          reduce using rule 73 (EXPRESSION6 -> TRUE .)
    PLUSPLUS        reduce using rule 73 (EXPRESSION6 -> TRUE .)
    ELSE            reduce using rule 73 (EXPRESSION6 -> TRUE .)
    RETURN          reduce using rule 73 (EXPRESSION6 -> TRUE .)


state 46

    (74) EXPRESSION6 -> FALSE .

    STATIC          reduce using rule 74 (EXPRESSION6 -> FALSE .)
    OPENAKOL        reduce using rule 74 (EXPRESSION6 -> FALSE .)
    IF              reduce using rule 74 (EXPRESSION6 -> FALSE .)
    FOR             reduce using rule 74 (EXPRESSION6 -> FALSE .)
    WHILE           reduce using rule 74 (EXPRESSION6 -> FALSE .)
    PUBLIC          reduce using rule 74 (EXPRESSION6 -> FALSE .)
    PRIVATE         reduce using rule 74 (EXPRESSION6 -> FALSE .)
    THIS            reduce using rule 74 (EXPRESSION6 -> FALSE .)
    ID              reduce using rule 74 (EXPRESSION6 -> FALSE .)
    INT             reduce using rule 74 (EXPRESSION6 -> FALSE .)
    BOOLEAN         reduce using rule 74 (EXPRESSION6 -> FALSE .)
    STRING          reduce using rule 74 (EXPRESSION6 -> FALSE .)
    DOUBLE          reduce using rule 74 (EXPRESSION6 -> FALSE .)
    CHARACTER       reduce using rule 74 (EXPRESSION6 -> FALSE .)
    FLOAT           reduce using rule 74 (EXPRESSION6 -> FALSE .)
    VOID            reduce using rule 74 (EXPRESSION6 -> FALSE .)
    TRUE            reduce using rule 74 (EXPRESSION6 -> FALSE .)
    FALSE           reduce using rule 74 (EXPRESSION6 -> FALSE .)
    NULL            reduce using rule 74 (EXPRESSION6 -> FALSE .)
    NUMBER          reduce using rule 74 (EXPRESSION6 -> FALSE .)
    CHAR            reduce using rule 74 (EXPRESSION6 -> FALSE .)
    CLOSEAKOL       reduce using rule 74 (EXPRESSION6 -> FALSE .)
    CLOSEBRACKET    reduce using rule 74 (EXPRESSION6 -> FALSE .)
    SEMI            reduce using rule 74 (EXPRESSION6 -> FALSE .)
    COMMA           reduce using rule 74 (EXPRESSION6 -> FALSE .)
    CLOSEPAR        reduce using rule 74 (EXPRESSION6 -> FALSE .)
    LESSEQUAL       reduce using rule 74 (EXPRESSION6 -> FALSE .)
    ASSIGN          reduce using rule 74 (EXPRESSION6 -> FALSE .)
    EQUALS          reduce using rule 74 (EXPRESSION6 -> FALSE .)
    GREATEREQUAL    reduce using rule 74 (EXPRESSION6 -> FALSE .)
    GREATERTHAN     reduce using rule 74 (EXPRESSION6 -> FALSE .)
    LESSTHAN        reduce using rule 74 (EXPRESSION6 -> FALSE .)
    ADD             reduce using rule 74 (EXPRESSION6 -> FALSE .)
    MINUS           reduce using rule 74 (EXPRESSION6 -> FALSE .)
    MULT            reduce using rule 74 (EXPRESSION6 -> FALSE .)
    NOTEQUAL        reduce using rule 74 (EXPRESSION6 -> FALSE .)
    DIVIDE          reduce using rule 74 (EXPRESSION6 -> FALSE .)
    PEQUAL          reduce using rule 74 (EXPRESSION6 -> FALSE .)
    MEQUAL          reduce using rule 74 (EXPRESSION6 -> FALSE .)
    PLUSPLUS        reduce using rule 74 (EXPRESSION6 -> FALSE .)
    ELSE            reduce using rule 74 (EXPRESSION6 -> FALSE .)
    RETURN          reduce using rule 74 (EXPRESSION6 -> FALSE .)


state 47

    (75) EXPRESSION6 -> NULL .

    STATIC          reduce using rule 75 (EXPRESSION6 -> NULL .)
    OPENAKOL        reduce using rule 75 (EXPRESSION6 -> NULL .)
    IF              reduce using rule 75 (EXPRESSION6 -> NULL .)
    FOR             reduce using rule 75 (EXPRESSION6 -> NULL .)
    WHILE           reduce using rule 75 (EXPRESSION6 -> NULL .)
    PUBLIC          reduce using rule 75 (EXPRESSION6 -> NULL .)
    PRIVATE         reduce using rule 75 (EXPRESSION6 -> NULL .)
    THIS            reduce using rule 75 (EXPRESSION6 -> NULL .)
    ID              reduce using rule 75 (EXPRESSION6 -> NULL .)
    INT             reduce using rule 75 (EXPRESSION6 -> NULL .)
    BOOLEAN         reduce using rule 75 (EXPRESSION6 -> NULL .)
    STRING          reduce using rule 75 (EXPRESSION6 -> NULL .)
    DOUBLE          reduce using rule 75 (EXPRESSION6 -> NULL .)
    CHARACTER       reduce using rule 75 (EXPRESSION6 -> NULL .)
    FLOAT           reduce using rule 75 (EXPRESSION6 -> NULL .)
    VOID            reduce using rule 75 (EXPRESSION6 -> NULL .)
    TRUE            reduce using rule 75 (EXPRESSION6 -> NULL .)
    FALSE           reduce using rule 75 (EXPRESSION6 -> NULL .)
    NULL            reduce using rule 75 (EXPRESSION6 -> NULL .)
    NUMBER          reduce using rule 75 (EXPRESSION6 -> NULL .)
    CHAR            reduce using rule 75 (EXPRESSION6 -> NULL .)
    CLOSEAKOL       reduce using rule 75 (EXPRESSION6 -> NULL .)
    CLOSEBRACKET    reduce using rule 75 (EXPRESSION6 -> NULL .)
    SEMI            reduce using rule 75 (EXPRESSION6 -> NULL .)
    COMMA           reduce using rule 75 (EXPRESSION6 -> NULL .)
    CLOSEPAR        reduce using rule 75 (EXPRESSION6 -> NULL .)
    LESSEQUAL       reduce using rule 75 (EXPRESSION6 -> NULL .)
    ASSIGN          reduce using rule 75 (EXPRESSION6 -> NULL .)
    EQUALS          reduce using rule 75 (EXPRESSION6 -> NULL .)
    GREATEREQUAL    reduce using rule 75 (EXPRESSION6 -> NULL .)
    GREATERTHAN     reduce using rule 75 (EXPRESSION6 -> NULL .)
    LESSTHAN        reduce using rule 75 (EXPRESSION6 -> NULL .)
    ADD             reduce using rule 75 (EXPRESSION6 -> NULL .)
    MINUS           reduce using rule 75 (EXPRESSION6 -> NULL .)
    MULT            reduce using rule 75 (EXPRESSION6 -> NULL .)
    NOTEQUAL        reduce using rule 75 (EXPRESSION6 -> NULL .)
    DIVIDE          reduce using rule 75 (EXPRESSION6 -> NULL .)
    PEQUAL          reduce using rule 75 (EXPRESSION6 -> NULL .)
    MEQUAL          reduce using rule 75 (EXPRESSION6 -> NULL .)
    PLUSPLUS        reduce using rule 75 (EXPRESSION6 -> NULL .)
    ELSE            reduce using rule 75 (EXPRESSION6 -> NULL .)
    RETURN          reduce using rule 75 (EXPRESSION6 -> NULL .)


state 48

    (71) VALUE1 -> NUMBER .

    STATIC          reduce using rule 71 (VALUE1 -> NUMBER .)
    OPENAKOL        reduce using rule 71 (VALUE1 -> NUMBER .)
    IF              reduce using rule 71 (VALUE1 -> NUMBER .)
    FOR             reduce using rule 71 (VALUE1 -> NUMBER .)
    WHILE           reduce using rule 71 (VALUE1 -> NUMBER .)
    PUBLIC          reduce using rule 71 (VALUE1 -> NUMBER .)
    PRIVATE         reduce using rule 71 (VALUE1 -> NUMBER .)
    THIS            reduce using rule 71 (VALUE1 -> NUMBER .)
    ID              reduce using rule 71 (VALUE1 -> NUMBER .)
    INT             reduce using rule 71 (VALUE1 -> NUMBER .)
    BOOLEAN         reduce using rule 71 (VALUE1 -> NUMBER .)
    STRING          reduce using rule 71 (VALUE1 -> NUMBER .)
    DOUBLE          reduce using rule 71 (VALUE1 -> NUMBER .)
    CHARACTER       reduce using rule 71 (VALUE1 -> NUMBER .)
    FLOAT           reduce using rule 71 (VALUE1 -> NUMBER .)
    VOID            reduce using rule 71 (VALUE1 -> NUMBER .)
    TRUE            reduce using rule 71 (VALUE1 -> NUMBER .)
    FALSE           reduce using rule 71 (VALUE1 -> NUMBER .)
    NULL            reduce using rule 71 (VALUE1 -> NUMBER .)
    NUMBER          reduce using rule 71 (VALUE1 -> NUMBER .)
    CHAR            reduce using rule 71 (VALUE1 -> NUMBER .)
    CLOSEAKOL       reduce using rule 71 (VALUE1 -> NUMBER .)
    SEMI            reduce using rule 71 (VALUE1 -> NUMBER .)
    CLOSEBRACKET    reduce using rule 71 (VALUE1 -> NUMBER .)
    COMMA           reduce using rule 71 (VALUE1 -> NUMBER .)
    CLOSEPAR        reduce using rule 71 (VALUE1 -> NUMBER .)
    LESSEQUAL       reduce using rule 71 (VALUE1 -> NUMBER .)
    ASSIGN          reduce using rule 71 (VALUE1 -> NUMBER .)
    EQUALS          reduce using rule 71 (VALUE1 -> NUMBER .)
    GREATEREQUAL    reduce using rule 71 (VALUE1 -> NUMBER .)
    GREATERTHAN     reduce using rule 71 (VALUE1 -> NUMBER .)
    LESSTHAN        reduce using rule 71 (VALUE1 -> NUMBER .)
    ADD             reduce using rule 71 (VALUE1 -> NUMBER .)
    MINUS           reduce using rule 71 (VALUE1 -> NUMBER .)
    MULT            reduce using rule 71 (VALUE1 -> NUMBER .)
    NOTEQUAL        reduce using rule 71 (VALUE1 -> NUMBER .)
    DIVIDE          reduce using rule 71 (VALUE1 -> NUMBER .)
    PEQUAL          reduce using rule 71 (VALUE1 -> NUMBER .)
    MEQUAL          reduce using rule 71 (VALUE1 -> NUMBER .)
    PLUSPLUS        reduce using rule 71 (VALUE1 -> NUMBER .)
    ELSE            reduce using rule 71 (VALUE1 -> NUMBER .)
    RETURN          reduce using rule 71 (VALUE1 -> NUMBER .)


state 49

    (69) VALUE -> VALUE1 .

    STATIC          reduce using rule 69 (VALUE -> VALUE1 .)
    OPENAKOL        reduce using rule 69 (VALUE -> VALUE1 .)
    IF              reduce using rule 69 (VALUE -> VALUE1 .)
    FOR             reduce using rule 69 (VALUE -> VALUE1 .)
    WHILE           reduce using rule 69 (VALUE -> VALUE1 .)
    PUBLIC          reduce using rule 69 (VALUE -> VALUE1 .)
    PRIVATE         reduce using rule 69 (VALUE -> VALUE1 .)
    THIS            reduce using rule 69 (VALUE -> VALUE1 .)
    ID              reduce using rule 69 (VALUE -> VALUE1 .)
    INT             reduce using rule 69 (VALUE -> VALUE1 .)
    BOOLEAN         reduce using rule 69 (VALUE -> VALUE1 .)
    STRING          reduce using rule 69 (VALUE -> VALUE1 .)
    DOUBLE          reduce using rule 69 (VALUE -> VALUE1 .)
    CHARACTER       reduce using rule 69 (VALUE -> VALUE1 .)
    FLOAT           reduce using rule 69 (VALUE -> VALUE1 .)
    VOID            reduce using rule 69 (VALUE -> VALUE1 .)
    TRUE            reduce using rule 69 (VALUE -> VALUE1 .)
    FALSE           reduce using rule 69 (VALUE -> VALUE1 .)
    NULL            reduce using rule 69 (VALUE -> VALUE1 .)
    NUMBER          reduce using rule 69 (VALUE -> VALUE1 .)
    CHAR            reduce using rule 69 (VALUE -> VALUE1 .)
    CLOSEAKOL       reduce using rule 69 (VALUE -> VALUE1 .)
    SEMI            reduce using rule 69 (VALUE -> VALUE1 .)
    CLOSEBRACKET    reduce using rule 69 (VALUE -> VALUE1 .)
    COMMA           reduce using rule 69 (VALUE -> VALUE1 .)
    CLOSEPAR        reduce using rule 69 (VALUE -> VALUE1 .)
    LESSEQUAL       reduce using rule 69 (VALUE -> VALUE1 .)
    ASSIGN          reduce using rule 69 (VALUE -> VALUE1 .)
    EQUALS          reduce using rule 69 (VALUE -> VALUE1 .)
    GREATEREQUAL    reduce using rule 69 (VALUE -> VALUE1 .)
    GREATERTHAN     reduce using rule 69 (VALUE -> VALUE1 .)
    LESSTHAN        reduce using rule 69 (VALUE -> VALUE1 .)
    ADD             reduce using rule 69 (VALUE -> VALUE1 .)
    MINUS           reduce using rule 69 (VALUE -> VALUE1 .)
    MULT            reduce using rule 69 (VALUE -> VALUE1 .)
    NOTEQUAL        reduce using rule 69 (VALUE -> VALUE1 .)
    DIVIDE          reduce using rule 69 (VALUE -> VALUE1 .)
    PEQUAL          reduce using rule 69 (VALUE -> VALUE1 .)
    MEQUAL          reduce using rule 69 (VALUE -> VALUE1 .)
    PLUSPLUS        reduce using rule 69 (VALUE -> VALUE1 .)
    ELSE            reduce using rule 69 (VALUE -> VALUE1 .)
    RETURN          reduce using rule 69 (VALUE -> VALUE1 .)


state 50

    (70) VALUE -> VALUE2 .

    STATIC          reduce using rule 70 (VALUE -> VALUE2 .)
    OPENAKOL        reduce using rule 70 (VALUE -> VALUE2 .)
    IF              reduce using rule 70 (VALUE -> VALUE2 .)
    FOR             reduce using rule 70 (VALUE -> VALUE2 .)
    WHILE           reduce using rule 70 (VALUE -> VALUE2 .)
    PUBLIC          reduce using rule 70 (VALUE -> VALUE2 .)
    PRIVATE         reduce using rule 70 (VALUE -> VALUE2 .)
    THIS            reduce using rule 70 (VALUE -> VALUE2 .)
    ID              reduce using rule 70 (VALUE -> VALUE2 .)
    INT             reduce using rule 70 (VALUE -> VALUE2 .)
    BOOLEAN         reduce using rule 70 (VALUE -> VALUE2 .)
    STRING          reduce using rule 70 (VALUE -> VALUE2 .)
    DOUBLE          reduce using rule 70 (VALUE -> VALUE2 .)
    CHARACTER       reduce using rule 70 (VALUE -> VALUE2 .)
    FLOAT           reduce using rule 70 (VALUE -> VALUE2 .)
    VOID            reduce using rule 70 (VALUE -> VALUE2 .)
    TRUE            reduce using rule 70 (VALUE -> VALUE2 .)
    FALSE           reduce using rule 70 (VALUE -> VALUE2 .)
    NULL            reduce using rule 70 (VALUE -> VALUE2 .)
    NUMBER          reduce using rule 70 (VALUE -> VALUE2 .)
    CHAR            reduce using rule 70 (VALUE -> VALUE2 .)
    CLOSEAKOL       reduce using rule 70 (VALUE -> VALUE2 .)
    SEMI            reduce using rule 70 (VALUE -> VALUE2 .)
    CLOSEBRACKET    reduce using rule 70 (VALUE -> VALUE2 .)
    COMMA           reduce using rule 70 (VALUE -> VALUE2 .)
    CLOSEPAR        reduce using rule 70 (VALUE -> VALUE2 .)
    LESSEQUAL       reduce using rule 70 (VALUE -> VALUE2 .)
    ASSIGN          reduce using rule 70 (VALUE -> VALUE2 .)
    EQUALS          reduce using rule 70 (VALUE -> VALUE2 .)
    GREATEREQUAL    reduce using rule 70 (VALUE -> VALUE2 .)
    GREATERTHAN     reduce using rule 70 (VALUE -> VALUE2 .)
    LESSTHAN        reduce using rule 70 (VALUE -> VALUE2 .)
    ADD             reduce using rule 70 (VALUE -> VALUE2 .)
    MINUS           reduce using rule 70 (VALUE -> VALUE2 .)
    MULT            reduce using rule 70 (VALUE -> VALUE2 .)
    NOTEQUAL        reduce using rule 70 (VALUE -> VALUE2 .)
    DIVIDE          reduce using rule 70 (VALUE -> VALUE2 .)
    PEQUAL          reduce using rule 70 (VALUE -> VALUE2 .)
    MEQUAL          reduce using rule 70 (VALUE -> VALUE2 .)
    PLUSPLUS        reduce using rule 70 (VALUE -> VALUE2 .)
    ELSE            reduce using rule 70 (VALUE -> VALUE2 .)
    RETURN          reduce using rule 70 (VALUE -> VALUE2 .)


state 51

    (72) VALUE2 -> CHAR .

    STATIC          reduce using rule 72 (VALUE2 -> CHAR .)
    OPENAKOL        reduce using rule 72 (VALUE2 -> CHAR .)
    IF              reduce using rule 72 (VALUE2 -> CHAR .)
    FOR             reduce using rule 72 (VALUE2 -> CHAR .)
    WHILE           reduce using rule 72 (VALUE2 -> CHAR .)
    PUBLIC          reduce using rule 72 (VALUE2 -> CHAR .)
    PRIVATE         reduce using rule 72 (VALUE2 -> CHAR .)
    THIS            reduce using rule 72 (VALUE2 -> CHAR .)
    ID              reduce using rule 72 (VALUE2 -> CHAR .)
    INT             reduce using rule 72 (VALUE2 -> CHAR .)
    BOOLEAN         reduce using rule 72 (VALUE2 -> CHAR .)
    STRING          reduce using rule 72 (VALUE2 -> CHAR .)
    DOUBLE          reduce using rule 72 (VALUE2 -> CHAR .)
    CHARACTER       reduce using rule 72 (VALUE2 -> CHAR .)
    FLOAT           reduce using rule 72 (VALUE2 -> CHAR .)
    VOID            reduce using rule 72 (VALUE2 -> CHAR .)
    TRUE            reduce using rule 72 (VALUE2 -> CHAR .)
    FALSE           reduce using rule 72 (VALUE2 -> CHAR .)
    NULL            reduce using rule 72 (VALUE2 -> CHAR .)
    NUMBER          reduce using rule 72 (VALUE2 -> CHAR .)
    CHAR            reduce using rule 72 (VALUE2 -> CHAR .)
    CLOSEAKOL       reduce using rule 72 (VALUE2 -> CHAR .)
    SEMI            reduce using rule 72 (VALUE2 -> CHAR .)
    CLOSEBRACKET    reduce using rule 72 (VALUE2 -> CHAR .)
    COMMA           reduce using rule 72 (VALUE2 -> CHAR .)
    CLOSEPAR        reduce using rule 72 (VALUE2 -> CHAR .)
    LESSEQUAL       reduce using rule 72 (VALUE2 -> CHAR .)
    ASSIGN          reduce using rule 72 (VALUE2 -> CHAR .)
    EQUALS          reduce using rule 72 (VALUE2 -> CHAR .)
    GREATEREQUAL    reduce using rule 72 (VALUE2 -> CHAR .)
    GREATERTHAN     reduce using rule 72 (VALUE2 -> CHAR .)
    LESSTHAN        reduce using rule 72 (VALUE2 -> CHAR .)
    ADD             reduce using rule 72 (VALUE2 -> CHAR .)
    MINUS           reduce using rule 72 (VALUE2 -> CHAR .)
    MULT            reduce using rule 72 (VALUE2 -> CHAR .)
    NOTEQUAL        reduce using rule 72 (VALUE2 -> CHAR .)
    DIVIDE          reduce using rule 72 (VALUE2 -> CHAR .)
    PEQUAL          reduce using rule 72 (VALUE2 -> CHAR .)
    MEQUAL          reduce using rule 72 (VALUE2 -> CHAR .)
    PLUSPLUS        reduce using rule 72 (VALUE2 -> CHAR .)
    ELSE            reduce using rule 72 (VALUE2 -> CHAR .)
    RETURN          reduce using rule 72 (VALUE2 -> CHAR .)


state 52

    (43) REFERENCE -> ID G .

    OPENBRACKET     reduce using rule 43 (REFERENCE -> ID G .)
    ASSIGN          reduce using rule 43 (REFERENCE -> ID G .)
    OPENPAR         reduce using rule 43 (REFERENCE -> ID G .)
    LESSEQUAL       reduce using rule 43 (REFERENCE -> ID G .)
    EQUALS          reduce using rule 43 (REFERENCE -> ID G .)
    GREATEREQUAL    reduce using rule 43 (REFERENCE -> ID G .)
    GREATERTHAN     reduce using rule 43 (REFERENCE -> ID G .)
    LESSTHAN        reduce using rule 43 (REFERENCE -> ID G .)
    ADD             reduce using rule 43 (REFERENCE -> ID G .)
    MINUS           reduce using rule 43 (REFERENCE -> ID G .)
    MULT            reduce using rule 43 (REFERENCE -> ID G .)
    NOTEQUAL        reduce using rule 43 (REFERENCE -> ID G .)
    DIVIDE          reduce using rule 43 (REFERENCE -> ID G .)
    PEQUAL          reduce using rule 43 (REFERENCE -> ID G .)
    MEQUAL          reduce using rule 43 (REFERENCE -> ID G .)
    PLUSPLUS        reduce using rule 43 (REFERENCE -> ID G .)
    SEMI            reduce using rule 43 (REFERENCE -> ID G .)
    STATIC          reduce using rule 43 (REFERENCE -> ID G .)
    OPENAKOL        reduce using rule 43 (REFERENCE -> ID G .)
    IF              reduce using rule 43 (REFERENCE -> ID G .)
    FOR             reduce using rule 43 (REFERENCE -> ID G .)
    WHILE           reduce using rule 43 (REFERENCE -> ID G .)
    PUBLIC          reduce using rule 43 (REFERENCE -> ID G .)
    PRIVATE         reduce using rule 43 (REFERENCE -> ID G .)
    THIS            reduce using rule 43 (REFERENCE -> ID G .)
    ID              reduce using rule 43 (REFERENCE -> ID G .)
    INT             reduce using rule 43 (REFERENCE -> ID G .)
    BOOLEAN         reduce using rule 43 (REFERENCE -> ID G .)
    STRING          reduce using rule 43 (REFERENCE -> ID G .)
    DOUBLE          reduce using rule 43 (REFERENCE -> ID G .)
    CHARACTER       reduce using rule 43 (REFERENCE -> ID G .)
    FLOAT           reduce using rule 43 (REFERENCE -> ID G .)
    VOID            reduce using rule 43 (REFERENCE -> ID G .)
    TRUE            reduce using rule 43 (REFERENCE -> ID G .)
    FALSE           reduce using rule 43 (REFERENCE -> ID G .)
    NULL            reduce using rule 43 (REFERENCE -> ID G .)
    NUMBER          reduce using rule 43 (REFERENCE -> ID G .)
    CHAR            reduce using rule 43 (REFERENCE -> ID G .)
    CLOSEAKOL       reduce using rule 43 (REFERENCE -> ID G .)
    CLOSEBRACKET    reduce using rule 43 (REFERENCE -> ID G .)
    COMMA           reduce using rule 43 (REFERENCE -> ID G .)
    CLOSEPAR        reduce using rule 43 (REFERENCE -> ID G .)
    ELSE            reduce using rule 43 (REFERENCE -> ID G .)
    RETURN          reduce using rule 43 (REFERENCE -> ID G .)


state 53

    (64) EXPRESSION1 -> ID ASSIGN . ID OP ID SEMI
    (68) EXPRESSION5 -> ID ASSIGN . VALUE SEMI
    (79) EXPRESSION6 -> ID ASSIGN . ID OP ID OP ID SEMI
    (69) VALUE -> . VALUE1
    (70) VALUE -> . VALUE2
    (71) VALUE1 -> . NUMBER
    (72) VALUE2 -> . CHAR

    ID              shift and go to state 79
    NUMBER          shift and go to state 48
    CHAR            shift and go to state 51

    VALUE                          shift and go to state 80
    VALUE1                         shift and go to state 49
    VALUE2                         shift and go to state 50

state 54

    (44) G -> DOT . ID G

    ID              shift and go to state 81


state 55

    (45) G -> EMPTY .

    OPENBRACKET     reduce using rule 45 (G -> EMPTY .)
    ASSIGN          reduce using rule 45 (G -> EMPTY .)
    OPENPAR         reduce using rule 45 (G -> EMPTY .)
    LESSEQUAL       reduce using rule 45 (G -> EMPTY .)
    EQUALS          reduce using rule 45 (G -> EMPTY .)
    GREATEREQUAL    reduce using rule 45 (G -> EMPTY .)
    GREATERTHAN     reduce using rule 45 (G -> EMPTY .)
    LESSTHAN        reduce using rule 45 (G -> EMPTY .)
    ADD             reduce using rule 45 (G -> EMPTY .)
    MINUS           reduce using rule 45 (G -> EMPTY .)
    MULT            reduce using rule 45 (G -> EMPTY .)
    NOTEQUAL        reduce using rule 45 (G -> EMPTY .)
    DIVIDE          reduce using rule 45 (G -> EMPTY .)
    PEQUAL          reduce using rule 45 (G -> EMPTY .)
    MEQUAL          reduce using rule 45 (G -> EMPTY .)
    PLUSPLUS        reduce using rule 45 (G -> EMPTY .)
    SEMI            reduce using rule 45 (G -> EMPTY .)
    STATIC          reduce using rule 45 (G -> EMPTY .)
    OPENAKOL        reduce using rule 45 (G -> EMPTY .)
    IF              reduce using rule 45 (G -> EMPTY .)
    FOR             reduce using rule 45 (G -> EMPTY .)
    WHILE           reduce using rule 45 (G -> EMPTY .)
    PUBLIC          reduce using rule 45 (G -> EMPTY .)
    PRIVATE         reduce using rule 45 (G -> EMPTY .)
    THIS            reduce using rule 45 (G -> EMPTY .)
    ID              reduce using rule 45 (G -> EMPTY .)
    INT             reduce using rule 45 (G -> EMPTY .)
    BOOLEAN         reduce using rule 45 (G -> EMPTY .)
    STRING          reduce using rule 45 (G -> EMPTY .)
    DOUBLE          reduce using rule 45 (G -> EMPTY .)
    CHARACTER       reduce using rule 45 (G -> EMPTY .)
    FLOAT           reduce using rule 45 (G -> EMPTY .)
    VOID            reduce using rule 45 (G -> EMPTY .)
    TRUE            reduce using rule 45 (G -> EMPTY .)
    FALSE           reduce using rule 45 (G -> EMPTY .)
    NULL            reduce using rule 45 (G -> EMPTY .)
    NUMBER          reduce using rule 45 (G -> EMPTY .)
    CHAR            reduce using rule 45 (G -> EMPTY .)
    CLOSEAKOL       reduce using rule 45 (G -> EMPTY .)
    CLOSEBRACKET    reduce using rule 45 (G -> EMPTY .)
    COMMA           reduce using rule 45 (G -> EMPTY .)
    CLOSEPAR        reduce using rule 45 (G -> EMPTY .)
    ELSE            reduce using rule 45 (G -> EMPTY .)
    RETURN          reduce using rule 45 (G -> EMPTY .)


state 56

    (46) STATEMENT -> OPENAKOL H . CLOSEAKOL

    CLOSEAKOL       shift and go to state 82


state 57

    (56) H -> STATEMENT . H
    (56) H -> . STATEMENT H
    (57) H -> . EMPTY
    (46) STATEMENT -> . OPENAKOL H CLOSEAKOL
    (47) STATEMENT -> . EXPRESSION
    (48) STATEMENT -> . REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI
    (49) STATEMENT -> . REFERENCE ASSIGN EXPRESSION SEMI
    (50) STATEMENT -> . REFERENCE OPENPAR CLOSEPAR SEMI
    (51) STATEMENT -> . REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI
    (52) STATEMENT -> . IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT
    (53) STATEMENT -> . IF OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (54) STATEMENT -> . FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (55) STATEMENT -> . WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (22) EMPTY -> .
    (58) EXPRESSION -> . EXPRESSION1
    (59) EXPRESSION -> . EXPRESSION2
    (60) EXPRESSION -> . EXPRESSION3
    (61) EXPRESSION -> . EXPRESSION4
    (62) EXPRESSION -> . EXPRESSION5
    (63) EXPRESSION -> . EXPRESSION6
    (42) REFERENCE -> . THIS G
    (43) REFERENCE -> . ID G
    (64) EXPRESSION1 -> . ID ASSIGN ID OP ID SEMI
    (65) EXPRESSION2 -> . TYPE ID ASSIGN ID OP ID SEMI
    (66) EXPRESSION3 -> . TYPE ID SEMI
    (67) EXPRESSION4 -> . TYPE ID ASSIGN VALUE SEMI
    (68) EXPRESSION5 -> . ID ASSIGN VALUE SEMI
    (73) EXPRESSION6 -> . TRUE
    (74) EXPRESSION6 -> . FALSE
    (75) EXPRESSION6 -> . NULL
    (76) EXPRESSION6 -> . ID
    (77) EXPRESSION6 -> . VALUE
    (78) EXPRESSION6 -> . TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI
    (79) EXPRESSION6 -> . ID ASSIGN ID OP ID OP ID SEMI
    (80) EXPRESSION6 -> . EMPTY
    (81) EXPRESSION6 -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I
    (23) TYPE -> . PRIMTYPE
    (24) TYPE -> . CLASSTYPE
    (25) TYPE -> . ARRTYPE
    (69) VALUE -> . VALUE1
    (70) VALUE -> . VALUE2
    (26) PRIMTYPE -> . INT
    (27) PRIMTYPE -> . BOOLEAN
    (28) PRIMTYPE -> . STRING
    (29) PRIMTYPE -> . DOUBLE
    (30) PRIMTYPE -> . CHARACTER
    (31) PRIMTYPE -> . FLOAT
    (32) PRIMTYPE -> . VOID
    (33) CLASSTYPE -> . ID
    (34) ARRTYPE -> . INT OPENBRACKET CLOSEBRACKET
    (35) ARRTYPE -> . CLASSTYPE OPENBRACKET CLOSEBRACKET
    (71) VALUE1 -> . NUMBER
    (72) VALUE2 -> . CHAR

  ! shift/reduce conflict for OPENAKOL resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for THIS resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for CHARACTER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    OPENAKOL        shift and go to state 10
    IF              shift and go to state 22
    FOR             shift and go to state 23
    WHILE           shift and go to state 24
    CLOSEAKOL       reduce using rule 22 (EMPTY -> .)
    THIS            shift and go to state 36
    ID              shift and go to state 59
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    NULL            shift and go to state 47
    INT             shift and go to state 37
    BOOLEAN         shift and go to state 38
    STRING          shift and go to state 39
    DOUBLE          shift and go to state 40
    CHARACTER       shift and go to state 41
    FLOAT           shift and go to state 42
    VOID            shift and go to state 43
    NUMBER          shift and go to state 48
    CHAR            shift and go to state 51

  ! OPENAKOL        [ reduce using rule 22 (EMPTY -> .) ]
  ! IF              [ reduce using rule 22 (EMPTY -> .) ]
  ! FOR             [ reduce using rule 22 (EMPTY -> .) ]
  ! WHILE           [ reduce using rule 22 (EMPTY -> .) ]
  ! THIS            [ reduce using rule 22 (EMPTY -> .) ]
  ! ID              [ reduce using rule 22 (EMPTY -> .) ]
  ! TRUE            [ reduce using rule 22 (EMPTY -> .) ]
  ! FALSE           [ reduce using rule 22 (EMPTY -> .) ]
  ! NULL            [ reduce using rule 22 (EMPTY -> .) ]
  ! INT             [ reduce using rule 22 (EMPTY -> .) ]
  ! BOOLEAN         [ reduce using rule 22 (EMPTY -> .) ]
  ! STRING          [ reduce using rule 22 (EMPTY -> .) ]
  ! DOUBLE          [ reduce using rule 22 (EMPTY -> .) ]
  ! CHARACTER       [ reduce using rule 22 (EMPTY -> .) ]
  ! FLOAT           [ reduce using rule 22 (EMPTY -> .) ]
  ! VOID            [ reduce using rule 22 (EMPTY -> .) ]
  ! NUMBER          [ reduce using rule 22 (EMPTY -> .) ]
  ! CHAR            [ reduce using rule 22 (EMPTY -> .) ]

    STATEMENT                      shift and go to state 57
    H                              shift and go to state 83
    EMPTY                          shift and go to state 58
    EXPRESSION                     shift and go to state 17
    REFERENCE                      shift and go to state 21
    EXPRESSION1                    shift and go to state 30
    EXPRESSION2                    shift and go to state 31
    EXPRESSION3                    shift and go to state 32
    EXPRESSION4                    shift and go to state 33
    EXPRESSION5                    shift and go to state 34
    EXPRESSION6                    shift and go to state 35
    TYPE                           shift and go to state 60
    VALUE                          shift and go to state 44
    PRIMTYPE                       shift and go to state 27
    CLASSTYPE                      shift and go to state 28
    ARRTYPE                        shift and go to state 29
    VALUE1                         shift and go to state 49
    VALUE2                         shift and go to state 50

state 58

    (57) H -> EMPTY .
    (80) EXPRESSION6 -> EMPTY .

  ! reduce/reduce conflict for CLOSEAKOL resolved using rule 57 (H -> EMPTY .)
    CLOSEAKOL       reduce using rule 57 (H -> EMPTY .)
    OPENAKOL        reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    IF              reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    FOR             reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    WHILE           reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    THIS            reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    ID              reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    TRUE            reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    FALSE           reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    NULL            reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    INT             reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    BOOLEAN         reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    STRING          reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    DOUBLE          reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    CHARACTER       reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    FLOAT           reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    VOID            reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    NUMBER          reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    CHAR            reduce using rule 80 (EXPRESSION6 -> EMPTY .)

  ! CLOSEAKOL       [ reduce using rule 80 (EXPRESSION6 -> EMPTY .) ]


state 59

    (43) REFERENCE -> ID . G
    (64) EXPRESSION1 -> ID . ASSIGN ID OP ID SEMI
    (68) EXPRESSION5 -> ID . ASSIGN VALUE SEMI
    (76) EXPRESSION6 -> ID .
    (79) EXPRESSION6 -> ID . ASSIGN ID OP ID OP ID SEMI
    (33) CLASSTYPE -> ID .
    (44) G -> . DOT ID G
    (45) G -> . EMPTY
    (22) EMPTY -> .

  ! reduce/reduce conflict for ID resolved using rule 33 (CLASSTYPE -> ID .)
  ! reduce/reduce conflict for OPENBRACKET resolved using rule 22 (EMPTY -> .)
  ! shift/reduce conflict for ASSIGN resolved as shift
    ASSIGN          shift and go to state 53
    OPENAKOL        reduce using rule 76 (EXPRESSION6 -> ID .)
    IF              reduce using rule 76 (EXPRESSION6 -> ID .)
    FOR             reduce using rule 76 (EXPRESSION6 -> ID .)
    WHILE           reduce using rule 76 (EXPRESSION6 -> ID .)
    THIS            reduce using rule 76 (EXPRESSION6 -> ID .)
    TRUE            reduce using rule 76 (EXPRESSION6 -> ID .)
    FALSE           reduce using rule 76 (EXPRESSION6 -> ID .)
    NULL            reduce using rule 76 (EXPRESSION6 -> ID .)
    INT             reduce using rule 76 (EXPRESSION6 -> ID .)
    BOOLEAN         reduce using rule 76 (EXPRESSION6 -> ID .)
    STRING          reduce using rule 76 (EXPRESSION6 -> ID .)
    DOUBLE          reduce using rule 76 (EXPRESSION6 -> ID .)
    CHARACTER       reduce using rule 76 (EXPRESSION6 -> ID .)
    FLOAT           reduce using rule 76 (EXPRESSION6 -> ID .)
    VOID            reduce using rule 76 (EXPRESSION6 -> ID .)
    NUMBER          reduce using rule 76 (EXPRESSION6 -> ID .)
    CHAR            reduce using rule 76 (EXPRESSION6 -> ID .)
    CLOSEAKOL       reduce using rule 76 (EXPRESSION6 -> ID .)
    ELSE            reduce using rule 76 (EXPRESSION6 -> ID .)
    STATIC          reduce using rule 76 (EXPRESSION6 -> ID .)
    PUBLIC          reduce using rule 76 (EXPRESSION6 -> ID .)
    PRIVATE         reduce using rule 76 (EXPRESSION6 -> ID .)
    RETURN          reduce using rule 76 (EXPRESSION6 -> ID .)
    ID              reduce using rule 33 (CLASSTYPE -> ID .)
    DOT             shift and go to state 54
    OPENBRACKET     reduce using rule 22 (EMPTY -> .)
    OPENPAR         reduce using rule 22 (EMPTY -> .)

  ! ID              [ reduce using rule 76 (EXPRESSION6 -> ID .) ]
  ! OPENBRACKET     [ reduce using rule 33 (CLASSTYPE -> ID .) ]
  ! ASSIGN          [ reduce using rule 22 (EMPTY -> .) ]

    G                              shift and go to state 52
    EMPTY                          shift and go to state 55

state 60

    (65) EXPRESSION2 -> TYPE . ID ASSIGN ID OP ID SEMI
    (66) EXPRESSION3 -> TYPE . ID SEMI
    (67) EXPRESSION4 -> TYPE . ID ASSIGN VALUE SEMI
    (78) EXPRESSION6 -> TYPE . ID ASSIGN EXPRESSION OP EXPRESSION SEMI

    ID              shift and go to state 69


state 61

    (4) CLASSDECLARATION -> CLASS ID OPENAKOL A CLOSEAKOL .

    CLASS           reduce using rule 4 (CLASSDECLARATION -> CLASS ID OPENAKOL A CLOSEAKOL .)
    $end            reduce using rule 4 (CLASSDECLARATION -> CLASS ID OPENAKOL A CLOSEAKOL .)


state 62

    (5) A -> FIELDDECLARATION A .

    CLOSEAKOL       reduce using rule 5 (A -> FIELDDECLARATION A .)


state 63

    (6) A -> METHODDECLARATION A .

    CLOSEAKOL       reduce using rule 6 (A -> METHODDECLARATION A .)


state 64

    (8) FIELDDECLARATION -> DECLARATORS ID . SEMI
    (10) METHODDECLARATION -> DECLARATORS ID . OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL
    (11) METHODDECLARATION -> DECLARATORS ID . OPENPAR CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL
    (12) METHODDECLARATION -> DECLARATORS ID . OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B CLOSEAKOL
    (13) METHODDECLARATION -> DECLARATORS ID . OPENPAR CLOSEPAR OPENAKOL B CLOSEAKOL

    SEMI            shift and go to state 84
    OPENPAR         shift and go to state 85


state 65

    (16) DECLARATORS -> C STATIC . TYPE
    (23) TYPE -> . PRIMTYPE
    (24) TYPE -> . CLASSTYPE
    (25) TYPE -> . ARRTYPE
    (26) PRIMTYPE -> . INT
    (27) PRIMTYPE -> . BOOLEAN
    (28) PRIMTYPE -> . STRING
    (29) PRIMTYPE -> . DOUBLE
    (30) PRIMTYPE -> . CHARACTER
    (31) PRIMTYPE -> . FLOAT
    (32) PRIMTYPE -> . VOID
    (33) CLASSTYPE -> . ID
    (34) ARRTYPE -> . INT OPENBRACKET CLOSEBRACKET
    (35) ARRTYPE -> . CLASSTYPE OPENBRACKET CLOSEBRACKET

    INT             shift and go to state 37
    BOOLEAN         shift and go to state 38
    STRING          shift and go to state 39
    DOUBLE          shift and go to state 40
    CHARACTER       shift and go to state 41
    FLOAT           shift and go to state 42
    VOID            shift and go to state 43
    ID              shift and go to state 67

    TYPE                           shift and go to state 86
    PRIMTYPE                       shift and go to state 27
    CLASSTYPE                      shift and go to state 28
    ARRTYPE                        shift and go to state 29

state 66

    (18) DECLARATORS -> C TYPE .

    ID              reduce using rule 18 (DECLARATORS -> C TYPE .)


state 67

    (33) CLASSTYPE -> ID .

    OPENBRACKET     reduce using rule 33 (CLASSTYPE -> ID .)
    ID              reduce using rule 33 (CLASSTYPE -> ID .)


state 68

    (17) DECLARATORS -> STATIC TYPE .

    ID              reduce using rule 17 (DECLARATORS -> STATIC TYPE .)


state 69

    (65) EXPRESSION2 -> TYPE ID . ASSIGN ID OP ID SEMI
    (66) EXPRESSION3 -> TYPE ID . SEMI
    (67) EXPRESSION4 -> TYPE ID . ASSIGN VALUE SEMI
    (78) EXPRESSION6 -> TYPE ID . ASSIGN EXPRESSION OP EXPRESSION SEMI

    ASSIGN          shift and go to state 87
    SEMI            shift and go to state 88


state 70

    (48) STATEMENT -> REFERENCE OPENBRACKET . EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI
    (58) EXPRESSION -> . EXPRESSION1
    (59) EXPRESSION -> . EXPRESSION2
    (60) EXPRESSION -> . EXPRESSION3
    (61) EXPRESSION -> . EXPRESSION4
    (62) EXPRESSION -> . EXPRESSION5
    (63) EXPRESSION -> . EXPRESSION6
    (64) EXPRESSION1 -> . ID ASSIGN ID OP ID SEMI
    (65) EXPRESSION2 -> . TYPE ID ASSIGN ID OP ID SEMI
    (66) EXPRESSION3 -> . TYPE ID SEMI
    (67) EXPRESSION4 -> . TYPE ID ASSIGN VALUE SEMI
    (68) EXPRESSION5 -> . ID ASSIGN VALUE SEMI
    (73) EXPRESSION6 -> . TRUE
    (74) EXPRESSION6 -> . FALSE
    (75) EXPRESSION6 -> . NULL
    (76) EXPRESSION6 -> . ID
    (77) EXPRESSION6 -> . VALUE
    (78) EXPRESSION6 -> . TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI
    (79) EXPRESSION6 -> . ID ASSIGN ID OP ID OP ID SEMI
    (80) EXPRESSION6 -> . EMPTY
    (81) EXPRESSION6 -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I
    (23) TYPE -> . PRIMTYPE
    (24) TYPE -> . CLASSTYPE
    (25) TYPE -> . ARRTYPE
    (69) VALUE -> . VALUE1
    (70) VALUE -> . VALUE2
    (22) EMPTY -> .
    (42) REFERENCE -> . THIS G
    (43) REFERENCE -> . ID G
    (26) PRIMTYPE -> . INT
    (27) PRIMTYPE -> . BOOLEAN
    (28) PRIMTYPE -> . STRING
    (29) PRIMTYPE -> . DOUBLE
    (30) PRIMTYPE -> . CHARACTER
    (31) PRIMTYPE -> . FLOAT
    (32) PRIMTYPE -> . VOID
    (33) CLASSTYPE -> . ID
    (34) ARRTYPE -> . INT OPENBRACKET CLOSEBRACKET
    (35) ARRTYPE -> . CLASSTYPE OPENBRACKET CLOSEBRACKET
    (71) VALUE1 -> . NUMBER
    (72) VALUE2 -> . CHAR

    ID              shift and go to state 91
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    NULL            shift and go to state 47
    CLOSEBRACKET    reduce using rule 22 (EMPTY -> .)
    THIS            shift and go to state 36
    INT             shift and go to state 37
    BOOLEAN         shift and go to state 38
    STRING          shift and go to state 39
    DOUBLE          shift and go to state 40
    CHARACTER       shift and go to state 41
    FLOAT           shift and go to state 42
    VOID            shift and go to state 43
    NUMBER          shift and go to state 48
    CHAR            shift and go to state 51

    REFERENCE                      shift and go to state 89
    EXPRESSION                     shift and go to state 90
    EXPRESSION1                    shift and go to state 30
    EXPRESSION2                    shift and go to state 31
    EXPRESSION3                    shift and go to state 32
    EXPRESSION4                    shift and go to state 33
    EXPRESSION5                    shift and go to state 34
    EXPRESSION6                    shift and go to state 35
    TYPE                           shift and go to state 60
    VALUE                          shift and go to state 44
    EMPTY                          shift and go to state 92
    PRIMTYPE                       shift and go to state 27
    CLASSTYPE                      shift and go to state 28
    ARRTYPE                        shift and go to state 29
    VALUE1                         shift and go to state 49
    VALUE2                         shift and go to state 50

state 71

    (49) STATEMENT -> REFERENCE ASSIGN . EXPRESSION SEMI
    (81) EXPRESSION6 -> REFERENCE ASSIGN . NUMBER SEMI REFERENCE OP REFERENCE SEMI I
    (58) EXPRESSION -> . EXPRESSION1
    (59) EXPRESSION -> . EXPRESSION2
    (60) EXPRESSION -> . EXPRESSION3
    (61) EXPRESSION -> . EXPRESSION4
    (62) EXPRESSION -> . EXPRESSION5
    (63) EXPRESSION -> . EXPRESSION6
    (64) EXPRESSION1 -> . ID ASSIGN ID OP ID SEMI
    (65) EXPRESSION2 -> . TYPE ID ASSIGN ID OP ID SEMI
    (66) EXPRESSION3 -> . TYPE ID SEMI
    (67) EXPRESSION4 -> . TYPE ID ASSIGN VALUE SEMI
    (68) EXPRESSION5 -> . ID ASSIGN VALUE SEMI
    (73) EXPRESSION6 -> . TRUE
    (74) EXPRESSION6 -> . FALSE
    (75) EXPRESSION6 -> . NULL
    (76) EXPRESSION6 -> . ID
    (77) EXPRESSION6 -> . VALUE
    (78) EXPRESSION6 -> . TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI
    (79) EXPRESSION6 -> . ID ASSIGN ID OP ID OP ID SEMI
    (80) EXPRESSION6 -> . EMPTY
    (81) EXPRESSION6 -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I
    (23) TYPE -> . PRIMTYPE
    (24) TYPE -> . CLASSTYPE
    (25) TYPE -> . ARRTYPE
    (69) VALUE -> . VALUE1
    (70) VALUE -> . VALUE2
    (22) EMPTY -> .
    (42) REFERENCE -> . THIS G
    (43) REFERENCE -> . ID G
    (26) PRIMTYPE -> . INT
    (27) PRIMTYPE -> . BOOLEAN
    (28) PRIMTYPE -> . STRING
    (29) PRIMTYPE -> . DOUBLE
    (30) PRIMTYPE -> . CHARACTER
    (31) PRIMTYPE -> . FLOAT
    (32) PRIMTYPE -> . VOID
    (33) CLASSTYPE -> . ID
    (34) ARRTYPE -> . INT OPENBRACKET CLOSEBRACKET
    (35) ARRTYPE -> . CLASSTYPE OPENBRACKET CLOSEBRACKET
    (71) VALUE1 -> . NUMBER
    (72) VALUE2 -> . CHAR

    NUMBER          shift and go to state 94
    ID              shift and go to state 91
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    NULL            shift and go to state 47
    SEMI            reduce using rule 22 (EMPTY -> .)
    THIS            shift and go to state 36
    INT             shift and go to state 37
    BOOLEAN         shift and go to state 38
    STRING          shift and go to state 39
    DOUBLE          shift and go to state 40
    CHARACTER       shift and go to state 41
    FLOAT           shift and go to state 42
    VOID            shift and go to state 43
    CHAR            shift and go to state 51

    REFERENCE                      shift and go to state 89
    EXPRESSION                     shift and go to state 93
    EXPRESSION1                    shift and go to state 30
    EXPRESSION2                    shift and go to state 31
    EXPRESSION3                    shift and go to state 32
    EXPRESSION4                    shift and go to state 33
    EXPRESSION5                    shift and go to state 34
    EXPRESSION6                    shift and go to state 35
    TYPE                           shift and go to state 60
    VALUE                          shift and go to state 44
    EMPTY                          shift and go to state 92
    PRIMTYPE                       shift and go to state 27
    CLASSTYPE                      shift and go to state 28
    ARRTYPE                        shift and go to state 29
    VALUE1                         shift and go to state 49
    VALUE2                         shift and go to state 50

state 72

    (50) STATEMENT -> REFERENCE OPENPAR . CLOSEPAR SEMI
    (51) STATEMENT -> REFERENCE OPENPAR . ARGUMENTLIST CLOSEPAR SEMI
    (39) ARGUMENTLIST -> . EXPRESSION E
    (58) EXPRESSION -> . EXPRESSION1
    (59) EXPRESSION -> . EXPRESSION2
    (60) EXPRESSION -> . EXPRESSION3
    (61) EXPRESSION -> . EXPRESSION4
    (62) EXPRESSION -> . EXPRESSION5
    (63) EXPRESSION -> . EXPRESSION6
    (64) EXPRESSION1 -> . ID ASSIGN ID OP ID SEMI
    (65) EXPRESSION2 -> . TYPE ID ASSIGN ID OP ID SEMI
    (66) EXPRESSION3 -> . TYPE ID SEMI
    (67) EXPRESSION4 -> . TYPE ID ASSIGN VALUE SEMI
    (68) EXPRESSION5 -> . ID ASSIGN VALUE SEMI
    (73) EXPRESSION6 -> . TRUE
    (74) EXPRESSION6 -> . FALSE
    (75) EXPRESSION6 -> . NULL
    (76) EXPRESSION6 -> . ID
    (77) EXPRESSION6 -> . VALUE
    (78) EXPRESSION6 -> . TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI
    (79) EXPRESSION6 -> . ID ASSIGN ID OP ID OP ID SEMI
    (80) EXPRESSION6 -> . EMPTY
    (81) EXPRESSION6 -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I
    (23) TYPE -> . PRIMTYPE
    (24) TYPE -> . CLASSTYPE
    (25) TYPE -> . ARRTYPE
    (69) VALUE -> . VALUE1
    (70) VALUE -> . VALUE2
    (22) EMPTY -> .
    (42) REFERENCE -> . THIS G
    (43) REFERENCE -> . ID G
    (26) PRIMTYPE -> . INT
    (27) PRIMTYPE -> . BOOLEAN
    (28) PRIMTYPE -> . STRING
    (29) PRIMTYPE -> . DOUBLE
    (30) PRIMTYPE -> . CHARACTER
    (31) PRIMTYPE -> . FLOAT
    (32) PRIMTYPE -> . VOID
    (33) CLASSTYPE -> . ID
    (34) ARRTYPE -> . INT OPENBRACKET CLOSEBRACKET
    (35) ARRTYPE -> . CLASSTYPE OPENBRACKET CLOSEBRACKET
    (71) VALUE1 -> . NUMBER
    (72) VALUE2 -> . CHAR

  ! shift/reduce conflict for CLOSEPAR resolved as shift
    CLOSEPAR        shift and go to state 95
    ID              shift and go to state 91
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    NULL            shift and go to state 47
    COMMA           reduce using rule 22 (EMPTY -> .)
    THIS            shift and go to state 36
    INT             shift and go to state 37
    BOOLEAN         shift and go to state 38
    STRING          shift and go to state 39
    DOUBLE          shift and go to state 40
    CHARACTER       shift and go to state 41
    FLOAT           shift and go to state 42
    VOID            shift and go to state 43
    NUMBER          shift and go to state 48
    CHAR            shift and go to state 51

  ! CLOSEPAR        [ reduce using rule 22 (EMPTY -> .) ]

    REFERENCE                      shift and go to state 89
    ARGUMENTLIST                   shift and go to state 96
    EXPRESSION                     shift and go to state 97
    EXPRESSION1                    shift and go to state 30
    EXPRESSION2                    shift and go to state 31
    EXPRESSION3                    shift and go to state 32
    EXPRESSION4                    shift and go to state 33
    EXPRESSION5                    shift and go to state 34
    EXPRESSION6                    shift and go to state 35
    TYPE                           shift and go to state 60
    VALUE                          shift and go to state 44
    EMPTY                          shift and go to state 92
    PRIMTYPE                       shift and go to state 27
    CLASSTYPE                      shift and go to state 28
    ARRTYPE                        shift and go to state 29
    VALUE1                         shift and go to state 49
    VALUE2                         shift and go to state 50

state 73

    (52) STATEMENT -> IF OPENPAR . EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT
    (53) STATEMENT -> IF OPENPAR . EXPRESSION CLOSEPAR STATEMENT
    (58) EXPRESSION -> . EXPRESSION1
    (59) EXPRESSION -> . EXPRESSION2
    (60) EXPRESSION -> . EXPRESSION3
    (61) EXPRESSION -> . EXPRESSION4
    (62) EXPRESSION -> . EXPRESSION5
    (63) EXPRESSION -> . EXPRESSION6
    (64) EXPRESSION1 -> . ID ASSIGN ID OP ID SEMI
    (65) EXPRESSION2 -> . TYPE ID ASSIGN ID OP ID SEMI
    (66) EXPRESSION3 -> . TYPE ID SEMI
    (67) EXPRESSION4 -> . TYPE ID ASSIGN VALUE SEMI
    (68) EXPRESSION5 -> . ID ASSIGN VALUE SEMI
    (73) EXPRESSION6 -> . TRUE
    (74) EXPRESSION6 -> . FALSE
    (75) EXPRESSION6 -> . NULL
    (76) EXPRESSION6 -> . ID
    (77) EXPRESSION6 -> . VALUE
    (78) EXPRESSION6 -> . TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI
    (79) EXPRESSION6 -> . ID ASSIGN ID OP ID OP ID SEMI
    (80) EXPRESSION6 -> . EMPTY
    (81) EXPRESSION6 -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I
    (23) TYPE -> . PRIMTYPE
    (24) TYPE -> . CLASSTYPE
    (25) TYPE -> . ARRTYPE
    (69) VALUE -> . VALUE1
    (70) VALUE -> . VALUE2
    (22) EMPTY -> .
    (42) REFERENCE -> . THIS G
    (43) REFERENCE -> . ID G
    (26) PRIMTYPE -> . INT
    (27) PRIMTYPE -> . BOOLEAN
    (28) PRIMTYPE -> . STRING
    (29) PRIMTYPE -> . DOUBLE
    (30) PRIMTYPE -> . CHARACTER
    (31) PRIMTYPE -> . FLOAT
    (32) PRIMTYPE -> . VOID
    (33) CLASSTYPE -> . ID
    (34) ARRTYPE -> . INT OPENBRACKET CLOSEBRACKET
    (35) ARRTYPE -> . CLASSTYPE OPENBRACKET CLOSEBRACKET
    (71) VALUE1 -> . NUMBER
    (72) VALUE2 -> . CHAR

    ID              shift and go to state 91
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    NULL            shift and go to state 47
    CLOSEPAR        reduce using rule 22 (EMPTY -> .)
    THIS            shift and go to state 36
    INT             shift and go to state 37
    BOOLEAN         shift and go to state 38
    STRING          shift and go to state 39
    DOUBLE          shift and go to state 40
    CHARACTER       shift and go to state 41
    FLOAT           shift and go to state 42
    VOID            shift and go to state 43
    NUMBER          shift and go to state 48
    CHAR            shift and go to state 51

    EXPRESSION                     shift and go to state 98
    EXPRESSION1                    shift and go to state 30
    EXPRESSION2                    shift and go to state 31
    EXPRESSION3                    shift and go to state 32
    EXPRESSION4                    shift and go to state 33
    EXPRESSION5                    shift and go to state 34
    EXPRESSION6                    shift and go to state 35
    TYPE                           shift and go to state 60
    VALUE                          shift and go to state 44
    EMPTY                          shift and go to state 92
    REFERENCE                      shift and go to state 89
    PRIMTYPE                       shift and go to state 27
    CLASSTYPE                      shift and go to state 28
    ARRTYPE                        shift and go to state 29
    VALUE1                         shift and go to state 49
    VALUE2                         shift and go to state 50

state 74

    (54) STATEMENT -> FOR OPENPAR . EXPRESSION CLOSEPAR STATEMENT
    (58) EXPRESSION -> . EXPRESSION1
    (59) EXPRESSION -> . EXPRESSION2
    (60) EXPRESSION -> . EXPRESSION3
    (61) EXPRESSION -> . EXPRESSION4
    (62) EXPRESSION -> . EXPRESSION5
    (63) EXPRESSION -> . EXPRESSION6
    (64) EXPRESSION1 -> . ID ASSIGN ID OP ID SEMI
    (65) EXPRESSION2 -> . TYPE ID ASSIGN ID OP ID SEMI
    (66) EXPRESSION3 -> . TYPE ID SEMI
    (67) EXPRESSION4 -> . TYPE ID ASSIGN VALUE SEMI
    (68) EXPRESSION5 -> . ID ASSIGN VALUE SEMI
    (73) EXPRESSION6 -> . TRUE
    (74) EXPRESSION6 -> . FALSE
    (75) EXPRESSION6 -> . NULL
    (76) EXPRESSION6 -> . ID
    (77) EXPRESSION6 -> . VALUE
    (78) EXPRESSION6 -> . TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI
    (79) EXPRESSION6 -> . ID ASSIGN ID OP ID OP ID SEMI
    (80) EXPRESSION6 -> . EMPTY
    (81) EXPRESSION6 -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I
    (23) TYPE -> . PRIMTYPE
    (24) TYPE -> . CLASSTYPE
    (25) TYPE -> . ARRTYPE
    (69) VALUE -> . VALUE1
    (70) VALUE -> . VALUE2
    (22) EMPTY -> .
    (42) REFERENCE -> . THIS G
    (43) REFERENCE -> . ID G
    (26) PRIMTYPE -> . INT
    (27) PRIMTYPE -> . BOOLEAN
    (28) PRIMTYPE -> . STRING
    (29) PRIMTYPE -> . DOUBLE
    (30) PRIMTYPE -> . CHARACTER
    (31) PRIMTYPE -> . FLOAT
    (32) PRIMTYPE -> . VOID
    (33) CLASSTYPE -> . ID
    (34) ARRTYPE -> . INT OPENBRACKET CLOSEBRACKET
    (35) ARRTYPE -> . CLASSTYPE OPENBRACKET CLOSEBRACKET
    (71) VALUE1 -> . NUMBER
    (72) VALUE2 -> . CHAR

    ID              shift and go to state 91
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    NULL            shift and go to state 47
    CLOSEPAR        reduce using rule 22 (EMPTY -> .)
    THIS            shift and go to state 36
    INT             shift and go to state 37
    BOOLEAN         shift and go to state 38
    STRING          shift and go to state 39
    DOUBLE          shift and go to state 40
    CHARACTER       shift and go to state 41
    FLOAT           shift and go to state 42
    VOID            shift and go to state 43
    NUMBER          shift and go to state 48
    CHAR            shift and go to state 51

    EXPRESSION                     shift and go to state 99
    EXPRESSION1                    shift and go to state 30
    EXPRESSION2                    shift and go to state 31
    EXPRESSION3                    shift and go to state 32
    EXPRESSION4                    shift and go to state 33
    EXPRESSION5                    shift and go to state 34
    EXPRESSION6                    shift and go to state 35
    TYPE                           shift and go to state 60
    VALUE                          shift and go to state 44
    EMPTY                          shift and go to state 92
    REFERENCE                      shift and go to state 89
    PRIMTYPE                       shift and go to state 27
    CLASSTYPE                      shift and go to state 28
    ARRTYPE                        shift and go to state 29
    VALUE1                         shift and go to state 49
    VALUE2                         shift and go to state 50

state 75

    (55) STATEMENT -> WHILE OPENPAR . EXPRESSION CLOSEPAR STATEMENT
    (58) EXPRESSION -> . EXPRESSION1
    (59) EXPRESSION -> . EXPRESSION2
    (60) EXPRESSION -> . EXPRESSION3
    (61) EXPRESSION -> . EXPRESSION4
    (62) EXPRESSION -> . EXPRESSION5
    (63) EXPRESSION -> . EXPRESSION6
    (64) EXPRESSION1 -> . ID ASSIGN ID OP ID SEMI
    (65) EXPRESSION2 -> . TYPE ID ASSIGN ID OP ID SEMI
    (66) EXPRESSION3 -> . TYPE ID SEMI
    (67) EXPRESSION4 -> . TYPE ID ASSIGN VALUE SEMI
    (68) EXPRESSION5 -> . ID ASSIGN VALUE SEMI
    (73) EXPRESSION6 -> . TRUE
    (74) EXPRESSION6 -> . FALSE
    (75) EXPRESSION6 -> . NULL
    (76) EXPRESSION6 -> . ID
    (77) EXPRESSION6 -> . VALUE
    (78) EXPRESSION6 -> . TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI
    (79) EXPRESSION6 -> . ID ASSIGN ID OP ID OP ID SEMI
    (80) EXPRESSION6 -> . EMPTY
    (81) EXPRESSION6 -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I
    (23) TYPE -> . PRIMTYPE
    (24) TYPE -> . CLASSTYPE
    (25) TYPE -> . ARRTYPE
    (69) VALUE -> . VALUE1
    (70) VALUE -> . VALUE2
    (22) EMPTY -> .
    (42) REFERENCE -> . THIS G
    (43) REFERENCE -> . ID G
    (26) PRIMTYPE -> . INT
    (27) PRIMTYPE -> . BOOLEAN
    (28) PRIMTYPE -> . STRING
    (29) PRIMTYPE -> . DOUBLE
    (30) PRIMTYPE -> . CHARACTER
    (31) PRIMTYPE -> . FLOAT
    (32) PRIMTYPE -> . VOID
    (33) CLASSTYPE -> . ID
    (34) ARRTYPE -> . INT OPENBRACKET CLOSEBRACKET
    (35) ARRTYPE -> . CLASSTYPE OPENBRACKET CLOSEBRACKET
    (71) VALUE1 -> . NUMBER
    (72) VALUE2 -> . CHAR

    ID              shift and go to state 91
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    NULL            shift and go to state 47
    CLOSEPAR        reduce using rule 22 (EMPTY -> .)
    THIS            shift and go to state 36
    INT             shift and go to state 37
    BOOLEAN         shift and go to state 38
    STRING          shift and go to state 39
    DOUBLE          shift and go to state 40
    CHARACTER       shift and go to state 41
    FLOAT           shift and go to state 42
    VOID            shift and go to state 43
    NUMBER          shift and go to state 48
    CHAR            shift and go to state 51

    EXPRESSION                     shift and go to state 100
    EXPRESSION1                    shift and go to state 30
    EXPRESSION2                    shift and go to state 31
    EXPRESSION3                    shift and go to state 32
    EXPRESSION4                    shift and go to state 33
    EXPRESSION5                    shift and go to state 34
    EXPRESSION6                    shift and go to state 35
    TYPE                           shift and go to state 60
    VALUE                          shift and go to state 44
    EMPTY                          shift and go to state 92
    REFERENCE                      shift and go to state 89
    PRIMTYPE                       shift and go to state 27
    CLASSTYPE                      shift and go to state 28
    ARRTYPE                        shift and go to state 29
    VALUE1                         shift and go to state 49
    VALUE2                         shift and go to state 50

state 76

    (35) ARRTYPE -> CLASSTYPE OPENBRACKET . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 101


state 77

    (42) REFERENCE -> THIS G .

    OPENBRACKET     reduce using rule 42 (REFERENCE -> THIS G .)
    ASSIGN          reduce using rule 42 (REFERENCE -> THIS G .)
    OPENPAR         reduce using rule 42 (REFERENCE -> THIS G .)
    LESSEQUAL       reduce using rule 42 (REFERENCE -> THIS G .)
    EQUALS          reduce using rule 42 (REFERENCE -> THIS G .)
    GREATEREQUAL    reduce using rule 42 (REFERENCE -> THIS G .)
    GREATERTHAN     reduce using rule 42 (REFERENCE -> THIS G .)
    LESSTHAN        reduce using rule 42 (REFERENCE -> THIS G .)
    ADD             reduce using rule 42 (REFERENCE -> THIS G .)
    MINUS           reduce using rule 42 (REFERENCE -> THIS G .)
    MULT            reduce using rule 42 (REFERENCE -> THIS G .)
    NOTEQUAL        reduce using rule 42 (REFERENCE -> THIS G .)
    DIVIDE          reduce using rule 42 (REFERENCE -> THIS G .)
    PEQUAL          reduce using rule 42 (REFERENCE -> THIS G .)
    MEQUAL          reduce using rule 42 (REFERENCE -> THIS G .)
    PLUSPLUS        reduce using rule 42 (REFERENCE -> THIS G .)
    SEMI            reduce using rule 42 (REFERENCE -> THIS G .)
    STATIC          reduce using rule 42 (REFERENCE -> THIS G .)
    OPENAKOL        reduce using rule 42 (REFERENCE -> THIS G .)
    IF              reduce using rule 42 (REFERENCE -> THIS G .)
    FOR             reduce using rule 42 (REFERENCE -> THIS G .)
    WHILE           reduce using rule 42 (REFERENCE -> THIS G .)
    PUBLIC          reduce using rule 42 (REFERENCE -> THIS G .)
    PRIVATE         reduce using rule 42 (REFERENCE -> THIS G .)
    THIS            reduce using rule 42 (REFERENCE -> THIS G .)
    ID              reduce using rule 42 (REFERENCE -> THIS G .)
    INT             reduce using rule 42 (REFERENCE -> THIS G .)
    BOOLEAN         reduce using rule 42 (REFERENCE -> THIS G .)
    STRING          reduce using rule 42 (REFERENCE -> THIS G .)
    DOUBLE          reduce using rule 42 (REFERENCE -> THIS G .)
    CHARACTER       reduce using rule 42 (REFERENCE -> THIS G .)
    FLOAT           reduce using rule 42 (REFERENCE -> THIS G .)
    VOID            reduce using rule 42 (REFERENCE -> THIS G .)
    TRUE            reduce using rule 42 (REFERENCE -> THIS G .)
    FALSE           reduce using rule 42 (REFERENCE -> THIS G .)
    NULL            reduce using rule 42 (REFERENCE -> THIS G .)
    NUMBER          reduce using rule 42 (REFERENCE -> THIS G .)
    CHAR            reduce using rule 42 (REFERENCE -> THIS G .)
    CLOSEAKOL       reduce using rule 42 (REFERENCE -> THIS G .)
    CLOSEBRACKET    reduce using rule 42 (REFERENCE -> THIS G .)
    COMMA           reduce using rule 42 (REFERENCE -> THIS G .)
    CLOSEPAR        reduce using rule 42 (REFERENCE -> THIS G .)
    ELSE            reduce using rule 42 (REFERENCE -> THIS G .)
    RETURN          reduce using rule 42 (REFERENCE -> THIS G .)


state 78

    (34) ARRTYPE -> INT OPENBRACKET . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 102


state 79

    (64) EXPRESSION1 -> ID ASSIGN ID . OP ID SEMI
    (79) EXPRESSION6 -> ID ASSIGN ID . OP ID OP ID SEMI
    (82) OP -> . LESSEQUAL
    (83) OP -> . ASSIGN
    (84) OP -> . EQUALS
    (85) OP -> . GREATEREQUAL
    (86) OP -> . GREATERTHAN
    (87) OP -> . LESSTHAN
    (88) OP -> . ADD
    (89) OP -> . MINUS
    (90) OP -> . MULT
    (91) OP -> . NOTEQUAL
    (92) OP -> . DIVIDE
    (93) OP -> . PEQUAL
    (94) OP -> . MEQUAL
    (95) OP -> . PLUSPLUS

    LESSEQUAL       shift and go to state 105
    ASSIGN          shift and go to state 103
    EQUALS          shift and go to state 106
    GREATEREQUAL    shift and go to state 107
    GREATERTHAN     shift and go to state 108
    LESSTHAN        shift and go to state 109
    ADD             shift and go to state 110
    MINUS           shift and go to state 111
    MULT            shift and go to state 112
    NOTEQUAL        shift and go to state 113
    DIVIDE          shift and go to state 114
    PEQUAL          shift and go to state 115
    MEQUAL          shift and go to state 116
    PLUSPLUS        shift and go to state 117

    OP                             shift and go to state 104

state 80

    (68) EXPRESSION5 -> ID ASSIGN VALUE . SEMI

    SEMI            shift and go to state 118


state 81

    (44) G -> DOT ID . G
    (44) G -> . DOT ID G
    (45) G -> . EMPTY
    (22) EMPTY -> .

    DOT             shift and go to state 54
    OPENBRACKET     reduce using rule 22 (EMPTY -> .)
    ASSIGN          reduce using rule 22 (EMPTY -> .)
    OPENPAR         reduce using rule 22 (EMPTY -> .)
    LESSEQUAL       reduce using rule 22 (EMPTY -> .)
    EQUALS          reduce using rule 22 (EMPTY -> .)
    GREATEREQUAL    reduce using rule 22 (EMPTY -> .)
    GREATERTHAN     reduce using rule 22 (EMPTY -> .)
    LESSTHAN        reduce using rule 22 (EMPTY -> .)
    ADD             reduce using rule 22 (EMPTY -> .)
    MINUS           reduce using rule 22 (EMPTY -> .)
    MULT            reduce using rule 22 (EMPTY -> .)
    NOTEQUAL        reduce using rule 22 (EMPTY -> .)
    DIVIDE          reduce using rule 22 (EMPTY -> .)
    PEQUAL          reduce using rule 22 (EMPTY -> .)
    MEQUAL          reduce using rule 22 (EMPTY -> .)
    PLUSPLUS        reduce using rule 22 (EMPTY -> .)
    SEMI            reduce using rule 22 (EMPTY -> .)
    STATIC          reduce using rule 22 (EMPTY -> .)
    OPENAKOL        reduce using rule 22 (EMPTY -> .)
    IF              reduce using rule 22 (EMPTY -> .)
    FOR             reduce using rule 22 (EMPTY -> .)
    WHILE           reduce using rule 22 (EMPTY -> .)
    PUBLIC          reduce using rule 22 (EMPTY -> .)
    PRIVATE         reduce using rule 22 (EMPTY -> .)
    THIS            reduce using rule 22 (EMPTY -> .)
    ID              reduce using rule 22 (EMPTY -> .)
    INT             reduce using rule 22 (EMPTY -> .)
    BOOLEAN         reduce using rule 22 (EMPTY -> .)
    STRING          reduce using rule 22 (EMPTY -> .)
    DOUBLE          reduce using rule 22 (EMPTY -> .)
    CHARACTER       reduce using rule 22 (EMPTY -> .)
    FLOAT           reduce using rule 22 (EMPTY -> .)
    VOID            reduce using rule 22 (EMPTY -> .)
    TRUE            reduce using rule 22 (EMPTY -> .)
    FALSE           reduce using rule 22 (EMPTY -> .)
    NULL            reduce using rule 22 (EMPTY -> .)
    NUMBER          reduce using rule 22 (EMPTY -> .)
    CHAR            reduce using rule 22 (EMPTY -> .)
    CLOSEAKOL       reduce using rule 22 (EMPTY -> .)
    CLOSEBRACKET    reduce using rule 22 (EMPTY -> .)
    COMMA           reduce using rule 22 (EMPTY -> .)
    CLOSEPAR        reduce using rule 22 (EMPTY -> .)
    ELSE            reduce using rule 22 (EMPTY -> .)
    RETURN          reduce using rule 22 (EMPTY -> .)

    G                              shift and go to state 119
    EMPTY                          shift and go to state 55

state 82

    (46) STATEMENT -> OPENAKOL H CLOSEAKOL .

    STATIC          reduce using rule 46 (STATEMENT -> OPENAKOL H CLOSEAKOL .)
    OPENAKOL        reduce using rule 46 (STATEMENT -> OPENAKOL H CLOSEAKOL .)
    IF              reduce using rule 46 (STATEMENT -> OPENAKOL H CLOSEAKOL .)
    FOR             reduce using rule 46 (STATEMENT -> OPENAKOL H CLOSEAKOL .)
    WHILE           reduce using rule 46 (STATEMENT -> OPENAKOL H CLOSEAKOL .)
    PUBLIC          reduce using rule 46 (STATEMENT -> OPENAKOL H CLOSEAKOL .)
    PRIVATE         reduce using rule 46 (STATEMENT -> OPENAKOL H CLOSEAKOL .)
    THIS            reduce using rule 46 (STATEMENT -> OPENAKOL H CLOSEAKOL .)
    ID              reduce using rule 46 (STATEMENT -> OPENAKOL H CLOSEAKOL .)
    INT             reduce using rule 46 (STATEMENT -> OPENAKOL H CLOSEAKOL .)
    BOOLEAN         reduce using rule 46 (STATEMENT -> OPENAKOL H CLOSEAKOL .)
    STRING          reduce using rule 46 (STATEMENT -> OPENAKOL H CLOSEAKOL .)
    DOUBLE          reduce using rule 46 (STATEMENT -> OPENAKOL H CLOSEAKOL .)
    CHARACTER       reduce using rule 46 (STATEMENT -> OPENAKOL H CLOSEAKOL .)
    FLOAT           reduce using rule 46 (STATEMENT -> OPENAKOL H CLOSEAKOL .)
    VOID            reduce using rule 46 (STATEMENT -> OPENAKOL H CLOSEAKOL .)
    TRUE            reduce using rule 46 (STATEMENT -> OPENAKOL H CLOSEAKOL .)
    FALSE           reduce using rule 46 (STATEMENT -> OPENAKOL H CLOSEAKOL .)
    NULL            reduce using rule 46 (STATEMENT -> OPENAKOL H CLOSEAKOL .)
    NUMBER          reduce using rule 46 (STATEMENT -> OPENAKOL H CLOSEAKOL .)
    CHAR            reduce using rule 46 (STATEMENT -> OPENAKOL H CLOSEAKOL .)
    CLOSEAKOL       reduce using rule 46 (STATEMENT -> OPENAKOL H CLOSEAKOL .)
    ELSE            reduce using rule 46 (STATEMENT -> OPENAKOL H CLOSEAKOL .)
    RETURN          reduce using rule 46 (STATEMENT -> OPENAKOL H CLOSEAKOL .)


state 83

    (56) H -> STATEMENT H .

    CLOSEAKOL       reduce using rule 56 (H -> STATEMENT H .)


state 84

    (8) FIELDDECLARATION -> DECLARATORS ID SEMI .

    STATIC          reduce using rule 8 (FIELDDECLARATION -> DECLARATORS ID SEMI .)
    OPENAKOL        reduce using rule 8 (FIELDDECLARATION -> DECLARATORS ID SEMI .)
    IF              reduce using rule 8 (FIELDDECLARATION -> DECLARATORS ID SEMI .)
    FOR             reduce using rule 8 (FIELDDECLARATION -> DECLARATORS ID SEMI .)
    WHILE           reduce using rule 8 (FIELDDECLARATION -> DECLARATORS ID SEMI .)
    PUBLIC          reduce using rule 8 (FIELDDECLARATION -> DECLARATORS ID SEMI .)
    PRIVATE         reduce using rule 8 (FIELDDECLARATION -> DECLARATORS ID SEMI .)
    THIS            reduce using rule 8 (FIELDDECLARATION -> DECLARATORS ID SEMI .)
    ID              reduce using rule 8 (FIELDDECLARATION -> DECLARATORS ID SEMI .)
    INT             reduce using rule 8 (FIELDDECLARATION -> DECLARATORS ID SEMI .)
    BOOLEAN         reduce using rule 8 (FIELDDECLARATION -> DECLARATORS ID SEMI .)
    STRING          reduce using rule 8 (FIELDDECLARATION -> DECLARATORS ID SEMI .)
    DOUBLE          reduce using rule 8 (FIELDDECLARATION -> DECLARATORS ID SEMI .)
    CHARACTER       reduce using rule 8 (FIELDDECLARATION -> DECLARATORS ID SEMI .)
    FLOAT           reduce using rule 8 (FIELDDECLARATION -> DECLARATORS ID SEMI .)
    VOID            reduce using rule 8 (FIELDDECLARATION -> DECLARATORS ID SEMI .)
    TRUE            reduce using rule 8 (FIELDDECLARATION -> DECLARATORS ID SEMI .)
    FALSE           reduce using rule 8 (FIELDDECLARATION -> DECLARATORS ID SEMI .)
    NULL            reduce using rule 8 (FIELDDECLARATION -> DECLARATORS ID SEMI .)
    NUMBER          reduce using rule 8 (FIELDDECLARATION -> DECLARATORS ID SEMI .)
    CHAR            reduce using rule 8 (FIELDDECLARATION -> DECLARATORS ID SEMI .)
    CLOSEAKOL       reduce using rule 8 (FIELDDECLARATION -> DECLARATORS ID SEMI .)


state 85

    (10) METHODDECLARATION -> DECLARATORS ID OPENPAR . PARAMERERLIST CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL
    (11) METHODDECLARATION -> DECLARATORS ID OPENPAR . CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL
    (12) METHODDECLARATION -> DECLARATORS ID OPENPAR . PARAMERERLIST CLOSEPAR OPENAKOL B CLOSEAKOL
    (13) METHODDECLARATION -> DECLARATORS ID OPENPAR . CLOSEPAR OPENAKOL B CLOSEAKOL
    (36) PARAMERERLIST -> . TYPE ID D
    (23) TYPE -> . PRIMTYPE
    (24) TYPE -> . CLASSTYPE
    (25) TYPE -> . ARRTYPE
    (26) PRIMTYPE -> . INT
    (27) PRIMTYPE -> . BOOLEAN
    (28) PRIMTYPE -> . STRING
    (29) PRIMTYPE -> . DOUBLE
    (30) PRIMTYPE -> . CHARACTER
    (31) PRIMTYPE -> . FLOAT
    (32) PRIMTYPE -> . VOID
    (33) CLASSTYPE -> . ID
    (34) ARRTYPE -> . INT OPENBRACKET CLOSEBRACKET
    (35) ARRTYPE -> . CLASSTYPE OPENBRACKET CLOSEBRACKET

    CLOSEPAR        shift and go to state 121
    INT             shift and go to state 37
    BOOLEAN         shift and go to state 38
    STRING          shift and go to state 39
    DOUBLE          shift and go to state 40
    CHARACTER       shift and go to state 41
    FLOAT           shift and go to state 42
    VOID            shift and go to state 43
    ID              shift and go to state 67

    PARAMERERLIST                  shift and go to state 120
    TYPE                           shift and go to state 122
    PRIMTYPE                       shift and go to state 27
    CLASSTYPE                      shift and go to state 28
    ARRTYPE                        shift and go to state 29

state 86

    (16) DECLARATORS -> C STATIC TYPE .

    ID              reduce using rule 16 (DECLARATORS -> C STATIC TYPE .)


state 87

    (65) EXPRESSION2 -> TYPE ID ASSIGN . ID OP ID SEMI
    (67) EXPRESSION4 -> TYPE ID ASSIGN . VALUE SEMI
    (78) EXPRESSION6 -> TYPE ID ASSIGN . EXPRESSION OP EXPRESSION SEMI
    (69) VALUE -> . VALUE1
    (70) VALUE -> . VALUE2
    (58) EXPRESSION -> . EXPRESSION1
    (59) EXPRESSION -> . EXPRESSION2
    (60) EXPRESSION -> . EXPRESSION3
    (61) EXPRESSION -> . EXPRESSION4
    (62) EXPRESSION -> . EXPRESSION5
    (63) EXPRESSION -> . EXPRESSION6
    (71) VALUE1 -> . NUMBER
    (72) VALUE2 -> . CHAR
    (64) EXPRESSION1 -> . ID ASSIGN ID OP ID SEMI
    (65) EXPRESSION2 -> . TYPE ID ASSIGN ID OP ID SEMI
    (66) EXPRESSION3 -> . TYPE ID SEMI
    (67) EXPRESSION4 -> . TYPE ID ASSIGN VALUE SEMI
    (68) EXPRESSION5 -> . ID ASSIGN VALUE SEMI
    (73) EXPRESSION6 -> . TRUE
    (74) EXPRESSION6 -> . FALSE
    (75) EXPRESSION6 -> . NULL
    (76) EXPRESSION6 -> . ID
    (77) EXPRESSION6 -> . VALUE
    (78) EXPRESSION6 -> . TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI
    (79) EXPRESSION6 -> . ID ASSIGN ID OP ID OP ID SEMI
    (80) EXPRESSION6 -> . EMPTY
    (81) EXPRESSION6 -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I
    (23) TYPE -> . PRIMTYPE
    (24) TYPE -> . CLASSTYPE
    (25) TYPE -> . ARRTYPE
    (22) EMPTY -> .
    (42) REFERENCE -> . THIS G
    (43) REFERENCE -> . ID G
    (26) PRIMTYPE -> . INT
    (27) PRIMTYPE -> . BOOLEAN
    (28) PRIMTYPE -> . STRING
    (29) PRIMTYPE -> . DOUBLE
    (30) PRIMTYPE -> . CHARACTER
    (31) PRIMTYPE -> . FLOAT
    (32) PRIMTYPE -> . VOID
    (33) CLASSTYPE -> . ID
    (34) ARRTYPE -> . INT OPENBRACKET CLOSEBRACKET
    (35) ARRTYPE -> . CLASSTYPE OPENBRACKET CLOSEBRACKET

    ID              shift and go to state 123
    NUMBER          shift and go to state 48
    CHAR            shift and go to state 51
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    NULL            shift and go to state 47
    LESSEQUAL       reduce using rule 22 (EMPTY -> .)
    ASSIGN          reduce using rule 22 (EMPTY -> .)
    EQUALS          reduce using rule 22 (EMPTY -> .)
    GREATEREQUAL    reduce using rule 22 (EMPTY -> .)
    GREATERTHAN     reduce using rule 22 (EMPTY -> .)
    LESSTHAN        reduce using rule 22 (EMPTY -> .)
    ADD             reduce using rule 22 (EMPTY -> .)
    MINUS           reduce using rule 22 (EMPTY -> .)
    MULT            reduce using rule 22 (EMPTY -> .)
    NOTEQUAL        reduce using rule 22 (EMPTY -> .)
    DIVIDE          reduce using rule 22 (EMPTY -> .)
    PEQUAL          reduce using rule 22 (EMPTY -> .)
    MEQUAL          reduce using rule 22 (EMPTY -> .)
    PLUSPLUS        reduce using rule 22 (EMPTY -> .)
    THIS            shift and go to state 36
    INT             shift and go to state 37
    BOOLEAN         shift and go to state 38
    STRING          shift and go to state 39
    DOUBLE          shift and go to state 40
    CHARACTER       shift and go to state 41
    FLOAT           shift and go to state 42
    VOID            shift and go to state 43

    TYPE                           shift and go to state 60
    VALUE                          shift and go to state 124
    EXPRESSION                     shift and go to state 125
    VALUE1                         shift and go to state 49
    VALUE2                         shift and go to state 50
    EXPRESSION1                    shift and go to state 30
    EXPRESSION2                    shift and go to state 31
    EXPRESSION3                    shift and go to state 32
    EXPRESSION4                    shift and go to state 33
    EXPRESSION5                    shift and go to state 34
    EXPRESSION6                    shift and go to state 35
    EMPTY                          shift and go to state 92
    REFERENCE                      shift and go to state 89
    PRIMTYPE                       shift and go to state 27
    CLASSTYPE                      shift and go to state 28
    ARRTYPE                        shift and go to state 29

state 88

    (66) EXPRESSION3 -> TYPE ID SEMI .

    STATIC          reduce using rule 66 (EXPRESSION3 -> TYPE ID SEMI .)
    OPENAKOL        reduce using rule 66 (EXPRESSION3 -> TYPE ID SEMI .)
    IF              reduce using rule 66 (EXPRESSION3 -> TYPE ID SEMI .)
    FOR             reduce using rule 66 (EXPRESSION3 -> TYPE ID SEMI .)
    WHILE           reduce using rule 66 (EXPRESSION3 -> TYPE ID SEMI .)
    PUBLIC          reduce using rule 66 (EXPRESSION3 -> TYPE ID SEMI .)
    PRIVATE         reduce using rule 66 (EXPRESSION3 -> TYPE ID SEMI .)
    THIS            reduce using rule 66 (EXPRESSION3 -> TYPE ID SEMI .)
    ID              reduce using rule 66 (EXPRESSION3 -> TYPE ID SEMI .)
    INT             reduce using rule 66 (EXPRESSION3 -> TYPE ID SEMI .)
    BOOLEAN         reduce using rule 66 (EXPRESSION3 -> TYPE ID SEMI .)
    STRING          reduce using rule 66 (EXPRESSION3 -> TYPE ID SEMI .)
    DOUBLE          reduce using rule 66 (EXPRESSION3 -> TYPE ID SEMI .)
    CHARACTER       reduce using rule 66 (EXPRESSION3 -> TYPE ID SEMI .)
    FLOAT           reduce using rule 66 (EXPRESSION3 -> TYPE ID SEMI .)
    VOID            reduce using rule 66 (EXPRESSION3 -> TYPE ID SEMI .)
    TRUE            reduce using rule 66 (EXPRESSION3 -> TYPE ID SEMI .)
    FALSE           reduce using rule 66 (EXPRESSION3 -> TYPE ID SEMI .)
    NULL            reduce using rule 66 (EXPRESSION3 -> TYPE ID SEMI .)
    NUMBER          reduce using rule 66 (EXPRESSION3 -> TYPE ID SEMI .)
    CHAR            reduce using rule 66 (EXPRESSION3 -> TYPE ID SEMI .)
    CLOSEAKOL       reduce using rule 66 (EXPRESSION3 -> TYPE ID SEMI .)
    CLOSEBRACKET    reduce using rule 66 (EXPRESSION3 -> TYPE ID SEMI .)
    SEMI            reduce using rule 66 (EXPRESSION3 -> TYPE ID SEMI .)
    COMMA           reduce using rule 66 (EXPRESSION3 -> TYPE ID SEMI .)
    CLOSEPAR        reduce using rule 66 (EXPRESSION3 -> TYPE ID SEMI .)
    LESSEQUAL       reduce using rule 66 (EXPRESSION3 -> TYPE ID SEMI .)
    ASSIGN          reduce using rule 66 (EXPRESSION3 -> TYPE ID SEMI .)
    EQUALS          reduce using rule 66 (EXPRESSION3 -> TYPE ID SEMI .)
    GREATEREQUAL    reduce using rule 66 (EXPRESSION3 -> TYPE ID SEMI .)
    GREATERTHAN     reduce using rule 66 (EXPRESSION3 -> TYPE ID SEMI .)
    LESSTHAN        reduce using rule 66 (EXPRESSION3 -> TYPE ID SEMI .)
    ADD             reduce using rule 66 (EXPRESSION3 -> TYPE ID SEMI .)
    MINUS           reduce using rule 66 (EXPRESSION3 -> TYPE ID SEMI .)
    MULT            reduce using rule 66 (EXPRESSION3 -> TYPE ID SEMI .)
    NOTEQUAL        reduce using rule 66 (EXPRESSION3 -> TYPE ID SEMI .)
    DIVIDE          reduce using rule 66 (EXPRESSION3 -> TYPE ID SEMI .)
    PEQUAL          reduce using rule 66 (EXPRESSION3 -> TYPE ID SEMI .)
    MEQUAL          reduce using rule 66 (EXPRESSION3 -> TYPE ID SEMI .)
    PLUSPLUS        reduce using rule 66 (EXPRESSION3 -> TYPE ID SEMI .)
    ELSE            reduce using rule 66 (EXPRESSION3 -> TYPE ID SEMI .)
    RETURN          reduce using rule 66 (EXPRESSION3 -> TYPE ID SEMI .)


state 89

    (81) EXPRESSION6 -> REFERENCE . ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I

    ASSIGN          shift and go to state 126


state 90

    (48) STATEMENT -> REFERENCE OPENBRACKET EXPRESSION . CLOSEBRACKET ASSIGN EXPRESSION SEMI

    CLOSEBRACKET    shift and go to state 127


state 91

    (64) EXPRESSION1 -> ID . ASSIGN ID OP ID SEMI
    (68) EXPRESSION5 -> ID . ASSIGN VALUE SEMI
    (76) EXPRESSION6 -> ID .
    (79) EXPRESSION6 -> ID . ASSIGN ID OP ID OP ID SEMI
    (43) REFERENCE -> ID . G
    (33) CLASSTYPE -> ID .
    (44) G -> . DOT ID G
    (45) G -> . EMPTY
    (22) EMPTY -> .

  ! shift/reduce conflict for ASSIGN resolved as shift
    ASSIGN          shift and go to state 53
    CLOSEBRACKET    reduce using rule 76 (EXPRESSION6 -> ID .)
    SEMI            reduce using rule 76 (EXPRESSION6 -> ID .)
    COMMA           reduce using rule 76 (EXPRESSION6 -> ID .)
    CLOSEPAR        reduce using rule 76 (EXPRESSION6 -> ID .)
    OPENBRACKET     reduce using rule 33 (CLASSTYPE -> ID .)
    ID              reduce using rule 33 (CLASSTYPE -> ID .)
    DOT             shift and go to state 54

  ! ASSIGN          [ reduce using rule 22 (EMPTY -> .) ]

    G                              shift and go to state 52
    EMPTY                          shift and go to state 55

state 92

    (80) EXPRESSION6 -> EMPTY .

    CLOSEBRACKET    reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    SEMI            reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    COMMA           reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    CLOSEPAR        reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    LESSEQUAL       reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    ASSIGN          reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    EQUALS          reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    GREATEREQUAL    reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    GREATERTHAN     reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    LESSTHAN        reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    ADD             reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    MINUS           reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    MULT            reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    NOTEQUAL        reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    DIVIDE          reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    PEQUAL          reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    MEQUAL          reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    PLUSPLUS        reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    ELSE            reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    STATIC          reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    OPENAKOL        reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    IF              reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    FOR             reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    WHILE           reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    PUBLIC          reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    PRIVATE         reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    THIS            reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    ID              reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    INT             reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    BOOLEAN         reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    STRING          reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    DOUBLE          reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    CHARACTER       reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    FLOAT           reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    VOID            reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    TRUE            reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    FALSE           reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    NULL            reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    NUMBER          reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    CHAR            reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    CLOSEAKOL       reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    RETURN          reduce using rule 80 (EXPRESSION6 -> EMPTY .)


state 93

    (49) STATEMENT -> REFERENCE ASSIGN EXPRESSION . SEMI

    SEMI            shift and go to state 128


state 94

    (81) EXPRESSION6 -> REFERENCE ASSIGN NUMBER . SEMI REFERENCE OP REFERENCE SEMI I
    (71) VALUE1 -> NUMBER .

  ! shift/reduce conflict for SEMI resolved as shift
    SEMI            shift and go to state 129

  ! SEMI            [ reduce using rule 71 (VALUE1 -> NUMBER .) ]


state 95

    (50) STATEMENT -> REFERENCE OPENPAR CLOSEPAR . SEMI

    SEMI            shift and go to state 130


state 96

    (51) STATEMENT -> REFERENCE OPENPAR ARGUMENTLIST . CLOSEPAR SEMI

    CLOSEPAR        shift and go to state 131


state 97

    (39) ARGUMENTLIST -> EXPRESSION . E
    (40) E -> . COMMA EXPRESSION
    (41) E -> . EMPTY
    (22) EMPTY -> .

    COMMA           shift and go to state 133
    CLOSEPAR        reduce using rule 22 (EMPTY -> .)

    E                              shift and go to state 132
    EMPTY                          shift and go to state 134

state 98

    (52) STATEMENT -> IF OPENPAR EXPRESSION . CLOSEPAR STATEMENT ELSE STATEMENT
    (53) STATEMENT -> IF OPENPAR EXPRESSION . CLOSEPAR STATEMENT

    CLOSEPAR        shift and go to state 135


state 99

    (54) STATEMENT -> FOR OPENPAR EXPRESSION . CLOSEPAR STATEMENT

    CLOSEPAR        shift and go to state 136


state 100

    (55) STATEMENT -> WHILE OPENPAR EXPRESSION . CLOSEPAR STATEMENT

    CLOSEPAR        shift and go to state 137


state 101

    (35) ARRTYPE -> CLASSTYPE OPENBRACKET CLOSEBRACKET .

    ID              reduce using rule 35 (ARRTYPE -> CLASSTYPE OPENBRACKET CLOSEBRACKET .)


state 102

    (34) ARRTYPE -> INT OPENBRACKET CLOSEBRACKET .

    ID              reduce using rule 34 (ARRTYPE -> INT OPENBRACKET CLOSEBRACKET .)


state 103

    (83) OP -> ASSIGN .

    ID              reduce using rule 83 (OP -> ASSIGN .)
    TRUE            reduce using rule 83 (OP -> ASSIGN .)
    FALSE           reduce using rule 83 (OP -> ASSIGN .)
    NULL            reduce using rule 83 (OP -> ASSIGN .)
    THIS            reduce using rule 83 (OP -> ASSIGN .)
    INT             reduce using rule 83 (OP -> ASSIGN .)
    BOOLEAN         reduce using rule 83 (OP -> ASSIGN .)
    STRING          reduce using rule 83 (OP -> ASSIGN .)
    DOUBLE          reduce using rule 83 (OP -> ASSIGN .)
    CHARACTER       reduce using rule 83 (OP -> ASSIGN .)
    FLOAT           reduce using rule 83 (OP -> ASSIGN .)
    VOID            reduce using rule 83 (OP -> ASSIGN .)
    NUMBER          reduce using rule 83 (OP -> ASSIGN .)
    CHAR            reduce using rule 83 (OP -> ASSIGN .)
    SEMI            reduce using rule 83 (OP -> ASSIGN .)
    STATIC          reduce using rule 83 (OP -> ASSIGN .)
    OPENAKOL        reduce using rule 83 (OP -> ASSIGN .)
    IF              reduce using rule 83 (OP -> ASSIGN .)
    FOR             reduce using rule 83 (OP -> ASSIGN .)
    WHILE           reduce using rule 83 (OP -> ASSIGN .)
    PUBLIC          reduce using rule 83 (OP -> ASSIGN .)
    PRIVATE         reduce using rule 83 (OP -> ASSIGN .)
    CLOSEAKOL       reduce using rule 83 (OP -> ASSIGN .)
    CLOSEBRACKET    reduce using rule 83 (OP -> ASSIGN .)
    COMMA           reduce using rule 83 (OP -> ASSIGN .)
    CLOSEPAR        reduce using rule 83 (OP -> ASSIGN .)
    LESSEQUAL       reduce using rule 83 (OP -> ASSIGN .)
    ASSIGN          reduce using rule 83 (OP -> ASSIGN .)
    EQUALS          reduce using rule 83 (OP -> ASSIGN .)
    GREATEREQUAL    reduce using rule 83 (OP -> ASSIGN .)
    GREATERTHAN     reduce using rule 83 (OP -> ASSIGN .)
    LESSTHAN        reduce using rule 83 (OP -> ASSIGN .)
    ADD             reduce using rule 83 (OP -> ASSIGN .)
    MINUS           reduce using rule 83 (OP -> ASSIGN .)
    MULT            reduce using rule 83 (OP -> ASSIGN .)
    NOTEQUAL        reduce using rule 83 (OP -> ASSIGN .)
    DIVIDE          reduce using rule 83 (OP -> ASSIGN .)
    PEQUAL          reduce using rule 83 (OP -> ASSIGN .)
    MEQUAL          reduce using rule 83 (OP -> ASSIGN .)
    PLUSPLUS        reduce using rule 83 (OP -> ASSIGN .)
    ELSE            reduce using rule 83 (OP -> ASSIGN .)
    RETURN          reduce using rule 83 (OP -> ASSIGN .)


state 104

    (64) EXPRESSION1 -> ID ASSIGN ID OP . ID SEMI
    (79) EXPRESSION6 -> ID ASSIGN ID OP . ID OP ID SEMI

    ID              shift and go to state 138


state 105

    (82) OP -> LESSEQUAL .

    ID              reduce using rule 82 (OP -> LESSEQUAL .)
    TRUE            reduce using rule 82 (OP -> LESSEQUAL .)
    FALSE           reduce using rule 82 (OP -> LESSEQUAL .)
    NULL            reduce using rule 82 (OP -> LESSEQUAL .)
    THIS            reduce using rule 82 (OP -> LESSEQUAL .)
    INT             reduce using rule 82 (OP -> LESSEQUAL .)
    BOOLEAN         reduce using rule 82 (OP -> LESSEQUAL .)
    STRING          reduce using rule 82 (OP -> LESSEQUAL .)
    DOUBLE          reduce using rule 82 (OP -> LESSEQUAL .)
    CHARACTER       reduce using rule 82 (OP -> LESSEQUAL .)
    FLOAT           reduce using rule 82 (OP -> LESSEQUAL .)
    VOID            reduce using rule 82 (OP -> LESSEQUAL .)
    NUMBER          reduce using rule 82 (OP -> LESSEQUAL .)
    CHAR            reduce using rule 82 (OP -> LESSEQUAL .)
    SEMI            reduce using rule 82 (OP -> LESSEQUAL .)
    STATIC          reduce using rule 82 (OP -> LESSEQUAL .)
    OPENAKOL        reduce using rule 82 (OP -> LESSEQUAL .)
    IF              reduce using rule 82 (OP -> LESSEQUAL .)
    FOR             reduce using rule 82 (OP -> LESSEQUAL .)
    WHILE           reduce using rule 82 (OP -> LESSEQUAL .)
    PUBLIC          reduce using rule 82 (OP -> LESSEQUAL .)
    PRIVATE         reduce using rule 82 (OP -> LESSEQUAL .)
    CLOSEAKOL       reduce using rule 82 (OP -> LESSEQUAL .)
    CLOSEBRACKET    reduce using rule 82 (OP -> LESSEQUAL .)
    COMMA           reduce using rule 82 (OP -> LESSEQUAL .)
    CLOSEPAR        reduce using rule 82 (OP -> LESSEQUAL .)
    LESSEQUAL       reduce using rule 82 (OP -> LESSEQUAL .)
    ASSIGN          reduce using rule 82 (OP -> LESSEQUAL .)
    EQUALS          reduce using rule 82 (OP -> LESSEQUAL .)
    GREATEREQUAL    reduce using rule 82 (OP -> LESSEQUAL .)
    GREATERTHAN     reduce using rule 82 (OP -> LESSEQUAL .)
    LESSTHAN        reduce using rule 82 (OP -> LESSEQUAL .)
    ADD             reduce using rule 82 (OP -> LESSEQUAL .)
    MINUS           reduce using rule 82 (OP -> LESSEQUAL .)
    MULT            reduce using rule 82 (OP -> LESSEQUAL .)
    NOTEQUAL        reduce using rule 82 (OP -> LESSEQUAL .)
    DIVIDE          reduce using rule 82 (OP -> LESSEQUAL .)
    PEQUAL          reduce using rule 82 (OP -> LESSEQUAL .)
    MEQUAL          reduce using rule 82 (OP -> LESSEQUAL .)
    PLUSPLUS        reduce using rule 82 (OP -> LESSEQUAL .)
    ELSE            reduce using rule 82 (OP -> LESSEQUAL .)
    RETURN          reduce using rule 82 (OP -> LESSEQUAL .)


state 106

    (84) OP -> EQUALS .

    ID              reduce using rule 84 (OP -> EQUALS .)
    TRUE            reduce using rule 84 (OP -> EQUALS .)
    FALSE           reduce using rule 84 (OP -> EQUALS .)
    NULL            reduce using rule 84 (OP -> EQUALS .)
    THIS            reduce using rule 84 (OP -> EQUALS .)
    INT             reduce using rule 84 (OP -> EQUALS .)
    BOOLEAN         reduce using rule 84 (OP -> EQUALS .)
    STRING          reduce using rule 84 (OP -> EQUALS .)
    DOUBLE          reduce using rule 84 (OP -> EQUALS .)
    CHARACTER       reduce using rule 84 (OP -> EQUALS .)
    FLOAT           reduce using rule 84 (OP -> EQUALS .)
    VOID            reduce using rule 84 (OP -> EQUALS .)
    NUMBER          reduce using rule 84 (OP -> EQUALS .)
    CHAR            reduce using rule 84 (OP -> EQUALS .)
    SEMI            reduce using rule 84 (OP -> EQUALS .)
    STATIC          reduce using rule 84 (OP -> EQUALS .)
    OPENAKOL        reduce using rule 84 (OP -> EQUALS .)
    IF              reduce using rule 84 (OP -> EQUALS .)
    FOR             reduce using rule 84 (OP -> EQUALS .)
    WHILE           reduce using rule 84 (OP -> EQUALS .)
    PUBLIC          reduce using rule 84 (OP -> EQUALS .)
    PRIVATE         reduce using rule 84 (OP -> EQUALS .)
    CLOSEAKOL       reduce using rule 84 (OP -> EQUALS .)
    CLOSEBRACKET    reduce using rule 84 (OP -> EQUALS .)
    COMMA           reduce using rule 84 (OP -> EQUALS .)
    CLOSEPAR        reduce using rule 84 (OP -> EQUALS .)
    LESSEQUAL       reduce using rule 84 (OP -> EQUALS .)
    ASSIGN          reduce using rule 84 (OP -> EQUALS .)
    EQUALS          reduce using rule 84 (OP -> EQUALS .)
    GREATEREQUAL    reduce using rule 84 (OP -> EQUALS .)
    GREATERTHAN     reduce using rule 84 (OP -> EQUALS .)
    LESSTHAN        reduce using rule 84 (OP -> EQUALS .)
    ADD             reduce using rule 84 (OP -> EQUALS .)
    MINUS           reduce using rule 84 (OP -> EQUALS .)
    MULT            reduce using rule 84 (OP -> EQUALS .)
    NOTEQUAL        reduce using rule 84 (OP -> EQUALS .)
    DIVIDE          reduce using rule 84 (OP -> EQUALS .)
    PEQUAL          reduce using rule 84 (OP -> EQUALS .)
    MEQUAL          reduce using rule 84 (OP -> EQUALS .)
    PLUSPLUS        reduce using rule 84 (OP -> EQUALS .)
    ELSE            reduce using rule 84 (OP -> EQUALS .)
    RETURN          reduce using rule 84 (OP -> EQUALS .)


state 107

    (85) OP -> GREATEREQUAL .

    ID              reduce using rule 85 (OP -> GREATEREQUAL .)
    TRUE            reduce using rule 85 (OP -> GREATEREQUAL .)
    FALSE           reduce using rule 85 (OP -> GREATEREQUAL .)
    NULL            reduce using rule 85 (OP -> GREATEREQUAL .)
    THIS            reduce using rule 85 (OP -> GREATEREQUAL .)
    INT             reduce using rule 85 (OP -> GREATEREQUAL .)
    BOOLEAN         reduce using rule 85 (OP -> GREATEREQUAL .)
    STRING          reduce using rule 85 (OP -> GREATEREQUAL .)
    DOUBLE          reduce using rule 85 (OP -> GREATEREQUAL .)
    CHARACTER       reduce using rule 85 (OP -> GREATEREQUAL .)
    FLOAT           reduce using rule 85 (OP -> GREATEREQUAL .)
    VOID            reduce using rule 85 (OP -> GREATEREQUAL .)
    NUMBER          reduce using rule 85 (OP -> GREATEREQUAL .)
    CHAR            reduce using rule 85 (OP -> GREATEREQUAL .)
    SEMI            reduce using rule 85 (OP -> GREATEREQUAL .)
    STATIC          reduce using rule 85 (OP -> GREATEREQUAL .)
    OPENAKOL        reduce using rule 85 (OP -> GREATEREQUAL .)
    IF              reduce using rule 85 (OP -> GREATEREQUAL .)
    FOR             reduce using rule 85 (OP -> GREATEREQUAL .)
    WHILE           reduce using rule 85 (OP -> GREATEREQUAL .)
    PUBLIC          reduce using rule 85 (OP -> GREATEREQUAL .)
    PRIVATE         reduce using rule 85 (OP -> GREATEREQUAL .)
    CLOSEAKOL       reduce using rule 85 (OP -> GREATEREQUAL .)
    CLOSEBRACKET    reduce using rule 85 (OP -> GREATEREQUAL .)
    COMMA           reduce using rule 85 (OP -> GREATEREQUAL .)
    CLOSEPAR        reduce using rule 85 (OP -> GREATEREQUAL .)
    LESSEQUAL       reduce using rule 85 (OP -> GREATEREQUAL .)
    ASSIGN          reduce using rule 85 (OP -> GREATEREQUAL .)
    EQUALS          reduce using rule 85 (OP -> GREATEREQUAL .)
    GREATEREQUAL    reduce using rule 85 (OP -> GREATEREQUAL .)
    GREATERTHAN     reduce using rule 85 (OP -> GREATEREQUAL .)
    LESSTHAN        reduce using rule 85 (OP -> GREATEREQUAL .)
    ADD             reduce using rule 85 (OP -> GREATEREQUAL .)
    MINUS           reduce using rule 85 (OP -> GREATEREQUAL .)
    MULT            reduce using rule 85 (OP -> GREATEREQUAL .)
    NOTEQUAL        reduce using rule 85 (OP -> GREATEREQUAL .)
    DIVIDE          reduce using rule 85 (OP -> GREATEREQUAL .)
    PEQUAL          reduce using rule 85 (OP -> GREATEREQUAL .)
    MEQUAL          reduce using rule 85 (OP -> GREATEREQUAL .)
    PLUSPLUS        reduce using rule 85 (OP -> GREATEREQUAL .)
    ELSE            reduce using rule 85 (OP -> GREATEREQUAL .)
    RETURN          reduce using rule 85 (OP -> GREATEREQUAL .)


state 108

    (86) OP -> GREATERTHAN .

    ID              reduce using rule 86 (OP -> GREATERTHAN .)
    TRUE            reduce using rule 86 (OP -> GREATERTHAN .)
    FALSE           reduce using rule 86 (OP -> GREATERTHAN .)
    NULL            reduce using rule 86 (OP -> GREATERTHAN .)
    THIS            reduce using rule 86 (OP -> GREATERTHAN .)
    INT             reduce using rule 86 (OP -> GREATERTHAN .)
    BOOLEAN         reduce using rule 86 (OP -> GREATERTHAN .)
    STRING          reduce using rule 86 (OP -> GREATERTHAN .)
    DOUBLE          reduce using rule 86 (OP -> GREATERTHAN .)
    CHARACTER       reduce using rule 86 (OP -> GREATERTHAN .)
    FLOAT           reduce using rule 86 (OP -> GREATERTHAN .)
    VOID            reduce using rule 86 (OP -> GREATERTHAN .)
    NUMBER          reduce using rule 86 (OP -> GREATERTHAN .)
    CHAR            reduce using rule 86 (OP -> GREATERTHAN .)
    SEMI            reduce using rule 86 (OP -> GREATERTHAN .)
    STATIC          reduce using rule 86 (OP -> GREATERTHAN .)
    OPENAKOL        reduce using rule 86 (OP -> GREATERTHAN .)
    IF              reduce using rule 86 (OP -> GREATERTHAN .)
    FOR             reduce using rule 86 (OP -> GREATERTHAN .)
    WHILE           reduce using rule 86 (OP -> GREATERTHAN .)
    PUBLIC          reduce using rule 86 (OP -> GREATERTHAN .)
    PRIVATE         reduce using rule 86 (OP -> GREATERTHAN .)
    CLOSEAKOL       reduce using rule 86 (OP -> GREATERTHAN .)
    CLOSEBRACKET    reduce using rule 86 (OP -> GREATERTHAN .)
    COMMA           reduce using rule 86 (OP -> GREATERTHAN .)
    CLOSEPAR        reduce using rule 86 (OP -> GREATERTHAN .)
    LESSEQUAL       reduce using rule 86 (OP -> GREATERTHAN .)
    ASSIGN          reduce using rule 86 (OP -> GREATERTHAN .)
    EQUALS          reduce using rule 86 (OP -> GREATERTHAN .)
    GREATEREQUAL    reduce using rule 86 (OP -> GREATERTHAN .)
    GREATERTHAN     reduce using rule 86 (OP -> GREATERTHAN .)
    LESSTHAN        reduce using rule 86 (OP -> GREATERTHAN .)
    ADD             reduce using rule 86 (OP -> GREATERTHAN .)
    MINUS           reduce using rule 86 (OP -> GREATERTHAN .)
    MULT            reduce using rule 86 (OP -> GREATERTHAN .)
    NOTEQUAL        reduce using rule 86 (OP -> GREATERTHAN .)
    DIVIDE          reduce using rule 86 (OP -> GREATERTHAN .)
    PEQUAL          reduce using rule 86 (OP -> GREATERTHAN .)
    MEQUAL          reduce using rule 86 (OP -> GREATERTHAN .)
    PLUSPLUS        reduce using rule 86 (OP -> GREATERTHAN .)
    ELSE            reduce using rule 86 (OP -> GREATERTHAN .)
    RETURN          reduce using rule 86 (OP -> GREATERTHAN .)


state 109

    (87) OP -> LESSTHAN .

    ID              reduce using rule 87 (OP -> LESSTHAN .)
    TRUE            reduce using rule 87 (OP -> LESSTHAN .)
    FALSE           reduce using rule 87 (OP -> LESSTHAN .)
    NULL            reduce using rule 87 (OP -> LESSTHAN .)
    THIS            reduce using rule 87 (OP -> LESSTHAN .)
    INT             reduce using rule 87 (OP -> LESSTHAN .)
    BOOLEAN         reduce using rule 87 (OP -> LESSTHAN .)
    STRING          reduce using rule 87 (OP -> LESSTHAN .)
    DOUBLE          reduce using rule 87 (OP -> LESSTHAN .)
    CHARACTER       reduce using rule 87 (OP -> LESSTHAN .)
    FLOAT           reduce using rule 87 (OP -> LESSTHAN .)
    VOID            reduce using rule 87 (OP -> LESSTHAN .)
    NUMBER          reduce using rule 87 (OP -> LESSTHAN .)
    CHAR            reduce using rule 87 (OP -> LESSTHAN .)
    SEMI            reduce using rule 87 (OP -> LESSTHAN .)
    STATIC          reduce using rule 87 (OP -> LESSTHAN .)
    OPENAKOL        reduce using rule 87 (OP -> LESSTHAN .)
    IF              reduce using rule 87 (OP -> LESSTHAN .)
    FOR             reduce using rule 87 (OP -> LESSTHAN .)
    WHILE           reduce using rule 87 (OP -> LESSTHAN .)
    PUBLIC          reduce using rule 87 (OP -> LESSTHAN .)
    PRIVATE         reduce using rule 87 (OP -> LESSTHAN .)
    CLOSEAKOL       reduce using rule 87 (OP -> LESSTHAN .)
    CLOSEBRACKET    reduce using rule 87 (OP -> LESSTHAN .)
    COMMA           reduce using rule 87 (OP -> LESSTHAN .)
    CLOSEPAR        reduce using rule 87 (OP -> LESSTHAN .)
    LESSEQUAL       reduce using rule 87 (OP -> LESSTHAN .)
    ASSIGN          reduce using rule 87 (OP -> LESSTHAN .)
    EQUALS          reduce using rule 87 (OP -> LESSTHAN .)
    GREATEREQUAL    reduce using rule 87 (OP -> LESSTHAN .)
    GREATERTHAN     reduce using rule 87 (OP -> LESSTHAN .)
    LESSTHAN        reduce using rule 87 (OP -> LESSTHAN .)
    ADD             reduce using rule 87 (OP -> LESSTHAN .)
    MINUS           reduce using rule 87 (OP -> LESSTHAN .)
    MULT            reduce using rule 87 (OP -> LESSTHAN .)
    NOTEQUAL        reduce using rule 87 (OP -> LESSTHAN .)
    DIVIDE          reduce using rule 87 (OP -> LESSTHAN .)
    PEQUAL          reduce using rule 87 (OP -> LESSTHAN .)
    MEQUAL          reduce using rule 87 (OP -> LESSTHAN .)
    PLUSPLUS        reduce using rule 87 (OP -> LESSTHAN .)
    ELSE            reduce using rule 87 (OP -> LESSTHAN .)
    RETURN          reduce using rule 87 (OP -> LESSTHAN .)


state 110

    (88) OP -> ADD .

    ID              reduce using rule 88 (OP -> ADD .)
    TRUE            reduce using rule 88 (OP -> ADD .)
    FALSE           reduce using rule 88 (OP -> ADD .)
    NULL            reduce using rule 88 (OP -> ADD .)
    THIS            reduce using rule 88 (OP -> ADD .)
    INT             reduce using rule 88 (OP -> ADD .)
    BOOLEAN         reduce using rule 88 (OP -> ADD .)
    STRING          reduce using rule 88 (OP -> ADD .)
    DOUBLE          reduce using rule 88 (OP -> ADD .)
    CHARACTER       reduce using rule 88 (OP -> ADD .)
    FLOAT           reduce using rule 88 (OP -> ADD .)
    VOID            reduce using rule 88 (OP -> ADD .)
    NUMBER          reduce using rule 88 (OP -> ADD .)
    CHAR            reduce using rule 88 (OP -> ADD .)
    SEMI            reduce using rule 88 (OP -> ADD .)
    STATIC          reduce using rule 88 (OP -> ADD .)
    OPENAKOL        reduce using rule 88 (OP -> ADD .)
    IF              reduce using rule 88 (OP -> ADD .)
    FOR             reduce using rule 88 (OP -> ADD .)
    WHILE           reduce using rule 88 (OP -> ADD .)
    PUBLIC          reduce using rule 88 (OP -> ADD .)
    PRIVATE         reduce using rule 88 (OP -> ADD .)
    CLOSEAKOL       reduce using rule 88 (OP -> ADD .)
    CLOSEBRACKET    reduce using rule 88 (OP -> ADD .)
    COMMA           reduce using rule 88 (OP -> ADD .)
    CLOSEPAR        reduce using rule 88 (OP -> ADD .)
    LESSEQUAL       reduce using rule 88 (OP -> ADD .)
    ASSIGN          reduce using rule 88 (OP -> ADD .)
    EQUALS          reduce using rule 88 (OP -> ADD .)
    GREATEREQUAL    reduce using rule 88 (OP -> ADD .)
    GREATERTHAN     reduce using rule 88 (OP -> ADD .)
    LESSTHAN        reduce using rule 88 (OP -> ADD .)
    ADD             reduce using rule 88 (OP -> ADD .)
    MINUS           reduce using rule 88 (OP -> ADD .)
    MULT            reduce using rule 88 (OP -> ADD .)
    NOTEQUAL        reduce using rule 88 (OP -> ADD .)
    DIVIDE          reduce using rule 88 (OP -> ADD .)
    PEQUAL          reduce using rule 88 (OP -> ADD .)
    MEQUAL          reduce using rule 88 (OP -> ADD .)
    PLUSPLUS        reduce using rule 88 (OP -> ADD .)
    ELSE            reduce using rule 88 (OP -> ADD .)
    RETURN          reduce using rule 88 (OP -> ADD .)


state 111

    (89) OP -> MINUS .

    ID              reduce using rule 89 (OP -> MINUS .)
    TRUE            reduce using rule 89 (OP -> MINUS .)
    FALSE           reduce using rule 89 (OP -> MINUS .)
    NULL            reduce using rule 89 (OP -> MINUS .)
    THIS            reduce using rule 89 (OP -> MINUS .)
    INT             reduce using rule 89 (OP -> MINUS .)
    BOOLEAN         reduce using rule 89 (OP -> MINUS .)
    STRING          reduce using rule 89 (OP -> MINUS .)
    DOUBLE          reduce using rule 89 (OP -> MINUS .)
    CHARACTER       reduce using rule 89 (OP -> MINUS .)
    FLOAT           reduce using rule 89 (OP -> MINUS .)
    VOID            reduce using rule 89 (OP -> MINUS .)
    NUMBER          reduce using rule 89 (OP -> MINUS .)
    CHAR            reduce using rule 89 (OP -> MINUS .)
    SEMI            reduce using rule 89 (OP -> MINUS .)
    STATIC          reduce using rule 89 (OP -> MINUS .)
    OPENAKOL        reduce using rule 89 (OP -> MINUS .)
    IF              reduce using rule 89 (OP -> MINUS .)
    FOR             reduce using rule 89 (OP -> MINUS .)
    WHILE           reduce using rule 89 (OP -> MINUS .)
    PUBLIC          reduce using rule 89 (OP -> MINUS .)
    PRIVATE         reduce using rule 89 (OP -> MINUS .)
    CLOSEAKOL       reduce using rule 89 (OP -> MINUS .)
    CLOSEBRACKET    reduce using rule 89 (OP -> MINUS .)
    COMMA           reduce using rule 89 (OP -> MINUS .)
    CLOSEPAR        reduce using rule 89 (OP -> MINUS .)
    LESSEQUAL       reduce using rule 89 (OP -> MINUS .)
    ASSIGN          reduce using rule 89 (OP -> MINUS .)
    EQUALS          reduce using rule 89 (OP -> MINUS .)
    GREATEREQUAL    reduce using rule 89 (OP -> MINUS .)
    GREATERTHAN     reduce using rule 89 (OP -> MINUS .)
    LESSTHAN        reduce using rule 89 (OP -> MINUS .)
    ADD             reduce using rule 89 (OP -> MINUS .)
    MINUS           reduce using rule 89 (OP -> MINUS .)
    MULT            reduce using rule 89 (OP -> MINUS .)
    NOTEQUAL        reduce using rule 89 (OP -> MINUS .)
    DIVIDE          reduce using rule 89 (OP -> MINUS .)
    PEQUAL          reduce using rule 89 (OP -> MINUS .)
    MEQUAL          reduce using rule 89 (OP -> MINUS .)
    PLUSPLUS        reduce using rule 89 (OP -> MINUS .)
    ELSE            reduce using rule 89 (OP -> MINUS .)
    RETURN          reduce using rule 89 (OP -> MINUS .)


state 112

    (90) OP -> MULT .

    ID              reduce using rule 90 (OP -> MULT .)
    TRUE            reduce using rule 90 (OP -> MULT .)
    FALSE           reduce using rule 90 (OP -> MULT .)
    NULL            reduce using rule 90 (OP -> MULT .)
    THIS            reduce using rule 90 (OP -> MULT .)
    INT             reduce using rule 90 (OP -> MULT .)
    BOOLEAN         reduce using rule 90 (OP -> MULT .)
    STRING          reduce using rule 90 (OP -> MULT .)
    DOUBLE          reduce using rule 90 (OP -> MULT .)
    CHARACTER       reduce using rule 90 (OP -> MULT .)
    FLOAT           reduce using rule 90 (OP -> MULT .)
    VOID            reduce using rule 90 (OP -> MULT .)
    NUMBER          reduce using rule 90 (OP -> MULT .)
    CHAR            reduce using rule 90 (OP -> MULT .)
    SEMI            reduce using rule 90 (OP -> MULT .)
    STATIC          reduce using rule 90 (OP -> MULT .)
    OPENAKOL        reduce using rule 90 (OP -> MULT .)
    IF              reduce using rule 90 (OP -> MULT .)
    FOR             reduce using rule 90 (OP -> MULT .)
    WHILE           reduce using rule 90 (OP -> MULT .)
    PUBLIC          reduce using rule 90 (OP -> MULT .)
    PRIVATE         reduce using rule 90 (OP -> MULT .)
    CLOSEAKOL       reduce using rule 90 (OP -> MULT .)
    CLOSEBRACKET    reduce using rule 90 (OP -> MULT .)
    COMMA           reduce using rule 90 (OP -> MULT .)
    CLOSEPAR        reduce using rule 90 (OP -> MULT .)
    LESSEQUAL       reduce using rule 90 (OP -> MULT .)
    ASSIGN          reduce using rule 90 (OP -> MULT .)
    EQUALS          reduce using rule 90 (OP -> MULT .)
    GREATEREQUAL    reduce using rule 90 (OP -> MULT .)
    GREATERTHAN     reduce using rule 90 (OP -> MULT .)
    LESSTHAN        reduce using rule 90 (OP -> MULT .)
    ADD             reduce using rule 90 (OP -> MULT .)
    MINUS           reduce using rule 90 (OP -> MULT .)
    MULT            reduce using rule 90 (OP -> MULT .)
    NOTEQUAL        reduce using rule 90 (OP -> MULT .)
    DIVIDE          reduce using rule 90 (OP -> MULT .)
    PEQUAL          reduce using rule 90 (OP -> MULT .)
    MEQUAL          reduce using rule 90 (OP -> MULT .)
    PLUSPLUS        reduce using rule 90 (OP -> MULT .)
    ELSE            reduce using rule 90 (OP -> MULT .)
    RETURN          reduce using rule 90 (OP -> MULT .)


state 113

    (91) OP -> NOTEQUAL .

    ID              reduce using rule 91 (OP -> NOTEQUAL .)
    TRUE            reduce using rule 91 (OP -> NOTEQUAL .)
    FALSE           reduce using rule 91 (OP -> NOTEQUAL .)
    NULL            reduce using rule 91 (OP -> NOTEQUAL .)
    THIS            reduce using rule 91 (OP -> NOTEQUAL .)
    INT             reduce using rule 91 (OP -> NOTEQUAL .)
    BOOLEAN         reduce using rule 91 (OP -> NOTEQUAL .)
    STRING          reduce using rule 91 (OP -> NOTEQUAL .)
    DOUBLE          reduce using rule 91 (OP -> NOTEQUAL .)
    CHARACTER       reduce using rule 91 (OP -> NOTEQUAL .)
    FLOAT           reduce using rule 91 (OP -> NOTEQUAL .)
    VOID            reduce using rule 91 (OP -> NOTEQUAL .)
    NUMBER          reduce using rule 91 (OP -> NOTEQUAL .)
    CHAR            reduce using rule 91 (OP -> NOTEQUAL .)
    SEMI            reduce using rule 91 (OP -> NOTEQUAL .)
    STATIC          reduce using rule 91 (OP -> NOTEQUAL .)
    OPENAKOL        reduce using rule 91 (OP -> NOTEQUAL .)
    IF              reduce using rule 91 (OP -> NOTEQUAL .)
    FOR             reduce using rule 91 (OP -> NOTEQUAL .)
    WHILE           reduce using rule 91 (OP -> NOTEQUAL .)
    PUBLIC          reduce using rule 91 (OP -> NOTEQUAL .)
    PRIVATE         reduce using rule 91 (OP -> NOTEQUAL .)
    CLOSEAKOL       reduce using rule 91 (OP -> NOTEQUAL .)
    CLOSEBRACKET    reduce using rule 91 (OP -> NOTEQUAL .)
    COMMA           reduce using rule 91 (OP -> NOTEQUAL .)
    CLOSEPAR        reduce using rule 91 (OP -> NOTEQUAL .)
    LESSEQUAL       reduce using rule 91 (OP -> NOTEQUAL .)
    ASSIGN          reduce using rule 91 (OP -> NOTEQUAL .)
    EQUALS          reduce using rule 91 (OP -> NOTEQUAL .)
    GREATEREQUAL    reduce using rule 91 (OP -> NOTEQUAL .)
    GREATERTHAN     reduce using rule 91 (OP -> NOTEQUAL .)
    LESSTHAN        reduce using rule 91 (OP -> NOTEQUAL .)
    ADD             reduce using rule 91 (OP -> NOTEQUAL .)
    MINUS           reduce using rule 91 (OP -> NOTEQUAL .)
    MULT            reduce using rule 91 (OP -> NOTEQUAL .)
    NOTEQUAL        reduce using rule 91 (OP -> NOTEQUAL .)
    DIVIDE          reduce using rule 91 (OP -> NOTEQUAL .)
    PEQUAL          reduce using rule 91 (OP -> NOTEQUAL .)
    MEQUAL          reduce using rule 91 (OP -> NOTEQUAL .)
    PLUSPLUS        reduce using rule 91 (OP -> NOTEQUAL .)
    ELSE            reduce using rule 91 (OP -> NOTEQUAL .)
    RETURN          reduce using rule 91 (OP -> NOTEQUAL .)


state 114

    (92) OP -> DIVIDE .

    ID              reduce using rule 92 (OP -> DIVIDE .)
    TRUE            reduce using rule 92 (OP -> DIVIDE .)
    FALSE           reduce using rule 92 (OP -> DIVIDE .)
    NULL            reduce using rule 92 (OP -> DIVIDE .)
    THIS            reduce using rule 92 (OP -> DIVIDE .)
    INT             reduce using rule 92 (OP -> DIVIDE .)
    BOOLEAN         reduce using rule 92 (OP -> DIVIDE .)
    STRING          reduce using rule 92 (OP -> DIVIDE .)
    DOUBLE          reduce using rule 92 (OP -> DIVIDE .)
    CHARACTER       reduce using rule 92 (OP -> DIVIDE .)
    FLOAT           reduce using rule 92 (OP -> DIVIDE .)
    VOID            reduce using rule 92 (OP -> DIVIDE .)
    NUMBER          reduce using rule 92 (OP -> DIVIDE .)
    CHAR            reduce using rule 92 (OP -> DIVIDE .)
    SEMI            reduce using rule 92 (OP -> DIVIDE .)
    STATIC          reduce using rule 92 (OP -> DIVIDE .)
    OPENAKOL        reduce using rule 92 (OP -> DIVIDE .)
    IF              reduce using rule 92 (OP -> DIVIDE .)
    FOR             reduce using rule 92 (OP -> DIVIDE .)
    WHILE           reduce using rule 92 (OP -> DIVIDE .)
    PUBLIC          reduce using rule 92 (OP -> DIVIDE .)
    PRIVATE         reduce using rule 92 (OP -> DIVIDE .)
    CLOSEAKOL       reduce using rule 92 (OP -> DIVIDE .)
    CLOSEBRACKET    reduce using rule 92 (OP -> DIVIDE .)
    COMMA           reduce using rule 92 (OP -> DIVIDE .)
    CLOSEPAR        reduce using rule 92 (OP -> DIVIDE .)
    LESSEQUAL       reduce using rule 92 (OP -> DIVIDE .)
    ASSIGN          reduce using rule 92 (OP -> DIVIDE .)
    EQUALS          reduce using rule 92 (OP -> DIVIDE .)
    GREATEREQUAL    reduce using rule 92 (OP -> DIVIDE .)
    GREATERTHAN     reduce using rule 92 (OP -> DIVIDE .)
    LESSTHAN        reduce using rule 92 (OP -> DIVIDE .)
    ADD             reduce using rule 92 (OP -> DIVIDE .)
    MINUS           reduce using rule 92 (OP -> DIVIDE .)
    MULT            reduce using rule 92 (OP -> DIVIDE .)
    NOTEQUAL        reduce using rule 92 (OP -> DIVIDE .)
    DIVIDE          reduce using rule 92 (OP -> DIVIDE .)
    PEQUAL          reduce using rule 92 (OP -> DIVIDE .)
    MEQUAL          reduce using rule 92 (OP -> DIVIDE .)
    PLUSPLUS        reduce using rule 92 (OP -> DIVIDE .)
    ELSE            reduce using rule 92 (OP -> DIVIDE .)
    RETURN          reduce using rule 92 (OP -> DIVIDE .)


state 115

    (93) OP -> PEQUAL .

    ID              reduce using rule 93 (OP -> PEQUAL .)
    TRUE            reduce using rule 93 (OP -> PEQUAL .)
    FALSE           reduce using rule 93 (OP -> PEQUAL .)
    NULL            reduce using rule 93 (OP -> PEQUAL .)
    THIS            reduce using rule 93 (OP -> PEQUAL .)
    INT             reduce using rule 93 (OP -> PEQUAL .)
    BOOLEAN         reduce using rule 93 (OP -> PEQUAL .)
    STRING          reduce using rule 93 (OP -> PEQUAL .)
    DOUBLE          reduce using rule 93 (OP -> PEQUAL .)
    CHARACTER       reduce using rule 93 (OP -> PEQUAL .)
    FLOAT           reduce using rule 93 (OP -> PEQUAL .)
    VOID            reduce using rule 93 (OP -> PEQUAL .)
    NUMBER          reduce using rule 93 (OP -> PEQUAL .)
    CHAR            reduce using rule 93 (OP -> PEQUAL .)
    SEMI            reduce using rule 93 (OP -> PEQUAL .)
    STATIC          reduce using rule 93 (OP -> PEQUAL .)
    OPENAKOL        reduce using rule 93 (OP -> PEQUAL .)
    IF              reduce using rule 93 (OP -> PEQUAL .)
    FOR             reduce using rule 93 (OP -> PEQUAL .)
    WHILE           reduce using rule 93 (OP -> PEQUAL .)
    PUBLIC          reduce using rule 93 (OP -> PEQUAL .)
    PRIVATE         reduce using rule 93 (OP -> PEQUAL .)
    CLOSEAKOL       reduce using rule 93 (OP -> PEQUAL .)
    CLOSEBRACKET    reduce using rule 93 (OP -> PEQUAL .)
    COMMA           reduce using rule 93 (OP -> PEQUAL .)
    CLOSEPAR        reduce using rule 93 (OP -> PEQUAL .)
    LESSEQUAL       reduce using rule 93 (OP -> PEQUAL .)
    ASSIGN          reduce using rule 93 (OP -> PEQUAL .)
    EQUALS          reduce using rule 93 (OP -> PEQUAL .)
    GREATEREQUAL    reduce using rule 93 (OP -> PEQUAL .)
    GREATERTHAN     reduce using rule 93 (OP -> PEQUAL .)
    LESSTHAN        reduce using rule 93 (OP -> PEQUAL .)
    ADD             reduce using rule 93 (OP -> PEQUAL .)
    MINUS           reduce using rule 93 (OP -> PEQUAL .)
    MULT            reduce using rule 93 (OP -> PEQUAL .)
    NOTEQUAL        reduce using rule 93 (OP -> PEQUAL .)
    DIVIDE          reduce using rule 93 (OP -> PEQUAL .)
    PEQUAL          reduce using rule 93 (OP -> PEQUAL .)
    MEQUAL          reduce using rule 93 (OP -> PEQUAL .)
    PLUSPLUS        reduce using rule 93 (OP -> PEQUAL .)
    ELSE            reduce using rule 93 (OP -> PEQUAL .)
    RETURN          reduce using rule 93 (OP -> PEQUAL .)


state 116

    (94) OP -> MEQUAL .

    ID              reduce using rule 94 (OP -> MEQUAL .)
    TRUE            reduce using rule 94 (OP -> MEQUAL .)
    FALSE           reduce using rule 94 (OP -> MEQUAL .)
    NULL            reduce using rule 94 (OP -> MEQUAL .)
    THIS            reduce using rule 94 (OP -> MEQUAL .)
    INT             reduce using rule 94 (OP -> MEQUAL .)
    BOOLEAN         reduce using rule 94 (OP -> MEQUAL .)
    STRING          reduce using rule 94 (OP -> MEQUAL .)
    DOUBLE          reduce using rule 94 (OP -> MEQUAL .)
    CHARACTER       reduce using rule 94 (OP -> MEQUAL .)
    FLOAT           reduce using rule 94 (OP -> MEQUAL .)
    VOID            reduce using rule 94 (OP -> MEQUAL .)
    NUMBER          reduce using rule 94 (OP -> MEQUAL .)
    CHAR            reduce using rule 94 (OP -> MEQUAL .)
    SEMI            reduce using rule 94 (OP -> MEQUAL .)
    STATIC          reduce using rule 94 (OP -> MEQUAL .)
    OPENAKOL        reduce using rule 94 (OP -> MEQUAL .)
    IF              reduce using rule 94 (OP -> MEQUAL .)
    FOR             reduce using rule 94 (OP -> MEQUAL .)
    WHILE           reduce using rule 94 (OP -> MEQUAL .)
    PUBLIC          reduce using rule 94 (OP -> MEQUAL .)
    PRIVATE         reduce using rule 94 (OP -> MEQUAL .)
    CLOSEAKOL       reduce using rule 94 (OP -> MEQUAL .)
    CLOSEBRACKET    reduce using rule 94 (OP -> MEQUAL .)
    COMMA           reduce using rule 94 (OP -> MEQUAL .)
    CLOSEPAR        reduce using rule 94 (OP -> MEQUAL .)
    LESSEQUAL       reduce using rule 94 (OP -> MEQUAL .)
    ASSIGN          reduce using rule 94 (OP -> MEQUAL .)
    EQUALS          reduce using rule 94 (OP -> MEQUAL .)
    GREATEREQUAL    reduce using rule 94 (OP -> MEQUAL .)
    GREATERTHAN     reduce using rule 94 (OP -> MEQUAL .)
    LESSTHAN        reduce using rule 94 (OP -> MEQUAL .)
    ADD             reduce using rule 94 (OP -> MEQUAL .)
    MINUS           reduce using rule 94 (OP -> MEQUAL .)
    MULT            reduce using rule 94 (OP -> MEQUAL .)
    NOTEQUAL        reduce using rule 94 (OP -> MEQUAL .)
    DIVIDE          reduce using rule 94 (OP -> MEQUAL .)
    PEQUAL          reduce using rule 94 (OP -> MEQUAL .)
    MEQUAL          reduce using rule 94 (OP -> MEQUAL .)
    PLUSPLUS        reduce using rule 94 (OP -> MEQUAL .)
    ELSE            reduce using rule 94 (OP -> MEQUAL .)
    RETURN          reduce using rule 94 (OP -> MEQUAL .)


state 117

    (95) OP -> PLUSPLUS .

    ID              reduce using rule 95 (OP -> PLUSPLUS .)
    TRUE            reduce using rule 95 (OP -> PLUSPLUS .)
    FALSE           reduce using rule 95 (OP -> PLUSPLUS .)
    NULL            reduce using rule 95 (OP -> PLUSPLUS .)
    THIS            reduce using rule 95 (OP -> PLUSPLUS .)
    INT             reduce using rule 95 (OP -> PLUSPLUS .)
    BOOLEAN         reduce using rule 95 (OP -> PLUSPLUS .)
    STRING          reduce using rule 95 (OP -> PLUSPLUS .)
    DOUBLE          reduce using rule 95 (OP -> PLUSPLUS .)
    CHARACTER       reduce using rule 95 (OP -> PLUSPLUS .)
    FLOAT           reduce using rule 95 (OP -> PLUSPLUS .)
    VOID            reduce using rule 95 (OP -> PLUSPLUS .)
    NUMBER          reduce using rule 95 (OP -> PLUSPLUS .)
    CHAR            reduce using rule 95 (OP -> PLUSPLUS .)
    SEMI            reduce using rule 95 (OP -> PLUSPLUS .)
    STATIC          reduce using rule 95 (OP -> PLUSPLUS .)
    OPENAKOL        reduce using rule 95 (OP -> PLUSPLUS .)
    IF              reduce using rule 95 (OP -> PLUSPLUS .)
    FOR             reduce using rule 95 (OP -> PLUSPLUS .)
    WHILE           reduce using rule 95 (OP -> PLUSPLUS .)
    PUBLIC          reduce using rule 95 (OP -> PLUSPLUS .)
    PRIVATE         reduce using rule 95 (OP -> PLUSPLUS .)
    CLOSEAKOL       reduce using rule 95 (OP -> PLUSPLUS .)
    CLOSEBRACKET    reduce using rule 95 (OP -> PLUSPLUS .)
    COMMA           reduce using rule 95 (OP -> PLUSPLUS .)
    CLOSEPAR        reduce using rule 95 (OP -> PLUSPLUS .)
    LESSEQUAL       reduce using rule 95 (OP -> PLUSPLUS .)
    ASSIGN          reduce using rule 95 (OP -> PLUSPLUS .)
    EQUALS          reduce using rule 95 (OP -> PLUSPLUS .)
    GREATEREQUAL    reduce using rule 95 (OP -> PLUSPLUS .)
    GREATERTHAN     reduce using rule 95 (OP -> PLUSPLUS .)
    LESSTHAN        reduce using rule 95 (OP -> PLUSPLUS .)
    ADD             reduce using rule 95 (OP -> PLUSPLUS .)
    MINUS           reduce using rule 95 (OP -> PLUSPLUS .)
    MULT            reduce using rule 95 (OP -> PLUSPLUS .)
    NOTEQUAL        reduce using rule 95 (OP -> PLUSPLUS .)
    DIVIDE          reduce using rule 95 (OP -> PLUSPLUS .)
    PEQUAL          reduce using rule 95 (OP -> PLUSPLUS .)
    MEQUAL          reduce using rule 95 (OP -> PLUSPLUS .)
    PLUSPLUS        reduce using rule 95 (OP -> PLUSPLUS .)
    ELSE            reduce using rule 95 (OP -> PLUSPLUS .)
    RETURN          reduce using rule 95 (OP -> PLUSPLUS .)


state 118

    (68) EXPRESSION5 -> ID ASSIGN VALUE SEMI .

    STATIC          reduce using rule 68 (EXPRESSION5 -> ID ASSIGN VALUE SEMI .)
    OPENAKOL        reduce using rule 68 (EXPRESSION5 -> ID ASSIGN VALUE SEMI .)
    IF              reduce using rule 68 (EXPRESSION5 -> ID ASSIGN VALUE SEMI .)
    FOR             reduce using rule 68 (EXPRESSION5 -> ID ASSIGN VALUE SEMI .)
    WHILE           reduce using rule 68 (EXPRESSION5 -> ID ASSIGN VALUE SEMI .)
    PUBLIC          reduce using rule 68 (EXPRESSION5 -> ID ASSIGN VALUE SEMI .)
    PRIVATE         reduce using rule 68 (EXPRESSION5 -> ID ASSIGN VALUE SEMI .)
    THIS            reduce using rule 68 (EXPRESSION5 -> ID ASSIGN VALUE SEMI .)
    ID              reduce using rule 68 (EXPRESSION5 -> ID ASSIGN VALUE SEMI .)
    INT             reduce using rule 68 (EXPRESSION5 -> ID ASSIGN VALUE SEMI .)
    BOOLEAN         reduce using rule 68 (EXPRESSION5 -> ID ASSIGN VALUE SEMI .)
    STRING          reduce using rule 68 (EXPRESSION5 -> ID ASSIGN VALUE SEMI .)
    DOUBLE          reduce using rule 68 (EXPRESSION5 -> ID ASSIGN VALUE SEMI .)
    CHARACTER       reduce using rule 68 (EXPRESSION5 -> ID ASSIGN VALUE SEMI .)
    FLOAT           reduce using rule 68 (EXPRESSION5 -> ID ASSIGN VALUE SEMI .)
    VOID            reduce using rule 68 (EXPRESSION5 -> ID ASSIGN VALUE SEMI .)
    TRUE            reduce using rule 68 (EXPRESSION5 -> ID ASSIGN VALUE SEMI .)
    FALSE           reduce using rule 68 (EXPRESSION5 -> ID ASSIGN VALUE SEMI .)
    NULL            reduce using rule 68 (EXPRESSION5 -> ID ASSIGN VALUE SEMI .)
    NUMBER          reduce using rule 68 (EXPRESSION5 -> ID ASSIGN VALUE SEMI .)
    CHAR            reduce using rule 68 (EXPRESSION5 -> ID ASSIGN VALUE SEMI .)
    CLOSEAKOL       reduce using rule 68 (EXPRESSION5 -> ID ASSIGN VALUE SEMI .)
    CLOSEBRACKET    reduce using rule 68 (EXPRESSION5 -> ID ASSIGN VALUE SEMI .)
    SEMI            reduce using rule 68 (EXPRESSION5 -> ID ASSIGN VALUE SEMI .)
    COMMA           reduce using rule 68 (EXPRESSION5 -> ID ASSIGN VALUE SEMI .)
    CLOSEPAR        reduce using rule 68 (EXPRESSION5 -> ID ASSIGN VALUE SEMI .)
    LESSEQUAL       reduce using rule 68 (EXPRESSION5 -> ID ASSIGN VALUE SEMI .)
    ASSIGN          reduce using rule 68 (EXPRESSION5 -> ID ASSIGN VALUE SEMI .)
    EQUALS          reduce using rule 68 (EXPRESSION5 -> ID ASSIGN VALUE SEMI .)
    GREATEREQUAL    reduce using rule 68 (EXPRESSION5 -> ID ASSIGN VALUE SEMI .)
    GREATERTHAN     reduce using rule 68 (EXPRESSION5 -> ID ASSIGN VALUE SEMI .)
    LESSTHAN        reduce using rule 68 (EXPRESSION5 -> ID ASSIGN VALUE SEMI .)
    ADD             reduce using rule 68 (EXPRESSION5 -> ID ASSIGN VALUE SEMI .)
    MINUS           reduce using rule 68 (EXPRESSION5 -> ID ASSIGN VALUE SEMI .)
    MULT            reduce using rule 68 (EXPRESSION5 -> ID ASSIGN VALUE SEMI .)
    NOTEQUAL        reduce using rule 68 (EXPRESSION5 -> ID ASSIGN VALUE SEMI .)
    DIVIDE          reduce using rule 68 (EXPRESSION5 -> ID ASSIGN VALUE SEMI .)
    PEQUAL          reduce using rule 68 (EXPRESSION5 -> ID ASSIGN VALUE SEMI .)
    MEQUAL          reduce using rule 68 (EXPRESSION5 -> ID ASSIGN VALUE SEMI .)
    PLUSPLUS        reduce using rule 68 (EXPRESSION5 -> ID ASSIGN VALUE SEMI .)
    ELSE            reduce using rule 68 (EXPRESSION5 -> ID ASSIGN VALUE SEMI .)
    RETURN          reduce using rule 68 (EXPRESSION5 -> ID ASSIGN VALUE SEMI .)


state 119

    (44) G -> DOT ID G .

    OPENBRACKET     reduce using rule 44 (G -> DOT ID G .)
    ASSIGN          reduce using rule 44 (G -> DOT ID G .)
    OPENPAR         reduce using rule 44 (G -> DOT ID G .)
    LESSEQUAL       reduce using rule 44 (G -> DOT ID G .)
    EQUALS          reduce using rule 44 (G -> DOT ID G .)
    GREATEREQUAL    reduce using rule 44 (G -> DOT ID G .)
    GREATERTHAN     reduce using rule 44 (G -> DOT ID G .)
    LESSTHAN        reduce using rule 44 (G -> DOT ID G .)
    ADD             reduce using rule 44 (G -> DOT ID G .)
    MINUS           reduce using rule 44 (G -> DOT ID G .)
    MULT            reduce using rule 44 (G -> DOT ID G .)
    NOTEQUAL        reduce using rule 44 (G -> DOT ID G .)
    DIVIDE          reduce using rule 44 (G -> DOT ID G .)
    PEQUAL          reduce using rule 44 (G -> DOT ID G .)
    MEQUAL          reduce using rule 44 (G -> DOT ID G .)
    PLUSPLUS        reduce using rule 44 (G -> DOT ID G .)
    SEMI            reduce using rule 44 (G -> DOT ID G .)
    STATIC          reduce using rule 44 (G -> DOT ID G .)
    OPENAKOL        reduce using rule 44 (G -> DOT ID G .)
    IF              reduce using rule 44 (G -> DOT ID G .)
    FOR             reduce using rule 44 (G -> DOT ID G .)
    WHILE           reduce using rule 44 (G -> DOT ID G .)
    PUBLIC          reduce using rule 44 (G -> DOT ID G .)
    PRIVATE         reduce using rule 44 (G -> DOT ID G .)
    THIS            reduce using rule 44 (G -> DOT ID G .)
    ID              reduce using rule 44 (G -> DOT ID G .)
    INT             reduce using rule 44 (G -> DOT ID G .)
    BOOLEAN         reduce using rule 44 (G -> DOT ID G .)
    STRING          reduce using rule 44 (G -> DOT ID G .)
    DOUBLE          reduce using rule 44 (G -> DOT ID G .)
    CHARACTER       reduce using rule 44 (G -> DOT ID G .)
    FLOAT           reduce using rule 44 (G -> DOT ID G .)
    VOID            reduce using rule 44 (G -> DOT ID G .)
    TRUE            reduce using rule 44 (G -> DOT ID G .)
    FALSE           reduce using rule 44 (G -> DOT ID G .)
    NULL            reduce using rule 44 (G -> DOT ID G .)
    NUMBER          reduce using rule 44 (G -> DOT ID G .)
    CHAR            reduce using rule 44 (G -> DOT ID G .)
    CLOSEAKOL       reduce using rule 44 (G -> DOT ID G .)
    CLOSEBRACKET    reduce using rule 44 (G -> DOT ID G .)
    COMMA           reduce using rule 44 (G -> DOT ID G .)
    CLOSEPAR        reduce using rule 44 (G -> DOT ID G .)
    ELSE            reduce using rule 44 (G -> DOT ID G .)
    RETURN          reduce using rule 44 (G -> DOT ID G .)


state 120

    (10) METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST . CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL
    (12) METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST . CLOSEPAR OPENAKOL B CLOSEAKOL

    CLOSEPAR        shift and go to state 139


state 121

    (11) METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR . OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL
    (13) METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR . OPENAKOL B CLOSEAKOL

    OPENAKOL        shift and go to state 140


state 122

    (36) PARAMERERLIST -> TYPE . ID D

    ID              shift and go to state 141


state 123

    (65) EXPRESSION2 -> TYPE ID ASSIGN ID . OP ID SEMI
    (64) EXPRESSION1 -> ID . ASSIGN ID OP ID SEMI
    (68) EXPRESSION5 -> ID . ASSIGN VALUE SEMI
    (76) EXPRESSION6 -> ID .
    (79) EXPRESSION6 -> ID . ASSIGN ID OP ID OP ID SEMI
    (43) REFERENCE -> ID . G
    (33) CLASSTYPE -> ID .
    (82) OP -> . LESSEQUAL
    (83) OP -> . ASSIGN
    (84) OP -> . EQUALS
    (85) OP -> . GREATEREQUAL
    (86) OP -> . GREATERTHAN
    (87) OP -> . LESSTHAN
    (88) OP -> . ADD
    (89) OP -> . MINUS
    (90) OP -> . MULT
    (91) OP -> . NOTEQUAL
    (92) OP -> . DIVIDE
    (93) OP -> . PEQUAL
    (94) OP -> . MEQUAL
    (95) OP -> . PLUSPLUS
    (44) G -> . DOT ID G
    (45) G -> . EMPTY
    (22) EMPTY -> .

  ! shift/reduce conflict for ASSIGN resolved as shift
  ! shift/reduce conflict for LESSEQUAL resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PEQUAL resolved as shift
  ! shift/reduce conflict for MEQUAL resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for ASSIGN resolved as shift
    ASSIGN          shift and go to state 142
    OPENBRACKET     reduce using rule 33 (CLASSTYPE -> ID .)
    ID              reduce using rule 33 (CLASSTYPE -> ID .)
    LESSEQUAL       shift and go to state 105
    EQUALS          shift and go to state 106
    GREATEREQUAL    shift and go to state 107
    GREATERTHAN     shift and go to state 108
    LESSTHAN        shift and go to state 109
    ADD             shift and go to state 110
    MINUS           shift and go to state 111
    MULT            shift and go to state 112
    NOTEQUAL        shift and go to state 113
    DIVIDE          shift and go to state 114
    PEQUAL          shift and go to state 115
    MEQUAL          shift and go to state 116
    PLUSPLUS        shift and go to state 117
    DOT             shift and go to state 54

  ! LESSEQUAL       [ reduce using rule 76 (EXPRESSION6 -> ID .) ]
  ! ASSIGN          [ reduce using rule 76 (EXPRESSION6 -> ID .) ]
  ! EQUALS          [ reduce using rule 76 (EXPRESSION6 -> ID .) ]
  ! GREATEREQUAL    [ reduce using rule 76 (EXPRESSION6 -> ID .) ]
  ! GREATERTHAN     [ reduce using rule 76 (EXPRESSION6 -> ID .) ]
  ! LESSTHAN        [ reduce using rule 76 (EXPRESSION6 -> ID .) ]
  ! ADD             [ reduce using rule 76 (EXPRESSION6 -> ID .) ]
  ! MINUS           [ reduce using rule 76 (EXPRESSION6 -> ID .) ]
  ! MULT            [ reduce using rule 76 (EXPRESSION6 -> ID .) ]
  ! NOTEQUAL        [ reduce using rule 76 (EXPRESSION6 -> ID .) ]
  ! DIVIDE          [ reduce using rule 76 (EXPRESSION6 -> ID .) ]
  ! PEQUAL          [ reduce using rule 76 (EXPRESSION6 -> ID .) ]
  ! MEQUAL          [ reduce using rule 76 (EXPRESSION6 -> ID .) ]
  ! PLUSPLUS        [ reduce using rule 76 (EXPRESSION6 -> ID .) ]
  ! ASSIGN          [ reduce using rule 22 (EMPTY -> .) ]

    OP                             shift and go to state 143
    G                              shift and go to state 52
    EMPTY                          shift and go to state 55

state 124

    (67) EXPRESSION4 -> TYPE ID ASSIGN VALUE . SEMI
    (77) EXPRESSION6 -> VALUE .

    SEMI            shift and go to state 144
    LESSEQUAL       reduce using rule 77 (EXPRESSION6 -> VALUE .)
    ASSIGN          reduce using rule 77 (EXPRESSION6 -> VALUE .)
    EQUALS          reduce using rule 77 (EXPRESSION6 -> VALUE .)
    GREATEREQUAL    reduce using rule 77 (EXPRESSION6 -> VALUE .)
    GREATERTHAN     reduce using rule 77 (EXPRESSION6 -> VALUE .)
    LESSTHAN        reduce using rule 77 (EXPRESSION6 -> VALUE .)
    ADD             reduce using rule 77 (EXPRESSION6 -> VALUE .)
    MINUS           reduce using rule 77 (EXPRESSION6 -> VALUE .)
    MULT            reduce using rule 77 (EXPRESSION6 -> VALUE .)
    NOTEQUAL        reduce using rule 77 (EXPRESSION6 -> VALUE .)
    DIVIDE          reduce using rule 77 (EXPRESSION6 -> VALUE .)
    PEQUAL          reduce using rule 77 (EXPRESSION6 -> VALUE .)
    MEQUAL          reduce using rule 77 (EXPRESSION6 -> VALUE .)
    PLUSPLUS        reduce using rule 77 (EXPRESSION6 -> VALUE .)


state 125

    (78) EXPRESSION6 -> TYPE ID ASSIGN EXPRESSION . OP EXPRESSION SEMI
    (82) OP -> . LESSEQUAL
    (83) OP -> . ASSIGN
    (84) OP -> . EQUALS
    (85) OP -> . GREATEREQUAL
    (86) OP -> . GREATERTHAN
    (87) OP -> . LESSTHAN
    (88) OP -> . ADD
    (89) OP -> . MINUS
    (90) OP -> . MULT
    (91) OP -> . NOTEQUAL
    (92) OP -> . DIVIDE
    (93) OP -> . PEQUAL
    (94) OP -> . MEQUAL
    (95) OP -> . PLUSPLUS

    LESSEQUAL       shift and go to state 105
    ASSIGN          shift and go to state 103
    EQUALS          shift and go to state 106
    GREATEREQUAL    shift and go to state 107
    GREATERTHAN     shift and go to state 108
    LESSTHAN        shift and go to state 109
    ADD             shift and go to state 110
    MINUS           shift and go to state 111
    MULT            shift and go to state 112
    NOTEQUAL        shift and go to state 113
    DIVIDE          shift and go to state 114
    PEQUAL          shift and go to state 115
    MEQUAL          shift and go to state 116
    PLUSPLUS        shift and go to state 117

    OP                             shift and go to state 145

state 126

    (81) EXPRESSION6 -> REFERENCE ASSIGN . NUMBER SEMI REFERENCE OP REFERENCE SEMI I

    NUMBER          shift and go to state 146


state 127

    (48) STATEMENT -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET . ASSIGN EXPRESSION SEMI

    ASSIGN          shift and go to state 147


state 128

    (49) STATEMENT -> REFERENCE ASSIGN EXPRESSION SEMI .

    STATIC          reduce using rule 49 (STATEMENT -> REFERENCE ASSIGN EXPRESSION SEMI .)
    OPENAKOL        reduce using rule 49 (STATEMENT -> REFERENCE ASSIGN EXPRESSION SEMI .)
    IF              reduce using rule 49 (STATEMENT -> REFERENCE ASSIGN EXPRESSION SEMI .)
    FOR             reduce using rule 49 (STATEMENT -> REFERENCE ASSIGN EXPRESSION SEMI .)
    WHILE           reduce using rule 49 (STATEMENT -> REFERENCE ASSIGN EXPRESSION SEMI .)
    PUBLIC          reduce using rule 49 (STATEMENT -> REFERENCE ASSIGN EXPRESSION SEMI .)
    PRIVATE         reduce using rule 49 (STATEMENT -> REFERENCE ASSIGN EXPRESSION SEMI .)
    THIS            reduce using rule 49 (STATEMENT -> REFERENCE ASSIGN EXPRESSION SEMI .)
    ID              reduce using rule 49 (STATEMENT -> REFERENCE ASSIGN EXPRESSION SEMI .)
    INT             reduce using rule 49 (STATEMENT -> REFERENCE ASSIGN EXPRESSION SEMI .)
    BOOLEAN         reduce using rule 49 (STATEMENT -> REFERENCE ASSIGN EXPRESSION SEMI .)
    STRING          reduce using rule 49 (STATEMENT -> REFERENCE ASSIGN EXPRESSION SEMI .)
    DOUBLE          reduce using rule 49 (STATEMENT -> REFERENCE ASSIGN EXPRESSION SEMI .)
    CHARACTER       reduce using rule 49 (STATEMENT -> REFERENCE ASSIGN EXPRESSION SEMI .)
    FLOAT           reduce using rule 49 (STATEMENT -> REFERENCE ASSIGN EXPRESSION SEMI .)
    VOID            reduce using rule 49 (STATEMENT -> REFERENCE ASSIGN EXPRESSION SEMI .)
    TRUE            reduce using rule 49 (STATEMENT -> REFERENCE ASSIGN EXPRESSION SEMI .)
    FALSE           reduce using rule 49 (STATEMENT -> REFERENCE ASSIGN EXPRESSION SEMI .)
    NULL            reduce using rule 49 (STATEMENT -> REFERENCE ASSIGN EXPRESSION SEMI .)
    NUMBER          reduce using rule 49 (STATEMENT -> REFERENCE ASSIGN EXPRESSION SEMI .)
    CHAR            reduce using rule 49 (STATEMENT -> REFERENCE ASSIGN EXPRESSION SEMI .)
    CLOSEAKOL       reduce using rule 49 (STATEMENT -> REFERENCE ASSIGN EXPRESSION SEMI .)
    ELSE            reduce using rule 49 (STATEMENT -> REFERENCE ASSIGN EXPRESSION SEMI .)
    RETURN          reduce using rule 49 (STATEMENT -> REFERENCE ASSIGN EXPRESSION SEMI .)


state 129

    (81) EXPRESSION6 -> REFERENCE ASSIGN NUMBER SEMI . REFERENCE OP REFERENCE SEMI I
    (42) REFERENCE -> . THIS G
    (43) REFERENCE -> . ID G

    THIS            shift and go to state 36
    ID              shift and go to state 149

    REFERENCE                      shift and go to state 148

state 130

    (50) STATEMENT -> REFERENCE OPENPAR CLOSEPAR SEMI .

    STATIC          reduce using rule 50 (STATEMENT -> REFERENCE OPENPAR CLOSEPAR SEMI .)
    OPENAKOL        reduce using rule 50 (STATEMENT -> REFERENCE OPENPAR CLOSEPAR SEMI .)
    IF              reduce using rule 50 (STATEMENT -> REFERENCE OPENPAR CLOSEPAR SEMI .)
    FOR             reduce using rule 50 (STATEMENT -> REFERENCE OPENPAR CLOSEPAR SEMI .)
    WHILE           reduce using rule 50 (STATEMENT -> REFERENCE OPENPAR CLOSEPAR SEMI .)
    PUBLIC          reduce using rule 50 (STATEMENT -> REFERENCE OPENPAR CLOSEPAR SEMI .)
    PRIVATE         reduce using rule 50 (STATEMENT -> REFERENCE OPENPAR CLOSEPAR SEMI .)
    THIS            reduce using rule 50 (STATEMENT -> REFERENCE OPENPAR CLOSEPAR SEMI .)
    ID              reduce using rule 50 (STATEMENT -> REFERENCE OPENPAR CLOSEPAR SEMI .)
    INT             reduce using rule 50 (STATEMENT -> REFERENCE OPENPAR CLOSEPAR SEMI .)
    BOOLEAN         reduce using rule 50 (STATEMENT -> REFERENCE OPENPAR CLOSEPAR SEMI .)
    STRING          reduce using rule 50 (STATEMENT -> REFERENCE OPENPAR CLOSEPAR SEMI .)
    DOUBLE          reduce using rule 50 (STATEMENT -> REFERENCE OPENPAR CLOSEPAR SEMI .)
    CHARACTER       reduce using rule 50 (STATEMENT -> REFERENCE OPENPAR CLOSEPAR SEMI .)
    FLOAT           reduce using rule 50 (STATEMENT -> REFERENCE OPENPAR CLOSEPAR SEMI .)
    VOID            reduce using rule 50 (STATEMENT -> REFERENCE OPENPAR CLOSEPAR SEMI .)
    TRUE            reduce using rule 50 (STATEMENT -> REFERENCE OPENPAR CLOSEPAR SEMI .)
    FALSE           reduce using rule 50 (STATEMENT -> REFERENCE OPENPAR CLOSEPAR SEMI .)
    NULL            reduce using rule 50 (STATEMENT -> REFERENCE OPENPAR CLOSEPAR SEMI .)
    NUMBER          reduce using rule 50 (STATEMENT -> REFERENCE OPENPAR CLOSEPAR SEMI .)
    CHAR            reduce using rule 50 (STATEMENT -> REFERENCE OPENPAR CLOSEPAR SEMI .)
    CLOSEAKOL       reduce using rule 50 (STATEMENT -> REFERENCE OPENPAR CLOSEPAR SEMI .)
    ELSE            reduce using rule 50 (STATEMENT -> REFERENCE OPENPAR CLOSEPAR SEMI .)
    RETURN          reduce using rule 50 (STATEMENT -> REFERENCE OPENPAR CLOSEPAR SEMI .)


state 131

    (51) STATEMENT -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR . SEMI

    SEMI            shift and go to state 150


state 132

    (39) ARGUMENTLIST -> EXPRESSION E .

    CLOSEPAR        reduce using rule 39 (ARGUMENTLIST -> EXPRESSION E .)


state 133

    (40) E -> COMMA . EXPRESSION
    (58) EXPRESSION -> . EXPRESSION1
    (59) EXPRESSION -> . EXPRESSION2
    (60) EXPRESSION -> . EXPRESSION3
    (61) EXPRESSION -> . EXPRESSION4
    (62) EXPRESSION -> . EXPRESSION5
    (63) EXPRESSION -> . EXPRESSION6
    (64) EXPRESSION1 -> . ID ASSIGN ID OP ID SEMI
    (65) EXPRESSION2 -> . TYPE ID ASSIGN ID OP ID SEMI
    (66) EXPRESSION3 -> . TYPE ID SEMI
    (67) EXPRESSION4 -> . TYPE ID ASSIGN VALUE SEMI
    (68) EXPRESSION5 -> . ID ASSIGN VALUE SEMI
    (73) EXPRESSION6 -> . TRUE
    (74) EXPRESSION6 -> . FALSE
    (75) EXPRESSION6 -> . NULL
    (76) EXPRESSION6 -> . ID
    (77) EXPRESSION6 -> . VALUE
    (78) EXPRESSION6 -> . TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI
    (79) EXPRESSION6 -> . ID ASSIGN ID OP ID OP ID SEMI
    (80) EXPRESSION6 -> . EMPTY
    (81) EXPRESSION6 -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I
    (23) TYPE -> . PRIMTYPE
    (24) TYPE -> . CLASSTYPE
    (25) TYPE -> . ARRTYPE
    (69) VALUE -> . VALUE1
    (70) VALUE -> . VALUE2
    (22) EMPTY -> .
    (42) REFERENCE -> . THIS G
    (43) REFERENCE -> . ID G
    (26) PRIMTYPE -> . INT
    (27) PRIMTYPE -> . BOOLEAN
    (28) PRIMTYPE -> . STRING
    (29) PRIMTYPE -> . DOUBLE
    (30) PRIMTYPE -> . CHARACTER
    (31) PRIMTYPE -> . FLOAT
    (32) PRIMTYPE -> . VOID
    (33) CLASSTYPE -> . ID
    (34) ARRTYPE -> . INT OPENBRACKET CLOSEBRACKET
    (35) ARRTYPE -> . CLASSTYPE OPENBRACKET CLOSEBRACKET
    (71) VALUE1 -> . NUMBER
    (72) VALUE2 -> . CHAR

    ID              shift and go to state 91
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    NULL            shift and go to state 47
    CLOSEPAR        reduce using rule 22 (EMPTY -> .)
    THIS            shift and go to state 36
    INT             shift and go to state 37
    BOOLEAN         shift and go to state 38
    STRING          shift and go to state 39
    DOUBLE          shift and go to state 40
    CHARACTER       shift and go to state 41
    FLOAT           shift and go to state 42
    VOID            shift and go to state 43
    NUMBER          shift and go to state 48
    CHAR            shift and go to state 51

    EXPRESSION                     shift and go to state 151
    EXPRESSION1                    shift and go to state 30
    EXPRESSION2                    shift and go to state 31
    EXPRESSION3                    shift and go to state 32
    EXPRESSION4                    shift and go to state 33
    EXPRESSION5                    shift and go to state 34
    EXPRESSION6                    shift and go to state 35
    TYPE                           shift and go to state 60
    VALUE                          shift and go to state 44
    EMPTY                          shift and go to state 92
    REFERENCE                      shift and go to state 89
    PRIMTYPE                       shift and go to state 27
    CLASSTYPE                      shift and go to state 28
    ARRTYPE                        shift and go to state 29
    VALUE1                         shift and go to state 49
    VALUE2                         shift and go to state 50

state 134

    (41) E -> EMPTY .

    CLOSEPAR        reduce using rule 41 (E -> EMPTY .)


state 135

    (52) STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR . STATEMENT ELSE STATEMENT
    (53) STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR . STATEMENT
    (46) STATEMENT -> . OPENAKOL H CLOSEAKOL
    (47) STATEMENT -> . EXPRESSION
    (48) STATEMENT -> . REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI
    (49) STATEMENT -> . REFERENCE ASSIGN EXPRESSION SEMI
    (50) STATEMENT -> . REFERENCE OPENPAR CLOSEPAR SEMI
    (51) STATEMENT -> . REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI
    (52) STATEMENT -> . IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT
    (53) STATEMENT -> . IF OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (54) STATEMENT -> . FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (55) STATEMENT -> . WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (58) EXPRESSION -> . EXPRESSION1
    (59) EXPRESSION -> . EXPRESSION2
    (60) EXPRESSION -> . EXPRESSION3
    (61) EXPRESSION -> . EXPRESSION4
    (62) EXPRESSION -> . EXPRESSION5
    (63) EXPRESSION -> . EXPRESSION6
    (42) REFERENCE -> . THIS G
    (43) REFERENCE -> . ID G
    (64) EXPRESSION1 -> . ID ASSIGN ID OP ID SEMI
    (65) EXPRESSION2 -> . TYPE ID ASSIGN ID OP ID SEMI
    (66) EXPRESSION3 -> . TYPE ID SEMI
    (67) EXPRESSION4 -> . TYPE ID ASSIGN VALUE SEMI
    (68) EXPRESSION5 -> . ID ASSIGN VALUE SEMI
    (73) EXPRESSION6 -> . TRUE
    (74) EXPRESSION6 -> . FALSE
    (75) EXPRESSION6 -> . NULL
    (76) EXPRESSION6 -> . ID
    (77) EXPRESSION6 -> . VALUE
    (78) EXPRESSION6 -> . TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI
    (79) EXPRESSION6 -> . ID ASSIGN ID OP ID OP ID SEMI
    (80) EXPRESSION6 -> . EMPTY
    (81) EXPRESSION6 -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I
    (23) TYPE -> . PRIMTYPE
    (24) TYPE -> . CLASSTYPE
    (25) TYPE -> . ARRTYPE
    (69) VALUE -> . VALUE1
    (70) VALUE -> . VALUE2
    (22) EMPTY -> .
    (26) PRIMTYPE -> . INT
    (27) PRIMTYPE -> . BOOLEAN
    (28) PRIMTYPE -> . STRING
    (29) PRIMTYPE -> . DOUBLE
    (30) PRIMTYPE -> . CHARACTER
    (31) PRIMTYPE -> . FLOAT
    (32) PRIMTYPE -> . VOID
    (33) CLASSTYPE -> . ID
    (34) ARRTYPE -> . INT OPENBRACKET CLOSEBRACKET
    (35) ARRTYPE -> . CLASSTYPE OPENBRACKET CLOSEBRACKET
    (71) VALUE1 -> . NUMBER
    (72) VALUE2 -> . CHAR

  ! shift/reduce conflict for OPENAKOL resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for THIS resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for CHARACTER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    OPENAKOL        shift and go to state 10
    IF              shift and go to state 22
    FOR             shift and go to state 23
    WHILE           shift and go to state 24
    THIS            shift and go to state 36
    ID              shift and go to state 59
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    NULL            shift and go to state 47
    ELSE            reduce using rule 22 (EMPTY -> .)
    STATIC          reduce using rule 22 (EMPTY -> .)
    PUBLIC          reduce using rule 22 (EMPTY -> .)
    PRIVATE         reduce using rule 22 (EMPTY -> .)
    CLOSEAKOL       reduce using rule 22 (EMPTY -> .)
    RETURN          reduce using rule 22 (EMPTY -> .)
    INT             shift and go to state 37
    BOOLEAN         shift and go to state 38
    STRING          shift and go to state 39
    DOUBLE          shift and go to state 40
    CHARACTER       shift and go to state 41
    FLOAT           shift and go to state 42
    VOID            shift and go to state 43
    NUMBER          shift and go to state 48
    CHAR            shift and go to state 51

  ! OPENAKOL        [ reduce using rule 22 (EMPTY -> .) ]
  ! IF              [ reduce using rule 22 (EMPTY -> .) ]
  ! FOR             [ reduce using rule 22 (EMPTY -> .) ]
  ! WHILE           [ reduce using rule 22 (EMPTY -> .) ]
  ! THIS            [ reduce using rule 22 (EMPTY -> .) ]
  ! ID              [ reduce using rule 22 (EMPTY -> .) ]
  ! INT             [ reduce using rule 22 (EMPTY -> .) ]
  ! BOOLEAN         [ reduce using rule 22 (EMPTY -> .) ]
  ! STRING          [ reduce using rule 22 (EMPTY -> .) ]
  ! DOUBLE          [ reduce using rule 22 (EMPTY -> .) ]
  ! CHARACTER       [ reduce using rule 22 (EMPTY -> .) ]
  ! FLOAT           [ reduce using rule 22 (EMPTY -> .) ]
  ! VOID            [ reduce using rule 22 (EMPTY -> .) ]
  ! TRUE            [ reduce using rule 22 (EMPTY -> .) ]
  ! FALSE           [ reduce using rule 22 (EMPTY -> .) ]
  ! NULL            [ reduce using rule 22 (EMPTY -> .) ]
  ! NUMBER          [ reduce using rule 22 (EMPTY -> .) ]
  ! CHAR            [ reduce using rule 22 (EMPTY -> .) ]

    EXPRESSION                     shift and go to state 17
    STATEMENT                      shift and go to state 152
    REFERENCE                      shift and go to state 21
    EXPRESSION1                    shift and go to state 30
    EXPRESSION2                    shift and go to state 31
    EXPRESSION3                    shift and go to state 32
    EXPRESSION4                    shift and go to state 33
    EXPRESSION5                    shift and go to state 34
    EXPRESSION6                    shift and go to state 35
    TYPE                           shift and go to state 60
    VALUE                          shift and go to state 44
    EMPTY                          shift and go to state 92
    PRIMTYPE                       shift and go to state 27
    CLASSTYPE                      shift and go to state 28
    ARRTYPE                        shift and go to state 29
    VALUE1                         shift and go to state 49
    VALUE2                         shift and go to state 50

state 136

    (54) STATEMENT -> FOR OPENPAR EXPRESSION CLOSEPAR . STATEMENT
    (46) STATEMENT -> . OPENAKOL H CLOSEAKOL
    (47) STATEMENT -> . EXPRESSION
    (48) STATEMENT -> . REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI
    (49) STATEMENT -> . REFERENCE ASSIGN EXPRESSION SEMI
    (50) STATEMENT -> . REFERENCE OPENPAR CLOSEPAR SEMI
    (51) STATEMENT -> . REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI
    (52) STATEMENT -> . IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT
    (53) STATEMENT -> . IF OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (54) STATEMENT -> . FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (55) STATEMENT -> . WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (58) EXPRESSION -> . EXPRESSION1
    (59) EXPRESSION -> . EXPRESSION2
    (60) EXPRESSION -> . EXPRESSION3
    (61) EXPRESSION -> . EXPRESSION4
    (62) EXPRESSION -> . EXPRESSION5
    (63) EXPRESSION -> . EXPRESSION6
    (42) REFERENCE -> . THIS G
    (43) REFERENCE -> . ID G
    (64) EXPRESSION1 -> . ID ASSIGN ID OP ID SEMI
    (65) EXPRESSION2 -> . TYPE ID ASSIGN ID OP ID SEMI
    (66) EXPRESSION3 -> . TYPE ID SEMI
    (67) EXPRESSION4 -> . TYPE ID ASSIGN VALUE SEMI
    (68) EXPRESSION5 -> . ID ASSIGN VALUE SEMI
    (73) EXPRESSION6 -> . TRUE
    (74) EXPRESSION6 -> . FALSE
    (75) EXPRESSION6 -> . NULL
    (76) EXPRESSION6 -> . ID
    (77) EXPRESSION6 -> . VALUE
    (78) EXPRESSION6 -> . TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI
    (79) EXPRESSION6 -> . ID ASSIGN ID OP ID OP ID SEMI
    (80) EXPRESSION6 -> . EMPTY
    (81) EXPRESSION6 -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I
    (23) TYPE -> . PRIMTYPE
    (24) TYPE -> . CLASSTYPE
    (25) TYPE -> . ARRTYPE
    (69) VALUE -> . VALUE1
    (70) VALUE -> . VALUE2
    (22) EMPTY -> .
    (26) PRIMTYPE -> . INT
    (27) PRIMTYPE -> . BOOLEAN
    (28) PRIMTYPE -> . STRING
    (29) PRIMTYPE -> . DOUBLE
    (30) PRIMTYPE -> . CHARACTER
    (31) PRIMTYPE -> . FLOAT
    (32) PRIMTYPE -> . VOID
    (33) CLASSTYPE -> . ID
    (34) ARRTYPE -> . INT OPENBRACKET CLOSEBRACKET
    (35) ARRTYPE -> . CLASSTYPE OPENBRACKET CLOSEBRACKET
    (71) VALUE1 -> . NUMBER
    (72) VALUE2 -> . CHAR

  ! shift/reduce conflict for OPENAKOL resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for THIS resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for CHARACTER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    OPENAKOL        shift and go to state 10
    IF              shift and go to state 22
    FOR             shift and go to state 23
    WHILE           shift and go to state 24
    THIS            shift and go to state 36
    ID              shift and go to state 59
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    NULL            shift and go to state 47
    ELSE            reduce using rule 22 (EMPTY -> .)
    STATIC          reduce using rule 22 (EMPTY -> .)
    PUBLIC          reduce using rule 22 (EMPTY -> .)
    PRIVATE         reduce using rule 22 (EMPTY -> .)
    CLOSEAKOL       reduce using rule 22 (EMPTY -> .)
    RETURN          reduce using rule 22 (EMPTY -> .)
    INT             shift and go to state 37
    BOOLEAN         shift and go to state 38
    STRING          shift and go to state 39
    DOUBLE          shift and go to state 40
    CHARACTER       shift and go to state 41
    FLOAT           shift and go to state 42
    VOID            shift and go to state 43
    NUMBER          shift and go to state 48
    CHAR            shift and go to state 51

  ! OPENAKOL        [ reduce using rule 22 (EMPTY -> .) ]
  ! IF              [ reduce using rule 22 (EMPTY -> .) ]
  ! FOR             [ reduce using rule 22 (EMPTY -> .) ]
  ! WHILE           [ reduce using rule 22 (EMPTY -> .) ]
  ! THIS            [ reduce using rule 22 (EMPTY -> .) ]
  ! ID              [ reduce using rule 22 (EMPTY -> .) ]
  ! INT             [ reduce using rule 22 (EMPTY -> .) ]
  ! BOOLEAN         [ reduce using rule 22 (EMPTY -> .) ]
  ! STRING          [ reduce using rule 22 (EMPTY -> .) ]
  ! DOUBLE          [ reduce using rule 22 (EMPTY -> .) ]
  ! CHARACTER       [ reduce using rule 22 (EMPTY -> .) ]
  ! FLOAT           [ reduce using rule 22 (EMPTY -> .) ]
  ! VOID            [ reduce using rule 22 (EMPTY -> .) ]
  ! TRUE            [ reduce using rule 22 (EMPTY -> .) ]
  ! FALSE           [ reduce using rule 22 (EMPTY -> .) ]
  ! NULL            [ reduce using rule 22 (EMPTY -> .) ]
  ! NUMBER          [ reduce using rule 22 (EMPTY -> .) ]
  ! CHAR            [ reduce using rule 22 (EMPTY -> .) ]

    EXPRESSION                     shift and go to state 17
    STATEMENT                      shift and go to state 153
    REFERENCE                      shift and go to state 21
    EXPRESSION1                    shift and go to state 30
    EXPRESSION2                    shift and go to state 31
    EXPRESSION3                    shift and go to state 32
    EXPRESSION4                    shift and go to state 33
    EXPRESSION5                    shift and go to state 34
    EXPRESSION6                    shift and go to state 35
    TYPE                           shift and go to state 60
    VALUE                          shift and go to state 44
    EMPTY                          shift and go to state 92
    PRIMTYPE                       shift and go to state 27
    CLASSTYPE                      shift and go to state 28
    ARRTYPE                        shift and go to state 29
    VALUE1                         shift and go to state 49
    VALUE2                         shift and go to state 50

state 137

    (55) STATEMENT -> WHILE OPENPAR EXPRESSION CLOSEPAR . STATEMENT
    (46) STATEMENT -> . OPENAKOL H CLOSEAKOL
    (47) STATEMENT -> . EXPRESSION
    (48) STATEMENT -> . REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI
    (49) STATEMENT -> . REFERENCE ASSIGN EXPRESSION SEMI
    (50) STATEMENT -> . REFERENCE OPENPAR CLOSEPAR SEMI
    (51) STATEMENT -> . REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI
    (52) STATEMENT -> . IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT
    (53) STATEMENT -> . IF OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (54) STATEMENT -> . FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (55) STATEMENT -> . WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (58) EXPRESSION -> . EXPRESSION1
    (59) EXPRESSION -> . EXPRESSION2
    (60) EXPRESSION -> . EXPRESSION3
    (61) EXPRESSION -> . EXPRESSION4
    (62) EXPRESSION -> . EXPRESSION5
    (63) EXPRESSION -> . EXPRESSION6
    (42) REFERENCE -> . THIS G
    (43) REFERENCE -> . ID G
    (64) EXPRESSION1 -> . ID ASSIGN ID OP ID SEMI
    (65) EXPRESSION2 -> . TYPE ID ASSIGN ID OP ID SEMI
    (66) EXPRESSION3 -> . TYPE ID SEMI
    (67) EXPRESSION4 -> . TYPE ID ASSIGN VALUE SEMI
    (68) EXPRESSION5 -> . ID ASSIGN VALUE SEMI
    (73) EXPRESSION6 -> . TRUE
    (74) EXPRESSION6 -> . FALSE
    (75) EXPRESSION6 -> . NULL
    (76) EXPRESSION6 -> . ID
    (77) EXPRESSION6 -> . VALUE
    (78) EXPRESSION6 -> . TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI
    (79) EXPRESSION6 -> . ID ASSIGN ID OP ID OP ID SEMI
    (80) EXPRESSION6 -> . EMPTY
    (81) EXPRESSION6 -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I
    (23) TYPE -> . PRIMTYPE
    (24) TYPE -> . CLASSTYPE
    (25) TYPE -> . ARRTYPE
    (69) VALUE -> . VALUE1
    (70) VALUE -> . VALUE2
    (22) EMPTY -> .
    (26) PRIMTYPE -> . INT
    (27) PRIMTYPE -> . BOOLEAN
    (28) PRIMTYPE -> . STRING
    (29) PRIMTYPE -> . DOUBLE
    (30) PRIMTYPE -> . CHARACTER
    (31) PRIMTYPE -> . FLOAT
    (32) PRIMTYPE -> . VOID
    (33) CLASSTYPE -> . ID
    (34) ARRTYPE -> . INT OPENBRACKET CLOSEBRACKET
    (35) ARRTYPE -> . CLASSTYPE OPENBRACKET CLOSEBRACKET
    (71) VALUE1 -> . NUMBER
    (72) VALUE2 -> . CHAR

  ! shift/reduce conflict for OPENAKOL resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for THIS resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for CHARACTER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    OPENAKOL        shift and go to state 10
    IF              shift and go to state 22
    FOR             shift and go to state 23
    WHILE           shift and go to state 24
    THIS            shift and go to state 36
    ID              shift and go to state 59
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    NULL            shift and go to state 47
    ELSE            reduce using rule 22 (EMPTY -> .)
    STATIC          reduce using rule 22 (EMPTY -> .)
    PUBLIC          reduce using rule 22 (EMPTY -> .)
    PRIVATE         reduce using rule 22 (EMPTY -> .)
    CLOSEAKOL       reduce using rule 22 (EMPTY -> .)
    RETURN          reduce using rule 22 (EMPTY -> .)
    INT             shift and go to state 37
    BOOLEAN         shift and go to state 38
    STRING          shift and go to state 39
    DOUBLE          shift and go to state 40
    CHARACTER       shift and go to state 41
    FLOAT           shift and go to state 42
    VOID            shift and go to state 43
    NUMBER          shift and go to state 48
    CHAR            shift and go to state 51

  ! OPENAKOL        [ reduce using rule 22 (EMPTY -> .) ]
  ! IF              [ reduce using rule 22 (EMPTY -> .) ]
  ! FOR             [ reduce using rule 22 (EMPTY -> .) ]
  ! WHILE           [ reduce using rule 22 (EMPTY -> .) ]
  ! THIS            [ reduce using rule 22 (EMPTY -> .) ]
  ! ID              [ reduce using rule 22 (EMPTY -> .) ]
  ! INT             [ reduce using rule 22 (EMPTY -> .) ]
  ! BOOLEAN         [ reduce using rule 22 (EMPTY -> .) ]
  ! STRING          [ reduce using rule 22 (EMPTY -> .) ]
  ! DOUBLE          [ reduce using rule 22 (EMPTY -> .) ]
  ! CHARACTER       [ reduce using rule 22 (EMPTY -> .) ]
  ! FLOAT           [ reduce using rule 22 (EMPTY -> .) ]
  ! VOID            [ reduce using rule 22 (EMPTY -> .) ]
  ! TRUE            [ reduce using rule 22 (EMPTY -> .) ]
  ! FALSE           [ reduce using rule 22 (EMPTY -> .) ]
  ! NULL            [ reduce using rule 22 (EMPTY -> .) ]
  ! NUMBER          [ reduce using rule 22 (EMPTY -> .) ]
  ! CHAR            [ reduce using rule 22 (EMPTY -> .) ]

    EXPRESSION                     shift and go to state 17
    STATEMENT                      shift and go to state 154
    REFERENCE                      shift and go to state 21
    EXPRESSION1                    shift and go to state 30
    EXPRESSION2                    shift and go to state 31
    EXPRESSION3                    shift and go to state 32
    EXPRESSION4                    shift and go to state 33
    EXPRESSION5                    shift and go to state 34
    EXPRESSION6                    shift and go to state 35
    TYPE                           shift and go to state 60
    VALUE                          shift and go to state 44
    EMPTY                          shift and go to state 92
    PRIMTYPE                       shift and go to state 27
    CLASSTYPE                      shift and go to state 28
    ARRTYPE                        shift and go to state 29
    VALUE1                         shift and go to state 49
    VALUE2                         shift and go to state 50

state 138

    (64) EXPRESSION1 -> ID ASSIGN ID OP ID . SEMI
    (79) EXPRESSION6 -> ID ASSIGN ID OP ID . OP ID SEMI
    (82) OP -> . LESSEQUAL
    (83) OP -> . ASSIGN
    (84) OP -> . EQUALS
    (85) OP -> . GREATEREQUAL
    (86) OP -> . GREATERTHAN
    (87) OP -> . LESSTHAN
    (88) OP -> . ADD
    (89) OP -> . MINUS
    (90) OP -> . MULT
    (91) OP -> . NOTEQUAL
    (92) OP -> . DIVIDE
    (93) OP -> . PEQUAL
    (94) OP -> . MEQUAL
    (95) OP -> . PLUSPLUS

    SEMI            shift and go to state 156
    LESSEQUAL       shift and go to state 105
    ASSIGN          shift and go to state 103
    EQUALS          shift and go to state 106
    GREATEREQUAL    shift and go to state 107
    GREATERTHAN     shift and go to state 108
    LESSTHAN        shift and go to state 109
    ADD             shift and go to state 110
    MINUS           shift and go to state 111
    MULT            shift and go to state 112
    NOTEQUAL        shift and go to state 113
    DIVIDE          shift and go to state 114
    PEQUAL          shift and go to state 115
    MEQUAL          shift and go to state 116
    PLUSPLUS        shift and go to state 117

    OP                             shift and go to state 155

state 139

    (10) METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR . OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL
    (12) METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR . OPENAKOL B CLOSEAKOL

    OPENAKOL        shift and go to state 157


state 140

    (11) METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL . B RETURN EXPRESSION SEMI CLOSEAKOL
    (13) METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL . B CLOSEAKOL
    (14) B -> . STATEMENT B
    (15) B -> . EMPTY
    (46) STATEMENT -> . OPENAKOL H CLOSEAKOL
    (47) STATEMENT -> . EXPRESSION
    (48) STATEMENT -> . REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI
    (49) STATEMENT -> . REFERENCE ASSIGN EXPRESSION SEMI
    (50) STATEMENT -> . REFERENCE OPENPAR CLOSEPAR SEMI
    (51) STATEMENT -> . REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI
    (52) STATEMENT -> . IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT
    (53) STATEMENT -> . IF OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (54) STATEMENT -> . FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (55) STATEMENT -> . WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (22) EMPTY -> .
    (58) EXPRESSION -> . EXPRESSION1
    (59) EXPRESSION -> . EXPRESSION2
    (60) EXPRESSION -> . EXPRESSION3
    (61) EXPRESSION -> . EXPRESSION4
    (62) EXPRESSION -> . EXPRESSION5
    (63) EXPRESSION -> . EXPRESSION6
    (42) REFERENCE -> . THIS G
    (43) REFERENCE -> . ID G
    (64) EXPRESSION1 -> . ID ASSIGN ID OP ID SEMI
    (65) EXPRESSION2 -> . TYPE ID ASSIGN ID OP ID SEMI
    (66) EXPRESSION3 -> . TYPE ID SEMI
    (67) EXPRESSION4 -> . TYPE ID ASSIGN VALUE SEMI
    (68) EXPRESSION5 -> . ID ASSIGN VALUE SEMI
    (73) EXPRESSION6 -> . TRUE
    (74) EXPRESSION6 -> . FALSE
    (75) EXPRESSION6 -> . NULL
    (76) EXPRESSION6 -> . ID
    (77) EXPRESSION6 -> . VALUE
    (78) EXPRESSION6 -> . TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI
    (79) EXPRESSION6 -> . ID ASSIGN ID OP ID OP ID SEMI
    (80) EXPRESSION6 -> . EMPTY
    (81) EXPRESSION6 -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I
    (23) TYPE -> . PRIMTYPE
    (24) TYPE -> . CLASSTYPE
    (25) TYPE -> . ARRTYPE
    (69) VALUE -> . VALUE1
    (70) VALUE -> . VALUE2
    (26) PRIMTYPE -> . INT
    (27) PRIMTYPE -> . BOOLEAN
    (28) PRIMTYPE -> . STRING
    (29) PRIMTYPE -> . DOUBLE
    (30) PRIMTYPE -> . CHARACTER
    (31) PRIMTYPE -> . FLOAT
    (32) PRIMTYPE -> . VOID
    (33) CLASSTYPE -> . ID
    (34) ARRTYPE -> . INT OPENBRACKET CLOSEBRACKET
    (35) ARRTYPE -> . CLASSTYPE OPENBRACKET CLOSEBRACKET
    (71) VALUE1 -> . NUMBER
    (72) VALUE2 -> . CHAR

  ! shift/reduce conflict for OPENAKOL resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for THIS resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for CHARACTER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    OPENAKOL        shift and go to state 10
    IF              shift and go to state 22
    FOR             shift and go to state 23
    WHILE           shift and go to state 24
    RETURN          reduce using rule 22 (EMPTY -> .)
    CLOSEAKOL       reduce using rule 22 (EMPTY -> .)
    THIS            shift and go to state 36
    ID              shift and go to state 59
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    NULL            shift and go to state 47
    INT             shift and go to state 37
    BOOLEAN         shift and go to state 38
    STRING          shift and go to state 39
    DOUBLE          shift and go to state 40
    CHARACTER       shift and go to state 41
    FLOAT           shift and go to state 42
    VOID            shift and go to state 43
    NUMBER          shift and go to state 48
    CHAR            shift and go to state 51

  ! OPENAKOL        [ reduce using rule 22 (EMPTY -> .) ]
  ! IF              [ reduce using rule 22 (EMPTY -> .) ]
  ! FOR             [ reduce using rule 22 (EMPTY -> .) ]
  ! WHILE           [ reduce using rule 22 (EMPTY -> .) ]
  ! THIS            [ reduce using rule 22 (EMPTY -> .) ]
  ! ID              [ reduce using rule 22 (EMPTY -> .) ]
  ! TRUE            [ reduce using rule 22 (EMPTY -> .) ]
  ! FALSE           [ reduce using rule 22 (EMPTY -> .) ]
  ! NULL            [ reduce using rule 22 (EMPTY -> .) ]
  ! INT             [ reduce using rule 22 (EMPTY -> .) ]
  ! BOOLEAN         [ reduce using rule 22 (EMPTY -> .) ]
  ! STRING          [ reduce using rule 22 (EMPTY -> .) ]
  ! DOUBLE          [ reduce using rule 22 (EMPTY -> .) ]
  ! CHARACTER       [ reduce using rule 22 (EMPTY -> .) ]
  ! FLOAT           [ reduce using rule 22 (EMPTY -> .) ]
  ! VOID            [ reduce using rule 22 (EMPTY -> .) ]
  ! NUMBER          [ reduce using rule 22 (EMPTY -> .) ]
  ! CHAR            [ reduce using rule 22 (EMPTY -> .) ]

    B                              shift and go to state 158
    EXPRESSION                     shift and go to state 17
    STATEMENT                      shift and go to state 159
    EMPTY                          shift and go to state 160
    REFERENCE                      shift and go to state 21
    EXPRESSION1                    shift and go to state 30
    EXPRESSION2                    shift and go to state 31
    EXPRESSION3                    shift and go to state 32
    EXPRESSION4                    shift and go to state 33
    EXPRESSION5                    shift and go to state 34
    EXPRESSION6                    shift and go to state 35
    TYPE                           shift and go to state 60
    VALUE                          shift and go to state 44
    PRIMTYPE                       shift and go to state 27
    CLASSTYPE                      shift and go to state 28
    ARRTYPE                        shift and go to state 29
    VALUE1                         shift and go to state 49
    VALUE2                         shift and go to state 50

state 141

    (36) PARAMERERLIST -> TYPE ID . D
    (37) D -> . COMMA TYPE ID D
    (38) D -> . EMPTY
    (22) EMPTY -> .

    COMMA           shift and go to state 162
    CLOSEPAR        reduce using rule 22 (EMPTY -> .)

    D                              shift and go to state 161
    EMPTY                          shift and go to state 163

state 142

    (64) EXPRESSION1 -> ID ASSIGN . ID OP ID SEMI
    (68) EXPRESSION5 -> ID ASSIGN . VALUE SEMI
    (79) EXPRESSION6 -> ID ASSIGN . ID OP ID OP ID SEMI
    (83) OP -> ASSIGN .
    (69) VALUE -> . VALUE1
    (70) VALUE -> . VALUE2
    (71) VALUE1 -> . NUMBER
    (72) VALUE2 -> . CHAR

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 79
    NUMBER          shift and go to state 48
    CHAR            shift and go to state 51

  ! ID              [ reduce using rule 83 (OP -> ASSIGN .) ]

    VALUE                          shift and go to state 80
    VALUE1                         shift and go to state 49
    VALUE2                         shift and go to state 50

state 143

    (65) EXPRESSION2 -> TYPE ID ASSIGN ID OP . ID SEMI

    ID              shift and go to state 164


state 144

    (67) EXPRESSION4 -> TYPE ID ASSIGN VALUE SEMI .

    STATIC          reduce using rule 67 (EXPRESSION4 -> TYPE ID ASSIGN VALUE SEMI .)
    OPENAKOL        reduce using rule 67 (EXPRESSION4 -> TYPE ID ASSIGN VALUE SEMI .)
    IF              reduce using rule 67 (EXPRESSION4 -> TYPE ID ASSIGN VALUE SEMI .)
    FOR             reduce using rule 67 (EXPRESSION4 -> TYPE ID ASSIGN VALUE SEMI .)
    WHILE           reduce using rule 67 (EXPRESSION4 -> TYPE ID ASSIGN VALUE SEMI .)
    PUBLIC          reduce using rule 67 (EXPRESSION4 -> TYPE ID ASSIGN VALUE SEMI .)
    PRIVATE         reduce using rule 67 (EXPRESSION4 -> TYPE ID ASSIGN VALUE SEMI .)
    THIS            reduce using rule 67 (EXPRESSION4 -> TYPE ID ASSIGN VALUE SEMI .)
    ID              reduce using rule 67 (EXPRESSION4 -> TYPE ID ASSIGN VALUE SEMI .)
    INT             reduce using rule 67 (EXPRESSION4 -> TYPE ID ASSIGN VALUE SEMI .)
    BOOLEAN         reduce using rule 67 (EXPRESSION4 -> TYPE ID ASSIGN VALUE SEMI .)
    STRING          reduce using rule 67 (EXPRESSION4 -> TYPE ID ASSIGN VALUE SEMI .)
    DOUBLE          reduce using rule 67 (EXPRESSION4 -> TYPE ID ASSIGN VALUE SEMI .)
    CHARACTER       reduce using rule 67 (EXPRESSION4 -> TYPE ID ASSIGN VALUE SEMI .)
    FLOAT           reduce using rule 67 (EXPRESSION4 -> TYPE ID ASSIGN VALUE SEMI .)
    VOID            reduce using rule 67 (EXPRESSION4 -> TYPE ID ASSIGN VALUE SEMI .)
    TRUE            reduce using rule 67 (EXPRESSION4 -> TYPE ID ASSIGN VALUE SEMI .)
    FALSE           reduce using rule 67 (EXPRESSION4 -> TYPE ID ASSIGN VALUE SEMI .)
    NULL            reduce using rule 67 (EXPRESSION4 -> TYPE ID ASSIGN VALUE SEMI .)
    NUMBER          reduce using rule 67 (EXPRESSION4 -> TYPE ID ASSIGN VALUE SEMI .)
    CHAR            reduce using rule 67 (EXPRESSION4 -> TYPE ID ASSIGN VALUE SEMI .)
    CLOSEAKOL       reduce using rule 67 (EXPRESSION4 -> TYPE ID ASSIGN VALUE SEMI .)
    CLOSEBRACKET    reduce using rule 67 (EXPRESSION4 -> TYPE ID ASSIGN VALUE SEMI .)
    SEMI            reduce using rule 67 (EXPRESSION4 -> TYPE ID ASSIGN VALUE SEMI .)
    COMMA           reduce using rule 67 (EXPRESSION4 -> TYPE ID ASSIGN VALUE SEMI .)
    CLOSEPAR        reduce using rule 67 (EXPRESSION4 -> TYPE ID ASSIGN VALUE SEMI .)
    LESSEQUAL       reduce using rule 67 (EXPRESSION4 -> TYPE ID ASSIGN VALUE SEMI .)
    ASSIGN          reduce using rule 67 (EXPRESSION4 -> TYPE ID ASSIGN VALUE SEMI .)
    EQUALS          reduce using rule 67 (EXPRESSION4 -> TYPE ID ASSIGN VALUE SEMI .)
    GREATEREQUAL    reduce using rule 67 (EXPRESSION4 -> TYPE ID ASSIGN VALUE SEMI .)
    GREATERTHAN     reduce using rule 67 (EXPRESSION4 -> TYPE ID ASSIGN VALUE SEMI .)
    LESSTHAN        reduce using rule 67 (EXPRESSION4 -> TYPE ID ASSIGN VALUE SEMI .)
    ADD             reduce using rule 67 (EXPRESSION4 -> TYPE ID ASSIGN VALUE SEMI .)
    MINUS           reduce using rule 67 (EXPRESSION4 -> TYPE ID ASSIGN VALUE SEMI .)
    MULT            reduce using rule 67 (EXPRESSION4 -> TYPE ID ASSIGN VALUE SEMI .)
    NOTEQUAL        reduce using rule 67 (EXPRESSION4 -> TYPE ID ASSIGN VALUE SEMI .)
    DIVIDE          reduce using rule 67 (EXPRESSION4 -> TYPE ID ASSIGN VALUE SEMI .)
    PEQUAL          reduce using rule 67 (EXPRESSION4 -> TYPE ID ASSIGN VALUE SEMI .)
    MEQUAL          reduce using rule 67 (EXPRESSION4 -> TYPE ID ASSIGN VALUE SEMI .)
    PLUSPLUS        reduce using rule 67 (EXPRESSION4 -> TYPE ID ASSIGN VALUE SEMI .)
    ELSE            reduce using rule 67 (EXPRESSION4 -> TYPE ID ASSIGN VALUE SEMI .)
    RETURN          reduce using rule 67 (EXPRESSION4 -> TYPE ID ASSIGN VALUE SEMI .)


state 145

    (78) EXPRESSION6 -> TYPE ID ASSIGN EXPRESSION OP . EXPRESSION SEMI
    (58) EXPRESSION -> . EXPRESSION1
    (59) EXPRESSION -> . EXPRESSION2
    (60) EXPRESSION -> . EXPRESSION3
    (61) EXPRESSION -> . EXPRESSION4
    (62) EXPRESSION -> . EXPRESSION5
    (63) EXPRESSION -> . EXPRESSION6
    (64) EXPRESSION1 -> . ID ASSIGN ID OP ID SEMI
    (65) EXPRESSION2 -> . TYPE ID ASSIGN ID OP ID SEMI
    (66) EXPRESSION3 -> . TYPE ID SEMI
    (67) EXPRESSION4 -> . TYPE ID ASSIGN VALUE SEMI
    (68) EXPRESSION5 -> . ID ASSIGN VALUE SEMI
    (73) EXPRESSION6 -> . TRUE
    (74) EXPRESSION6 -> . FALSE
    (75) EXPRESSION6 -> . NULL
    (76) EXPRESSION6 -> . ID
    (77) EXPRESSION6 -> . VALUE
    (78) EXPRESSION6 -> . TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI
    (79) EXPRESSION6 -> . ID ASSIGN ID OP ID OP ID SEMI
    (80) EXPRESSION6 -> . EMPTY
    (81) EXPRESSION6 -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I
    (23) TYPE -> . PRIMTYPE
    (24) TYPE -> . CLASSTYPE
    (25) TYPE -> . ARRTYPE
    (69) VALUE -> . VALUE1
    (70) VALUE -> . VALUE2
    (22) EMPTY -> .
    (42) REFERENCE -> . THIS G
    (43) REFERENCE -> . ID G
    (26) PRIMTYPE -> . INT
    (27) PRIMTYPE -> . BOOLEAN
    (28) PRIMTYPE -> . STRING
    (29) PRIMTYPE -> . DOUBLE
    (30) PRIMTYPE -> . CHARACTER
    (31) PRIMTYPE -> . FLOAT
    (32) PRIMTYPE -> . VOID
    (33) CLASSTYPE -> . ID
    (34) ARRTYPE -> . INT OPENBRACKET CLOSEBRACKET
    (35) ARRTYPE -> . CLASSTYPE OPENBRACKET CLOSEBRACKET
    (71) VALUE1 -> . NUMBER
    (72) VALUE2 -> . CHAR

    ID              shift and go to state 91
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    NULL            shift and go to state 47
    SEMI            reduce using rule 22 (EMPTY -> .)
    THIS            shift and go to state 36
    INT             shift and go to state 37
    BOOLEAN         shift and go to state 38
    STRING          shift and go to state 39
    DOUBLE          shift and go to state 40
    CHARACTER       shift and go to state 41
    FLOAT           shift and go to state 42
    VOID            shift and go to state 43
    NUMBER          shift and go to state 48
    CHAR            shift and go to state 51

    TYPE                           shift and go to state 60
    EXPRESSION                     shift and go to state 165
    EXPRESSION1                    shift and go to state 30
    EXPRESSION2                    shift and go to state 31
    EXPRESSION3                    shift and go to state 32
    EXPRESSION4                    shift and go to state 33
    EXPRESSION5                    shift and go to state 34
    EXPRESSION6                    shift and go to state 35
    VALUE                          shift and go to state 44
    EMPTY                          shift and go to state 92
    REFERENCE                      shift and go to state 89
    PRIMTYPE                       shift and go to state 27
    CLASSTYPE                      shift and go to state 28
    ARRTYPE                        shift and go to state 29
    VALUE1                         shift and go to state 49
    VALUE2                         shift and go to state 50

state 146

    (81) EXPRESSION6 -> REFERENCE ASSIGN NUMBER . SEMI REFERENCE OP REFERENCE SEMI I

    SEMI            shift and go to state 129


state 147

    (48) STATEMENT -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN . EXPRESSION SEMI
    (58) EXPRESSION -> . EXPRESSION1
    (59) EXPRESSION -> . EXPRESSION2
    (60) EXPRESSION -> . EXPRESSION3
    (61) EXPRESSION -> . EXPRESSION4
    (62) EXPRESSION -> . EXPRESSION5
    (63) EXPRESSION -> . EXPRESSION6
    (64) EXPRESSION1 -> . ID ASSIGN ID OP ID SEMI
    (65) EXPRESSION2 -> . TYPE ID ASSIGN ID OP ID SEMI
    (66) EXPRESSION3 -> . TYPE ID SEMI
    (67) EXPRESSION4 -> . TYPE ID ASSIGN VALUE SEMI
    (68) EXPRESSION5 -> . ID ASSIGN VALUE SEMI
    (73) EXPRESSION6 -> . TRUE
    (74) EXPRESSION6 -> . FALSE
    (75) EXPRESSION6 -> . NULL
    (76) EXPRESSION6 -> . ID
    (77) EXPRESSION6 -> . VALUE
    (78) EXPRESSION6 -> . TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI
    (79) EXPRESSION6 -> . ID ASSIGN ID OP ID OP ID SEMI
    (80) EXPRESSION6 -> . EMPTY
    (81) EXPRESSION6 -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I
    (23) TYPE -> . PRIMTYPE
    (24) TYPE -> . CLASSTYPE
    (25) TYPE -> . ARRTYPE
    (69) VALUE -> . VALUE1
    (70) VALUE -> . VALUE2
    (22) EMPTY -> .
    (42) REFERENCE -> . THIS G
    (43) REFERENCE -> . ID G
    (26) PRIMTYPE -> . INT
    (27) PRIMTYPE -> . BOOLEAN
    (28) PRIMTYPE -> . STRING
    (29) PRIMTYPE -> . DOUBLE
    (30) PRIMTYPE -> . CHARACTER
    (31) PRIMTYPE -> . FLOAT
    (32) PRIMTYPE -> . VOID
    (33) CLASSTYPE -> . ID
    (34) ARRTYPE -> . INT OPENBRACKET CLOSEBRACKET
    (35) ARRTYPE -> . CLASSTYPE OPENBRACKET CLOSEBRACKET
    (71) VALUE1 -> . NUMBER
    (72) VALUE2 -> . CHAR

    ID              shift and go to state 91
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    NULL            shift and go to state 47
    SEMI            reduce using rule 22 (EMPTY -> .)
    THIS            shift and go to state 36
    INT             shift and go to state 37
    BOOLEAN         shift and go to state 38
    STRING          shift and go to state 39
    DOUBLE          shift and go to state 40
    CHARACTER       shift and go to state 41
    FLOAT           shift and go to state 42
    VOID            shift and go to state 43
    NUMBER          shift and go to state 48
    CHAR            shift and go to state 51

    REFERENCE                      shift and go to state 89
    EXPRESSION                     shift and go to state 166
    EXPRESSION1                    shift and go to state 30
    EXPRESSION2                    shift and go to state 31
    EXPRESSION3                    shift and go to state 32
    EXPRESSION4                    shift and go to state 33
    EXPRESSION5                    shift and go to state 34
    EXPRESSION6                    shift and go to state 35
    TYPE                           shift and go to state 60
    VALUE                          shift and go to state 44
    EMPTY                          shift and go to state 92
    PRIMTYPE                       shift and go to state 27
    CLASSTYPE                      shift and go to state 28
    ARRTYPE                        shift and go to state 29
    VALUE1                         shift and go to state 49
    VALUE2                         shift and go to state 50

state 148

    (81) EXPRESSION6 -> REFERENCE ASSIGN NUMBER SEMI REFERENCE . OP REFERENCE SEMI I
    (82) OP -> . LESSEQUAL
    (83) OP -> . ASSIGN
    (84) OP -> . EQUALS
    (85) OP -> . GREATEREQUAL
    (86) OP -> . GREATERTHAN
    (87) OP -> . LESSTHAN
    (88) OP -> . ADD
    (89) OP -> . MINUS
    (90) OP -> . MULT
    (91) OP -> . NOTEQUAL
    (92) OP -> . DIVIDE
    (93) OP -> . PEQUAL
    (94) OP -> . MEQUAL
    (95) OP -> . PLUSPLUS

    LESSEQUAL       shift and go to state 105
    ASSIGN          shift and go to state 103
    EQUALS          shift and go to state 106
    GREATEREQUAL    shift and go to state 107
    GREATERTHAN     shift and go to state 108
    LESSTHAN        shift and go to state 109
    ADD             shift and go to state 110
    MINUS           shift and go to state 111
    MULT            shift and go to state 112
    NOTEQUAL        shift and go to state 113
    DIVIDE          shift and go to state 114
    PEQUAL          shift and go to state 115
    MEQUAL          shift and go to state 116
    PLUSPLUS        shift and go to state 117

    OP                             shift and go to state 167

state 149

    (43) REFERENCE -> ID . G
    (44) G -> . DOT ID G
    (45) G -> . EMPTY
    (22) EMPTY -> .

    DOT             shift and go to state 54
    LESSEQUAL       reduce using rule 22 (EMPTY -> .)
    ASSIGN          reduce using rule 22 (EMPTY -> .)
    EQUALS          reduce using rule 22 (EMPTY -> .)
    GREATEREQUAL    reduce using rule 22 (EMPTY -> .)
    GREATERTHAN     reduce using rule 22 (EMPTY -> .)
    LESSTHAN        reduce using rule 22 (EMPTY -> .)
    ADD             reduce using rule 22 (EMPTY -> .)
    MINUS           reduce using rule 22 (EMPTY -> .)
    MULT            reduce using rule 22 (EMPTY -> .)
    NOTEQUAL        reduce using rule 22 (EMPTY -> .)
    DIVIDE          reduce using rule 22 (EMPTY -> .)
    PEQUAL          reduce using rule 22 (EMPTY -> .)
    MEQUAL          reduce using rule 22 (EMPTY -> .)
    PLUSPLUS        reduce using rule 22 (EMPTY -> .)
    SEMI            reduce using rule 22 (EMPTY -> .)
    STATIC          reduce using rule 22 (EMPTY -> .)
    OPENAKOL        reduce using rule 22 (EMPTY -> .)
    IF              reduce using rule 22 (EMPTY -> .)
    FOR             reduce using rule 22 (EMPTY -> .)
    WHILE           reduce using rule 22 (EMPTY -> .)
    PUBLIC          reduce using rule 22 (EMPTY -> .)
    PRIVATE         reduce using rule 22 (EMPTY -> .)
    THIS            reduce using rule 22 (EMPTY -> .)
    ID              reduce using rule 22 (EMPTY -> .)
    INT             reduce using rule 22 (EMPTY -> .)
    BOOLEAN         reduce using rule 22 (EMPTY -> .)
    STRING          reduce using rule 22 (EMPTY -> .)
    DOUBLE          reduce using rule 22 (EMPTY -> .)
    CHARACTER       reduce using rule 22 (EMPTY -> .)
    FLOAT           reduce using rule 22 (EMPTY -> .)
    VOID            reduce using rule 22 (EMPTY -> .)
    TRUE            reduce using rule 22 (EMPTY -> .)
    FALSE           reduce using rule 22 (EMPTY -> .)
    NULL            reduce using rule 22 (EMPTY -> .)
    NUMBER          reduce using rule 22 (EMPTY -> .)
    CHAR            reduce using rule 22 (EMPTY -> .)
    CLOSEAKOL       reduce using rule 22 (EMPTY -> .)
    CLOSEBRACKET    reduce using rule 22 (EMPTY -> .)
    COMMA           reduce using rule 22 (EMPTY -> .)
    CLOSEPAR        reduce using rule 22 (EMPTY -> .)
    ELSE            reduce using rule 22 (EMPTY -> .)
    RETURN          reduce using rule 22 (EMPTY -> .)

    G                              shift and go to state 52
    EMPTY                          shift and go to state 55

state 150

    (51) STATEMENT -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI .

    STATIC          reduce using rule 51 (STATEMENT -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI .)
    OPENAKOL        reduce using rule 51 (STATEMENT -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI .)
    IF              reduce using rule 51 (STATEMENT -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI .)
    FOR             reduce using rule 51 (STATEMENT -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI .)
    WHILE           reduce using rule 51 (STATEMENT -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI .)
    PUBLIC          reduce using rule 51 (STATEMENT -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI .)
    PRIVATE         reduce using rule 51 (STATEMENT -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI .)
    THIS            reduce using rule 51 (STATEMENT -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI .)
    ID              reduce using rule 51 (STATEMENT -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI .)
    INT             reduce using rule 51 (STATEMENT -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI .)
    BOOLEAN         reduce using rule 51 (STATEMENT -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI .)
    STRING          reduce using rule 51 (STATEMENT -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI .)
    DOUBLE          reduce using rule 51 (STATEMENT -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI .)
    CHARACTER       reduce using rule 51 (STATEMENT -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI .)
    FLOAT           reduce using rule 51 (STATEMENT -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI .)
    VOID            reduce using rule 51 (STATEMENT -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI .)
    TRUE            reduce using rule 51 (STATEMENT -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI .)
    FALSE           reduce using rule 51 (STATEMENT -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI .)
    NULL            reduce using rule 51 (STATEMENT -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI .)
    NUMBER          reduce using rule 51 (STATEMENT -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI .)
    CHAR            reduce using rule 51 (STATEMENT -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI .)
    CLOSEAKOL       reduce using rule 51 (STATEMENT -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI .)
    ELSE            reduce using rule 51 (STATEMENT -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI .)
    RETURN          reduce using rule 51 (STATEMENT -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI .)


state 151

    (40) E -> COMMA EXPRESSION .

    CLOSEPAR        reduce using rule 40 (E -> COMMA EXPRESSION .)


state 152

    (52) STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT . ELSE STATEMENT
    (53) STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 168
    STATIC          reduce using rule 53 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    OPENAKOL        reduce using rule 53 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    IF              reduce using rule 53 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    FOR             reduce using rule 53 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    WHILE           reduce using rule 53 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    PUBLIC          reduce using rule 53 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    PRIVATE         reduce using rule 53 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    THIS            reduce using rule 53 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    ID              reduce using rule 53 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    INT             reduce using rule 53 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    BOOLEAN         reduce using rule 53 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    STRING          reduce using rule 53 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    DOUBLE          reduce using rule 53 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    CHARACTER       reduce using rule 53 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    FLOAT           reduce using rule 53 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    VOID            reduce using rule 53 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    TRUE            reduce using rule 53 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    FALSE           reduce using rule 53 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    NULL            reduce using rule 53 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    NUMBER          reduce using rule 53 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    CHAR            reduce using rule 53 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    CLOSEAKOL       reduce using rule 53 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    RETURN          reduce using rule 53 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT .)

  ! ELSE            [ reduce using rule 53 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT .) ]


state 153

    (54) STATEMENT -> FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT .

    STATIC          reduce using rule 54 (STATEMENT -> FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    OPENAKOL        reduce using rule 54 (STATEMENT -> FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    IF              reduce using rule 54 (STATEMENT -> FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    FOR             reduce using rule 54 (STATEMENT -> FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    WHILE           reduce using rule 54 (STATEMENT -> FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    PUBLIC          reduce using rule 54 (STATEMENT -> FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    PRIVATE         reduce using rule 54 (STATEMENT -> FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    THIS            reduce using rule 54 (STATEMENT -> FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    ID              reduce using rule 54 (STATEMENT -> FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    INT             reduce using rule 54 (STATEMENT -> FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    BOOLEAN         reduce using rule 54 (STATEMENT -> FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    STRING          reduce using rule 54 (STATEMENT -> FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    DOUBLE          reduce using rule 54 (STATEMENT -> FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    CHARACTER       reduce using rule 54 (STATEMENT -> FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    FLOAT           reduce using rule 54 (STATEMENT -> FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    VOID            reduce using rule 54 (STATEMENT -> FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    TRUE            reduce using rule 54 (STATEMENT -> FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    FALSE           reduce using rule 54 (STATEMENT -> FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    NULL            reduce using rule 54 (STATEMENT -> FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    NUMBER          reduce using rule 54 (STATEMENT -> FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    CHAR            reduce using rule 54 (STATEMENT -> FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    CLOSEAKOL       reduce using rule 54 (STATEMENT -> FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    ELSE            reduce using rule 54 (STATEMENT -> FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    RETURN          reduce using rule 54 (STATEMENT -> FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT .)


state 154

    (55) STATEMENT -> WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT .

    STATIC          reduce using rule 55 (STATEMENT -> WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    OPENAKOL        reduce using rule 55 (STATEMENT -> WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    IF              reduce using rule 55 (STATEMENT -> WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    FOR             reduce using rule 55 (STATEMENT -> WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    WHILE           reduce using rule 55 (STATEMENT -> WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    PUBLIC          reduce using rule 55 (STATEMENT -> WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    PRIVATE         reduce using rule 55 (STATEMENT -> WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    THIS            reduce using rule 55 (STATEMENT -> WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    ID              reduce using rule 55 (STATEMENT -> WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    INT             reduce using rule 55 (STATEMENT -> WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    BOOLEAN         reduce using rule 55 (STATEMENT -> WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    STRING          reduce using rule 55 (STATEMENT -> WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    DOUBLE          reduce using rule 55 (STATEMENT -> WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    CHARACTER       reduce using rule 55 (STATEMENT -> WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    FLOAT           reduce using rule 55 (STATEMENT -> WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    VOID            reduce using rule 55 (STATEMENT -> WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    TRUE            reduce using rule 55 (STATEMENT -> WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    FALSE           reduce using rule 55 (STATEMENT -> WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    NULL            reduce using rule 55 (STATEMENT -> WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    NUMBER          reduce using rule 55 (STATEMENT -> WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    CHAR            reduce using rule 55 (STATEMENT -> WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    CLOSEAKOL       reduce using rule 55 (STATEMENT -> WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    ELSE            reduce using rule 55 (STATEMENT -> WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    RETURN          reduce using rule 55 (STATEMENT -> WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT .)


state 155

    (79) EXPRESSION6 -> ID ASSIGN ID OP ID OP . ID SEMI

    ID              shift and go to state 169


state 156

    (64) EXPRESSION1 -> ID ASSIGN ID OP ID SEMI .

    STATIC          reduce using rule 64 (EXPRESSION1 -> ID ASSIGN ID OP ID SEMI .)
    OPENAKOL        reduce using rule 64 (EXPRESSION1 -> ID ASSIGN ID OP ID SEMI .)
    IF              reduce using rule 64 (EXPRESSION1 -> ID ASSIGN ID OP ID SEMI .)
    FOR             reduce using rule 64 (EXPRESSION1 -> ID ASSIGN ID OP ID SEMI .)
    WHILE           reduce using rule 64 (EXPRESSION1 -> ID ASSIGN ID OP ID SEMI .)
    PUBLIC          reduce using rule 64 (EXPRESSION1 -> ID ASSIGN ID OP ID SEMI .)
    PRIVATE         reduce using rule 64 (EXPRESSION1 -> ID ASSIGN ID OP ID SEMI .)
    THIS            reduce using rule 64 (EXPRESSION1 -> ID ASSIGN ID OP ID SEMI .)
    ID              reduce using rule 64 (EXPRESSION1 -> ID ASSIGN ID OP ID SEMI .)
    INT             reduce using rule 64 (EXPRESSION1 -> ID ASSIGN ID OP ID SEMI .)
    BOOLEAN         reduce using rule 64 (EXPRESSION1 -> ID ASSIGN ID OP ID SEMI .)
    STRING          reduce using rule 64 (EXPRESSION1 -> ID ASSIGN ID OP ID SEMI .)
    DOUBLE          reduce using rule 64 (EXPRESSION1 -> ID ASSIGN ID OP ID SEMI .)
    CHARACTER       reduce using rule 64 (EXPRESSION1 -> ID ASSIGN ID OP ID SEMI .)
    FLOAT           reduce using rule 64 (EXPRESSION1 -> ID ASSIGN ID OP ID SEMI .)
    VOID            reduce using rule 64 (EXPRESSION1 -> ID ASSIGN ID OP ID SEMI .)
    TRUE            reduce using rule 64 (EXPRESSION1 -> ID ASSIGN ID OP ID SEMI .)
    FALSE           reduce using rule 64 (EXPRESSION1 -> ID ASSIGN ID OP ID SEMI .)
    NULL            reduce using rule 64 (EXPRESSION1 -> ID ASSIGN ID OP ID SEMI .)
    NUMBER          reduce using rule 64 (EXPRESSION1 -> ID ASSIGN ID OP ID SEMI .)
    CHAR            reduce using rule 64 (EXPRESSION1 -> ID ASSIGN ID OP ID SEMI .)
    CLOSEAKOL       reduce using rule 64 (EXPRESSION1 -> ID ASSIGN ID OP ID SEMI .)
    CLOSEBRACKET    reduce using rule 64 (EXPRESSION1 -> ID ASSIGN ID OP ID SEMI .)
    SEMI            reduce using rule 64 (EXPRESSION1 -> ID ASSIGN ID OP ID SEMI .)
    COMMA           reduce using rule 64 (EXPRESSION1 -> ID ASSIGN ID OP ID SEMI .)
    CLOSEPAR        reduce using rule 64 (EXPRESSION1 -> ID ASSIGN ID OP ID SEMI .)
    LESSEQUAL       reduce using rule 64 (EXPRESSION1 -> ID ASSIGN ID OP ID SEMI .)
    ASSIGN          reduce using rule 64 (EXPRESSION1 -> ID ASSIGN ID OP ID SEMI .)
    EQUALS          reduce using rule 64 (EXPRESSION1 -> ID ASSIGN ID OP ID SEMI .)
    GREATEREQUAL    reduce using rule 64 (EXPRESSION1 -> ID ASSIGN ID OP ID SEMI .)
    GREATERTHAN     reduce using rule 64 (EXPRESSION1 -> ID ASSIGN ID OP ID SEMI .)
    LESSTHAN        reduce using rule 64 (EXPRESSION1 -> ID ASSIGN ID OP ID SEMI .)
    ADD             reduce using rule 64 (EXPRESSION1 -> ID ASSIGN ID OP ID SEMI .)
    MINUS           reduce using rule 64 (EXPRESSION1 -> ID ASSIGN ID OP ID SEMI .)
    MULT            reduce using rule 64 (EXPRESSION1 -> ID ASSIGN ID OP ID SEMI .)
    NOTEQUAL        reduce using rule 64 (EXPRESSION1 -> ID ASSIGN ID OP ID SEMI .)
    DIVIDE          reduce using rule 64 (EXPRESSION1 -> ID ASSIGN ID OP ID SEMI .)
    PEQUAL          reduce using rule 64 (EXPRESSION1 -> ID ASSIGN ID OP ID SEMI .)
    MEQUAL          reduce using rule 64 (EXPRESSION1 -> ID ASSIGN ID OP ID SEMI .)
    PLUSPLUS        reduce using rule 64 (EXPRESSION1 -> ID ASSIGN ID OP ID SEMI .)
    ELSE            reduce using rule 64 (EXPRESSION1 -> ID ASSIGN ID OP ID SEMI .)
    RETURN          reduce using rule 64 (EXPRESSION1 -> ID ASSIGN ID OP ID SEMI .)


state 157

    (10) METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL . B RETURN EXPRESSION SEMI CLOSEAKOL
    (12) METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL . B CLOSEAKOL
    (14) B -> . STATEMENT B
    (15) B -> . EMPTY
    (46) STATEMENT -> . OPENAKOL H CLOSEAKOL
    (47) STATEMENT -> . EXPRESSION
    (48) STATEMENT -> . REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI
    (49) STATEMENT -> . REFERENCE ASSIGN EXPRESSION SEMI
    (50) STATEMENT -> . REFERENCE OPENPAR CLOSEPAR SEMI
    (51) STATEMENT -> . REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI
    (52) STATEMENT -> . IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT
    (53) STATEMENT -> . IF OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (54) STATEMENT -> . FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (55) STATEMENT -> . WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (22) EMPTY -> .
    (58) EXPRESSION -> . EXPRESSION1
    (59) EXPRESSION -> . EXPRESSION2
    (60) EXPRESSION -> . EXPRESSION3
    (61) EXPRESSION -> . EXPRESSION4
    (62) EXPRESSION -> . EXPRESSION5
    (63) EXPRESSION -> . EXPRESSION6
    (42) REFERENCE -> . THIS G
    (43) REFERENCE -> . ID G
    (64) EXPRESSION1 -> . ID ASSIGN ID OP ID SEMI
    (65) EXPRESSION2 -> . TYPE ID ASSIGN ID OP ID SEMI
    (66) EXPRESSION3 -> . TYPE ID SEMI
    (67) EXPRESSION4 -> . TYPE ID ASSIGN VALUE SEMI
    (68) EXPRESSION5 -> . ID ASSIGN VALUE SEMI
    (73) EXPRESSION6 -> . TRUE
    (74) EXPRESSION6 -> . FALSE
    (75) EXPRESSION6 -> . NULL
    (76) EXPRESSION6 -> . ID
    (77) EXPRESSION6 -> . VALUE
    (78) EXPRESSION6 -> . TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI
    (79) EXPRESSION6 -> . ID ASSIGN ID OP ID OP ID SEMI
    (80) EXPRESSION6 -> . EMPTY
    (81) EXPRESSION6 -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I
    (23) TYPE -> . PRIMTYPE
    (24) TYPE -> . CLASSTYPE
    (25) TYPE -> . ARRTYPE
    (69) VALUE -> . VALUE1
    (70) VALUE -> . VALUE2
    (26) PRIMTYPE -> . INT
    (27) PRIMTYPE -> . BOOLEAN
    (28) PRIMTYPE -> . STRING
    (29) PRIMTYPE -> . DOUBLE
    (30) PRIMTYPE -> . CHARACTER
    (31) PRIMTYPE -> . FLOAT
    (32) PRIMTYPE -> . VOID
    (33) CLASSTYPE -> . ID
    (34) ARRTYPE -> . INT OPENBRACKET CLOSEBRACKET
    (35) ARRTYPE -> . CLASSTYPE OPENBRACKET CLOSEBRACKET
    (71) VALUE1 -> . NUMBER
    (72) VALUE2 -> . CHAR

  ! shift/reduce conflict for OPENAKOL resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for THIS resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for CHARACTER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    OPENAKOL        shift and go to state 10
    IF              shift and go to state 22
    FOR             shift and go to state 23
    WHILE           shift and go to state 24
    RETURN          reduce using rule 22 (EMPTY -> .)
    CLOSEAKOL       reduce using rule 22 (EMPTY -> .)
    THIS            shift and go to state 36
    ID              shift and go to state 59
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    NULL            shift and go to state 47
    INT             shift and go to state 37
    BOOLEAN         shift and go to state 38
    STRING          shift and go to state 39
    DOUBLE          shift and go to state 40
    CHARACTER       shift and go to state 41
    FLOAT           shift and go to state 42
    VOID            shift and go to state 43
    NUMBER          shift and go to state 48
    CHAR            shift and go to state 51

  ! OPENAKOL        [ reduce using rule 22 (EMPTY -> .) ]
  ! IF              [ reduce using rule 22 (EMPTY -> .) ]
  ! FOR             [ reduce using rule 22 (EMPTY -> .) ]
  ! WHILE           [ reduce using rule 22 (EMPTY -> .) ]
  ! THIS            [ reduce using rule 22 (EMPTY -> .) ]
  ! ID              [ reduce using rule 22 (EMPTY -> .) ]
  ! TRUE            [ reduce using rule 22 (EMPTY -> .) ]
  ! FALSE           [ reduce using rule 22 (EMPTY -> .) ]
  ! NULL            [ reduce using rule 22 (EMPTY -> .) ]
  ! INT             [ reduce using rule 22 (EMPTY -> .) ]
  ! BOOLEAN         [ reduce using rule 22 (EMPTY -> .) ]
  ! STRING          [ reduce using rule 22 (EMPTY -> .) ]
  ! DOUBLE          [ reduce using rule 22 (EMPTY -> .) ]
  ! CHARACTER       [ reduce using rule 22 (EMPTY -> .) ]
  ! FLOAT           [ reduce using rule 22 (EMPTY -> .) ]
  ! VOID            [ reduce using rule 22 (EMPTY -> .) ]
  ! NUMBER          [ reduce using rule 22 (EMPTY -> .) ]
  ! CHAR            [ reduce using rule 22 (EMPTY -> .) ]

    B                              shift and go to state 170
    EXPRESSION                     shift and go to state 17
    STATEMENT                      shift and go to state 159
    EMPTY                          shift and go to state 160
    REFERENCE                      shift and go to state 21
    EXPRESSION1                    shift and go to state 30
    EXPRESSION2                    shift and go to state 31
    EXPRESSION3                    shift and go to state 32
    EXPRESSION4                    shift and go to state 33
    EXPRESSION5                    shift and go to state 34
    EXPRESSION6                    shift and go to state 35
    TYPE                           shift and go to state 60
    VALUE                          shift and go to state 44
    PRIMTYPE                       shift and go to state 27
    CLASSTYPE                      shift and go to state 28
    ARRTYPE                        shift and go to state 29
    VALUE1                         shift and go to state 49
    VALUE2                         shift and go to state 50

state 158

    (11) METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B . RETURN EXPRESSION SEMI CLOSEAKOL
    (13) METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B . CLOSEAKOL

    RETURN          shift and go to state 171
    CLOSEAKOL       shift and go to state 172


state 159

    (14) B -> STATEMENT . B
    (14) B -> . STATEMENT B
    (15) B -> . EMPTY
    (46) STATEMENT -> . OPENAKOL H CLOSEAKOL
    (47) STATEMENT -> . EXPRESSION
    (48) STATEMENT -> . REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI
    (49) STATEMENT -> . REFERENCE ASSIGN EXPRESSION SEMI
    (50) STATEMENT -> . REFERENCE OPENPAR CLOSEPAR SEMI
    (51) STATEMENT -> . REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI
    (52) STATEMENT -> . IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT
    (53) STATEMENT -> . IF OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (54) STATEMENT -> . FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (55) STATEMENT -> . WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (22) EMPTY -> .
    (58) EXPRESSION -> . EXPRESSION1
    (59) EXPRESSION -> . EXPRESSION2
    (60) EXPRESSION -> . EXPRESSION3
    (61) EXPRESSION -> . EXPRESSION4
    (62) EXPRESSION -> . EXPRESSION5
    (63) EXPRESSION -> . EXPRESSION6
    (42) REFERENCE -> . THIS G
    (43) REFERENCE -> . ID G
    (64) EXPRESSION1 -> . ID ASSIGN ID OP ID SEMI
    (65) EXPRESSION2 -> . TYPE ID ASSIGN ID OP ID SEMI
    (66) EXPRESSION3 -> . TYPE ID SEMI
    (67) EXPRESSION4 -> . TYPE ID ASSIGN VALUE SEMI
    (68) EXPRESSION5 -> . ID ASSIGN VALUE SEMI
    (73) EXPRESSION6 -> . TRUE
    (74) EXPRESSION6 -> . FALSE
    (75) EXPRESSION6 -> . NULL
    (76) EXPRESSION6 -> . ID
    (77) EXPRESSION6 -> . VALUE
    (78) EXPRESSION6 -> . TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI
    (79) EXPRESSION6 -> . ID ASSIGN ID OP ID OP ID SEMI
    (80) EXPRESSION6 -> . EMPTY
    (81) EXPRESSION6 -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I
    (23) TYPE -> . PRIMTYPE
    (24) TYPE -> . CLASSTYPE
    (25) TYPE -> . ARRTYPE
    (69) VALUE -> . VALUE1
    (70) VALUE -> . VALUE2
    (26) PRIMTYPE -> . INT
    (27) PRIMTYPE -> . BOOLEAN
    (28) PRIMTYPE -> . STRING
    (29) PRIMTYPE -> . DOUBLE
    (30) PRIMTYPE -> . CHARACTER
    (31) PRIMTYPE -> . FLOAT
    (32) PRIMTYPE -> . VOID
    (33) CLASSTYPE -> . ID
    (34) ARRTYPE -> . INT OPENBRACKET CLOSEBRACKET
    (35) ARRTYPE -> . CLASSTYPE OPENBRACKET CLOSEBRACKET
    (71) VALUE1 -> . NUMBER
    (72) VALUE2 -> . CHAR

  ! shift/reduce conflict for OPENAKOL resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for THIS resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for CHARACTER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    OPENAKOL        shift and go to state 10
    IF              shift and go to state 22
    FOR             shift and go to state 23
    WHILE           shift and go to state 24
    RETURN          reduce using rule 22 (EMPTY -> .)
    CLOSEAKOL       reduce using rule 22 (EMPTY -> .)
    THIS            shift and go to state 36
    ID              shift and go to state 59
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    NULL            shift and go to state 47
    INT             shift and go to state 37
    BOOLEAN         shift and go to state 38
    STRING          shift and go to state 39
    DOUBLE          shift and go to state 40
    CHARACTER       shift and go to state 41
    FLOAT           shift and go to state 42
    VOID            shift and go to state 43
    NUMBER          shift and go to state 48
    CHAR            shift and go to state 51

  ! OPENAKOL        [ reduce using rule 22 (EMPTY -> .) ]
  ! IF              [ reduce using rule 22 (EMPTY -> .) ]
  ! FOR             [ reduce using rule 22 (EMPTY -> .) ]
  ! WHILE           [ reduce using rule 22 (EMPTY -> .) ]
  ! THIS            [ reduce using rule 22 (EMPTY -> .) ]
  ! ID              [ reduce using rule 22 (EMPTY -> .) ]
  ! TRUE            [ reduce using rule 22 (EMPTY -> .) ]
  ! FALSE           [ reduce using rule 22 (EMPTY -> .) ]
  ! NULL            [ reduce using rule 22 (EMPTY -> .) ]
  ! INT             [ reduce using rule 22 (EMPTY -> .) ]
  ! BOOLEAN         [ reduce using rule 22 (EMPTY -> .) ]
  ! STRING          [ reduce using rule 22 (EMPTY -> .) ]
  ! DOUBLE          [ reduce using rule 22 (EMPTY -> .) ]
  ! CHARACTER       [ reduce using rule 22 (EMPTY -> .) ]
  ! FLOAT           [ reduce using rule 22 (EMPTY -> .) ]
  ! VOID            [ reduce using rule 22 (EMPTY -> .) ]
  ! NUMBER          [ reduce using rule 22 (EMPTY -> .) ]
  ! CHAR            [ reduce using rule 22 (EMPTY -> .) ]

    STATEMENT                      shift and go to state 159
    B                              shift and go to state 173
    EMPTY                          shift and go to state 160
    EXPRESSION                     shift and go to state 17
    REFERENCE                      shift and go to state 21
    EXPRESSION1                    shift and go to state 30
    EXPRESSION2                    shift and go to state 31
    EXPRESSION3                    shift and go to state 32
    EXPRESSION4                    shift and go to state 33
    EXPRESSION5                    shift and go to state 34
    EXPRESSION6                    shift and go to state 35
    TYPE                           shift and go to state 60
    VALUE                          shift and go to state 44
    PRIMTYPE                       shift and go to state 27
    CLASSTYPE                      shift and go to state 28
    ARRTYPE                        shift and go to state 29
    VALUE1                         shift and go to state 49
    VALUE2                         shift and go to state 50

state 160

    (15) B -> EMPTY .
    (80) EXPRESSION6 -> EMPTY .

  ! reduce/reduce conflict for RETURN resolved using rule 15 (B -> EMPTY .)
  ! reduce/reduce conflict for CLOSEAKOL resolved using rule 15 (B -> EMPTY .)
    RETURN          reduce using rule 15 (B -> EMPTY .)
    CLOSEAKOL       reduce using rule 15 (B -> EMPTY .)
    OPENAKOL        reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    IF              reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    FOR             reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    WHILE           reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    THIS            reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    ID              reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    TRUE            reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    FALSE           reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    NULL            reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    INT             reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    BOOLEAN         reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    STRING          reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    DOUBLE          reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    CHARACTER       reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    FLOAT           reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    VOID            reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    NUMBER          reduce using rule 80 (EXPRESSION6 -> EMPTY .)
    CHAR            reduce using rule 80 (EXPRESSION6 -> EMPTY .)

  ! RETURN          [ reduce using rule 80 (EXPRESSION6 -> EMPTY .) ]
  ! CLOSEAKOL       [ reduce using rule 80 (EXPRESSION6 -> EMPTY .) ]


state 161

    (36) PARAMERERLIST -> TYPE ID D .

    CLOSEPAR        reduce using rule 36 (PARAMERERLIST -> TYPE ID D .)


state 162

    (37) D -> COMMA . TYPE ID D
    (23) TYPE -> . PRIMTYPE
    (24) TYPE -> . CLASSTYPE
    (25) TYPE -> . ARRTYPE
    (26) PRIMTYPE -> . INT
    (27) PRIMTYPE -> . BOOLEAN
    (28) PRIMTYPE -> . STRING
    (29) PRIMTYPE -> . DOUBLE
    (30) PRIMTYPE -> . CHARACTER
    (31) PRIMTYPE -> . FLOAT
    (32) PRIMTYPE -> . VOID
    (33) CLASSTYPE -> . ID
    (34) ARRTYPE -> . INT OPENBRACKET CLOSEBRACKET
    (35) ARRTYPE -> . CLASSTYPE OPENBRACKET CLOSEBRACKET

    INT             shift and go to state 37
    BOOLEAN         shift and go to state 38
    STRING          shift and go to state 39
    DOUBLE          shift and go to state 40
    CHARACTER       shift and go to state 41
    FLOAT           shift and go to state 42
    VOID            shift and go to state 43
    ID              shift and go to state 67

    TYPE                           shift and go to state 174
    PRIMTYPE                       shift and go to state 27
    CLASSTYPE                      shift and go to state 28
    ARRTYPE                        shift and go to state 29

state 163

    (38) D -> EMPTY .

    CLOSEPAR        reduce using rule 38 (D -> EMPTY .)


state 164

    (65) EXPRESSION2 -> TYPE ID ASSIGN ID OP ID . SEMI

    SEMI            shift and go to state 175


state 165

    (78) EXPRESSION6 -> TYPE ID ASSIGN EXPRESSION OP EXPRESSION . SEMI

    SEMI            shift and go to state 176


state 166

    (48) STATEMENT -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION . SEMI

    SEMI            shift and go to state 177


state 167

    (81) EXPRESSION6 -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP . REFERENCE SEMI I
    (42) REFERENCE -> . THIS G
    (43) REFERENCE -> . ID G

    THIS            shift and go to state 36
    ID              shift and go to state 149

    REFERENCE                      shift and go to state 178

state 168

    (52) STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE . STATEMENT
    (46) STATEMENT -> . OPENAKOL H CLOSEAKOL
    (47) STATEMENT -> . EXPRESSION
    (48) STATEMENT -> . REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI
    (49) STATEMENT -> . REFERENCE ASSIGN EXPRESSION SEMI
    (50) STATEMENT -> . REFERENCE OPENPAR CLOSEPAR SEMI
    (51) STATEMENT -> . REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI
    (52) STATEMENT -> . IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT
    (53) STATEMENT -> . IF OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (54) STATEMENT -> . FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (55) STATEMENT -> . WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (58) EXPRESSION -> . EXPRESSION1
    (59) EXPRESSION -> . EXPRESSION2
    (60) EXPRESSION -> . EXPRESSION3
    (61) EXPRESSION -> . EXPRESSION4
    (62) EXPRESSION -> . EXPRESSION5
    (63) EXPRESSION -> . EXPRESSION6
    (42) REFERENCE -> . THIS G
    (43) REFERENCE -> . ID G
    (64) EXPRESSION1 -> . ID ASSIGN ID OP ID SEMI
    (65) EXPRESSION2 -> . TYPE ID ASSIGN ID OP ID SEMI
    (66) EXPRESSION3 -> . TYPE ID SEMI
    (67) EXPRESSION4 -> . TYPE ID ASSIGN VALUE SEMI
    (68) EXPRESSION5 -> . ID ASSIGN VALUE SEMI
    (73) EXPRESSION6 -> . TRUE
    (74) EXPRESSION6 -> . FALSE
    (75) EXPRESSION6 -> . NULL
    (76) EXPRESSION6 -> . ID
    (77) EXPRESSION6 -> . VALUE
    (78) EXPRESSION6 -> . TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI
    (79) EXPRESSION6 -> . ID ASSIGN ID OP ID OP ID SEMI
    (80) EXPRESSION6 -> . EMPTY
    (81) EXPRESSION6 -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I
    (23) TYPE -> . PRIMTYPE
    (24) TYPE -> . CLASSTYPE
    (25) TYPE -> . ARRTYPE
    (69) VALUE -> . VALUE1
    (70) VALUE -> . VALUE2
    (22) EMPTY -> .
    (26) PRIMTYPE -> . INT
    (27) PRIMTYPE -> . BOOLEAN
    (28) PRIMTYPE -> . STRING
    (29) PRIMTYPE -> . DOUBLE
    (30) PRIMTYPE -> . CHARACTER
    (31) PRIMTYPE -> . FLOAT
    (32) PRIMTYPE -> . VOID
    (33) CLASSTYPE -> . ID
    (34) ARRTYPE -> . INT OPENBRACKET CLOSEBRACKET
    (35) ARRTYPE -> . CLASSTYPE OPENBRACKET CLOSEBRACKET
    (71) VALUE1 -> . NUMBER
    (72) VALUE2 -> . CHAR

  ! shift/reduce conflict for OPENAKOL resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for THIS resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for CHARACTER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    OPENAKOL        shift and go to state 10
    IF              shift and go to state 22
    FOR             shift and go to state 23
    WHILE           shift and go to state 24
    THIS            shift and go to state 36
    ID              shift and go to state 59
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    NULL            shift and go to state 47
    ELSE            reduce using rule 22 (EMPTY -> .)
    STATIC          reduce using rule 22 (EMPTY -> .)
    PUBLIC          reduce using rule 22 (EMPTY -> .)
    PRIVATE         reduce using rule 22 (EMPTY -> .)
    CLOSEAKOL       reduce using rule 22 (EMPTY -> .)
    RETURN          reduce using rule 22 (EMPTY -> .)
    INT             shift and go to state 37
    BOOLEAN         shift and go to state 38
    STRING          shift and go to state 39
    DOUBLE          shift and go to state 40
    CHARACTER       shift and go to state 41
    FLOAT           shift and go to state 42
    VOID            shift and go to state 43
    NUMBER          shift and go to state 48
    CHAR            shift and go to state 51

  ! OPENAKOL        [ reduce using rule 22 (EMPTY -> .) ]
  ! IF              [ reduce using rule 22 (EMPTY -> .) ]
  ! FOR             [ reduce using rule 22 (EMPTY -> .) ]
  ! WHILE           [ reduce using rule 22 (EMPTY -> .) ]
  ! THIS            [ reduce using rule 22 (EMPTY -> .) ]
  ! ID              [ reduce using rule 22 (EMPTY -> .) ]
  ! INT             [ reduce using rule 22 (EMPTY -> .) ]
  ! BOOLEAN         [ reduce using rule 22 (EMPTY -> .) ]
  ! STRING          [ reduce using rule 22 (EMPTY -> .) ]
  ! DOUBLE          [ reduce using rule 22 (EMPTY -> .) ]
  ! CHARACTER       [ reduce using rule 22 (EMPTY -> .) ]
  ! FLOAT           [ reduce using rule 22 (EMPTY -> .) ]
  ! VOID            [ reduce using rule 22 (EMPTY -> .) ]
  ! TRUE            [ reduce using rule 22 (EMPTY -> .) ]
  ! FALSE           [ reduce using rule 22 (EMPTY -> .) ]
  ! NULL            [ reduce using rule 22 (EMPTY -> .) ]
  ! NUMBER          [ reduce using rule 22 (EMPTY -> .) ]
  ! CHAR            [ reduce using rule 22 (EMPTY -> .) ]

    EXPRESSION                     shift and go to state 17
    STATEMENT                      shift and go to state 179
    REFERENCE                      shift and go to state 21
    EXPRESSION1                    shift and go to state 30
    EXPRESSION2                    shift and go to state 31
    EXPRESSION3                    shift and go to state 32
    EXPRESSION4                    shift and go to state 33
    EXPRESSION5                    shift and go to state 34
    EXPRESSION6                    shift and go to state 35
    TYPE                           shift and go to state 60
    VALUE                          shift and go to state 44
    EMPTY                          shift and go to state 92
    PRIMTYPE                       shift and go to state 27
    CLASSTYPE                      shift and go to state 28
    ARRTYPE                        shift and go to state 29
    VALUE1                         shift and go to state 49
    VALUE2                         shift and go to state 50

state 169

    (79) EXPRESSION6 -> ID ASSIGN ID OP ID OP ID . SEMI

    SEMI            shift and go to state 180


state 170

    (10) METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B . RETURN EXPRESSION SEMI CLOSEAKOL
    (12) METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B . CLOSEAKOL

    RETURN          shift and go to state 181
    CLOSEAKOL       shift and go to state 182


state 171

    (11) METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B RETURN . EXPRESSION SEMI CLOSEAKOL
    (58) EXPRESSION -> . EXPRESSION1
    (59) EXPRESSION -> . EXPRESSION2
    (60) EXPRESSION -> . EXPRESSION3
    (61) EXPRESSION -> . EXPRESSION4
    (62) EXPRESSION -> . EXPRESSION5
    (63) EXPRESSION -> . EXPRESSION6
    (64) EXPRESSION1 -> . ID ASSIGN ID OP ID SEMI
    (65) EXPRESSION2 -> . TYPE ID ASSIGN ID OP ID SEMI
    (66) EXPRESSION3 -> . TYPE ID SEMI
    (67) EXPRESSION4 -> . TYPE ID ASSIGN VALUE SEMI
    (68) EXPRESSION5 -> . ID ASSIGN VALUE SEMI
    (73) EXPRESSION6 -> . TRUE
    (74) EXPRESSION6 -> . FALSE
    (75) EXPRESSION6 -> . NULL
    (76) EXPRESSION6 -> . ID
    (77) EXPRESSION6 -> . VALUE
    (78) EXPRESSION6 -> . TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI
    (79) EXPRESSION6 -> . ID ASSIGN ID OP ID OP ID SEMI
    (80) EXPRESSION6 -> . EMPTY
    (81) EXPRESSION6 -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I
    (23) TYPE -> . PRIMTYPE
    (24) TYPE -> . CLASSTYPE
    (25) TYPE -> . ARRTYPE
    (69) VALUE -> . VALUE1
    (70) VALUE -> . VALUE2
    (22) EMPTY -> .
    (42) REFERENCE -> . THIS G
    (43) REFERENCE -> . ID G
    (26) PRIMTYPE -> . INT
    (27) PRIMTYPE -> . BOOLEAN
    (28) PRIMTYPE -> . STRING
    (29) PRIMTYPE -> . DOUBLE
    (30) PRIMTYPE -> . CHARACTER
    (31) PRIMTYPE -> . FLOAT
    (32) PRIMTYPE -> . VOID
    (33) CLASSTYPE -> . ID
    (34) ARRTYPE -> . INT OPENBRACKET CLOSEBRACKET
    (35) ARRTYPE -> . CLASSTYPE OPENBRACKET CLOSEBRACKET
    (71) VALUE1 -> . NUMBER
    (72) VALUE2 -> . CHAR

    ID              shift and go to state 91
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    NULL            shift and go to state 47
    SEMI            reduce using rule 22 (EMPTY -> .)
    THIS            shift and go to state 36
    INT             shift and go to state 37
    BOOLEAN         shift and go to state 38
    STRING          shift and go to state 39
    DOUBLE          shift and go to state 40
    CHARACTER       shift and go to state 41
    FLOAT           shift and go to state 42
    VOID            shift and go to state 43
    NUMBER          shift and go to state 48
    CHAR            shift and go to state 51

    EXPRESSION                     shift and go to state 183
    EXPRESSION1                    shift and go to state 30
    EXPRESSION2                    shift and go to state 31
    EXPRESSION3                    shift and go to state 32
    EXPRESSION4                    shift and go to state 33
    EXPRESSION5                    shift and go to state 34
    EXPRESSION6                    shift and go to state 35
    TYPE                           shift and go to state 60
    VALUE                          shift and go to state 44
    EMPTY                          shift and go to state 92
    REFERENCE                      shift and go to state 89
    PRIMTYPE                       shift and go to state 27
    CLASSTYPE                      shift and go to state 28
    ARRTYPE                        shift and go to state 29
    VALUE1                         shift and go to state 49
    VALUE2                         shift and go to state 50

state 172

    (13) METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B CLOSEAKOL .

    STATIC          reduce using rule 13 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B CLOSEAKOL .)
    OPENAKOL        reduce using rule 13 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B CLOSEAKOL .)
    IF              reduce using rule 13 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B CLOSEAKOL .)
    FOR             reduce using rule 13 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B CLOSEAKOL .)
    WHILE           reduce using rule 13 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B CLOSEAKOL .)
    PUBLIC          reduce using rule 13 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B CLOSEAKOL .)
    PRIVATE         reduce using rule 13 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B CLOSEAKOL .)
    THIS            reduce using rule 13 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B CLOSEAKOL .)
    ID              reduce using rule 13 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B CLOSEAKOL .)
    INT             reduce using rule 13 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B CLOSEAKOL .)
    BOOLEAN         reduce using rule 13 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B CLOSEAKOL .)
    STRING          reduce using rule 13 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B CLOSEAKOL .)
    DOUBLE          reduce using rule 13 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B CLOSEAKOL .)
    CHARACTER       reduce using rule 13 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B CLOSEAKOL .)
    FLOAT           reduce using rule 13 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B CLOSEAKOL .)
    VOID            reduce using rule 13 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B CLOSEAKOL .)
    TRUE            reduce using rule 13 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B CLOSEAKOL .)
    FALSE           reduce using rule 13 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B CLOSEAKOL .)
    NULL            reduce using rule 13 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B CLOSEAKOL .)
    NUMBER          reduce using rule 13 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B CLOSEAKOL .)
    CHAR            reduce using rule 13 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B CLOSEAKOL .)
    CLOSEAKOL       reduce using rule 13 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B CLOSEAKOL .)


state 173

    (14) B -> STATEMENT B .

    RETURN          reduce using rule 14 (B -> STATEMENT B .)
    CLOSEAKOL       reduce using rule 14 (B -> STATEMENT B .)


state 174

    (37) D -> COMMA TYPE . ID D

    ID              shift and go to state 184


state 175

    (65) EXPRESSION2 -> TYPE ID ASSIGN ID OP ID SEMI .

    STATIC          reduce using rule 65 (EXPRESSION2 -> TYPE ID ASSIGN ID OP ID SEMI .)
    OPENAKOL        reduce using rule 65 (EXPRESSION2 -> TYPE ID ASSIGN ID OP ID SEMI .)
    IF              reduce using rule 65 (EXPRESSION2 -> TYPE ID ASSIGN ID OP ID SEMI .)
    FOR             reduce using rule 65 (EXPRESSION2 -> TYPE ID ASSIGN ID OP ID SEMI .)
    WHILE           reduce using rule 65 (EXPRESSION2 -> TYPE ID ASSIGN ID OP ID SEMI .)
    PUBLIC          reduce using rule 65 (EXPRESSION2 -> TYPE ID ASSIGN ID OP ID SEMI .)
    PRIVATE         reduce using rule 65 (EXPRESSION2 -> TYPE ID ASSIGN ID OP ID SEMI .)
    THIS            reduce using rule 65 (EXPRESSION2 -> TYPE ID ASSIGN ID OP ID SEMI .)
    ID              reduce using rule 65 (EXPRESSION2 -> TYPE ID ASSIGN ID OP ID SEMI .)
    INT             reduce using rule 65 (EXPRESSION2 -> TYPE ID ASSIGN ID OP ID SEMI .)
    BOOLEAN         reduce using rule 65 (EXPRESSION2 -> TYPE ID ASSIGN ID OP ID SEMI .)
    STRING          reduce using rule 65 (EXPRESSION2 -> TYPE ID ASSIGN ID OP ID SEMI .)
    DOUBLE          reduce using rule 65 (EXPRESSION2 -> TYPE ID ASSIGN ID OP ID SEMI .)
    CHARACTER       reduce using rule 65 (EXPRESSION2 -> TYPE ID ASSIGN ID OP ID SEMI .)
    FLOAT           reduce using rule 65 (EXPRESSION2 -> TYPE ID ASSIGN ID OP ID SEMI .)
    VOID            reduce using rule 65 (EXPRESSION2 -> TYPE ID ASSIGN ID OP ID SEMI .)
    TRUE            reduce using rule 65 (EXPRESSION2 -> TYPE ID ASSIGN ID OP ID SEMI .)
    FALSE           reduce using rule 65 (EXPRESSION2 -> TYPE ID ASSIGN ID OP ID SEMI .)
    NULL            reduce using rule 65 (EXPRESSION2 -> TYPE ID ASSIGN ID OP ID SEMI .)
    NUMBER          reduce using rule 65 (EXPRESSION2 -> TYPE ID ASSIGN ID OP ID SEMI .)
    CHAR            reduce using rule 65 (EXPRESSION2 -> TYPE ID ASSIGN ID OP ID SEMI .)
    CLOSEAKOL       reduce using rule 65 (EXPRESSION2 -> TYPE ID ASSIGN ID OP ID SEMI .)
    CLOSEBRACKET    reduce using rule 65 (EXPRESSION2 -> TYPE ID ASSIGN ID OP ID SEMI .)
    SEMI            reduce using rule 65 (EXPRESSION2 -> TYPE ID ASSIGN ID OP ID SEMI .)
    COMMA           reduce using rule 65 (EXPRESSION2 -> TYPE ID ASSIGN ID OP ID SEMI .)
    CLOSEPAR        reduce using rule 65 (EXPRESSION2 -> TYPE ID ASSIGN ID OP ID SEMI .)
    LESSEQUAL       reduce using rule 65 (EXPRESSION2 -> TYPE ID ASSIGN ID OP ID SEMI .)
    ASSIGN          reduce using rule 65 (EXPRESSION2 -> TYPE ID ASSIGN ID OP ID SEMI .)
    EQUALS          reduce using rule 65 (EXPRESSION2 -> TYPE ID ASSIGN ID OP ID SEMI .)
    GREATEREQUAL    reduce using rule 65 (EXPRESSION2 -> TYPE ID ASSIGN ID OP ID SEMI .)
    GREATERTHAN     reduce using rule 65 (EXPRESSION2 -> TYPE ID ASSIGN ID OP ID SEMI .)
    LESSTHAN        reduce using rule 65 (EXPRESSION2 -> TYPE ID ASSIGN ID OP ID SEMI .)
    ADD             reduce using rule 65 (EXPRESSION2 -> TYPE ID ASSIGN ID OP ID SEMI .)
    MINUS           reduce using rule 65 (EXPRESSION2 -> TYPE ID ASSIGN ID OP ID SEMI .)
    MULT            reduce using rule 65 (EXPRESSION2 -> TYPE ID ASSIGN ID OP ID SEMI .)
    NOTEQUAL        reduce using rule 65 (EXPRESSION2 -> TYPE ID ASSIGN ID OP ID SEMI .)
    DIVIDE          reduce using rule 65 (EXPRESSION2 -> TYPE ID ASSIGN ID OP ID SEMI .)
    PEQUAL          reduce using rule 65 (EXPRESSION2 -> TYPE ID ASSIGN ID OP ID SEMI .)
    MEQUAL          reduce using rule 65 (EXPRESSION2 -> TYPE ID ASSIGN ID OP ID SEMI .)
    PLUSPLUS        reduce using rule 65 (EXPRESSION2 -> TYPE ID ASSIGN ID OP ID SEMI .)
    ELSE            reduce using rule 65 (EXPRESSION2 -> TYPE ID ASSIGN ID OP ID SEMI .)
    RETURN          reduce using rule 65 (EXPRESSION2 -> TYPE ID ASSIGN ID OP ID SEMI .)


state 176

    (78) EXPRESSION6 -> TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI .

    STATIC          reduce using rule 78 (EXPRESSION6 -> TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI .)
    OPENAKOL        reduce using rule 78 (EXPRESSION6 -> TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI .)
    IF              reduce using rule 78 (EXPRESSION6 -> TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI .)
    FOR             reduce using rule 78 (EXPRESSION6 -> TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI .)
    WHILE           reduce using rule 78 (EXPRESSION6 -> TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI .)
    PUBLIC          reduce using rule 78 (EXPRESSION6 -> TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI .)
    PRIVATE         reduce using rule 78 (EXPRESSION6 -> TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI .)
    THIS            reduce using rule 78 (EXPRESSION6 -> TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI .)
    ID              reduce using rule 78 (EXPRESSION6 -> TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI .)
    INT             reduce using rule 78 (EXPRESSION6 -> TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI .)
    BOOLEAN         reduce using rule 78 (EXPRESSION6 -> TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI .)
    STRING          reduce using rule 78 (EXPRESSION6 -> TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI .)
    DOUBLE          reduce using rule 78 (EXPRESSION6 -> TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI .)
    CHARACTER       reduce using rule 78 (EXPRESSION6 -> TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI .)
    FLOAT           reduce using rule 78 (EXPRESSION6 -> TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI .)
    VOID            reduce using rule 78 (EXPRESSION6 -> TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI .)
    TRUE            reduce using rule 78 (EXPRESSION6 -> TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI .)
    FALSE           reduce using rule 78 (EXPRESSION6 -> TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI .)
    NULL            reduce using rule 78 (EXPRESSION6 -> TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI .)
    NUMBER          reduce using rule 78 (EXPRESSION6 -> TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI .)
    CHAR            reduce using rule 78 (EXPRESSION6 -> TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI .)
    CLOSEAKOL       reduce using rule 78 (EXPRESSION6 -> TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI .)
    CLOSEBRACKET    reduce using rule 78 (EXPRESSION6 -> TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI .)
    SEMI            reduce using rule 78 (EXPRESSION6 -> TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI .)
    COMMA           reduce using rule 78 (EXPRESSION6 -> TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI .)
    CLOSEPAR        reduce using rule 78 (EXPRESSION6 -> TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI .)
    LESSEQUAL       reduce using rule 78 (EXPRESSION6 -> TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI .)
    ASSIGN          reduce using rule 78 (EXPRESSION6 -> TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI .)
    EQUALS          reduce using rule 78 (EXPRESSION6 -> TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI .)
    GREATEREQUAL    reduce using rule 78 (EXPRESSION6 -> TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI .)
    GREATERTHAN     reduce using rule 78 (EXPRESSION6 -> TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI .)
    LESSTHAN        reduce using rule 78 (EXPRESSION6 -> TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI .)
    ADD             reduce using rule 78 (EXPRESSION6 -> TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI .)
    MINUS           reduce using rule 78 (EXPRESSION6 -> TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI .)
    MULT            reduce using rule 78 (EXPRESSION6 -> TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI .)
    NOTEQUAL        reduce using rule 78 (EXPRESSION6 -> TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI .)
    DIVIDE          reduce using rule 78 (EXPRESSION6 -> TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI .)
    PEQUAL          reduce using rule 78 (EXPRESSION6 -> TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI .)
    MEQUAL          reduce using rule 78 (EXPRESSION6 -> TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI .)
    PLUSPLUS        reduce using rule 78 (EXPRESSION6 -> TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI .)
    ELSE            reduce using rule 78 (EXPRESSION6 -> TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI .)
    RETURN          reduce using rule 78 (EXPRESSION6 -> TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI .)


state 177

    (48) STATEMENT -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI .

    STATIC          reduce using rule 48 (STATEMENT -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI .)
    OPENAKOL        reduce using rule 48 (STATEMENT -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI .)
    IF              reduce using rule 48 (STATEMENT -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI .)
    FOR             reduce using rule 48 (STATEMENT -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI .)
    WHILE           reduce using rule 48 (STATEMENT -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI .)
    PUBLIC          reduce using rule 48 (STATEMENT -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI .)
    PRIVATE         reduce using rule 48 (STATEMENT -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI .)
    THIS            reduce using rule 48 (STATEMENT -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI .)
    ID              reduce using rule 48 (STATEMENT -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI .)
    INT             reduce using rule 48 (STATEMENT -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI .)
    BOOLEAN         reduce using rule 48 (STATEMENT -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI .)
    STRING          reduce using rule 48 (STATEMENT -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI .)
    DOUBLE          reduce using rule 48 (STATEMENT -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI .)
    CHARACTER       reduce using rule 48 (STATEMENT -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI .)
    FLOAT           reduce using rule 48 (STATEMENT -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI .)
    VOID            reduce using rule 48 (STATEMENT -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI .)
    TRUE            reduce using rule 48 (STATEMENT -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI .)
    FALSE           reduce using rule 48 (STATEMENT -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI .)
    NULL            reduce using rule 48 (STATEMENT -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI .)
    NUMBER          reduce using rule 48 (STATEMENT -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI .)
    CHAR            reduce using rule 48 (STATEMENT -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI .)
    CLOSEAKOL       reduce using rule 48 (STATEMENT -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI .)
    ELSE            reduce using rule 48 (STATEMENT -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI .)
    RETURN          reduce using rule 48 (STATEMENT -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI .)


state 178

    (81) EXPRESSION6 -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE . SEMI I

    SEMI            shift and go to state 185


state 179

    (52) STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT .

    STATIC          reduce using rule 52 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT .)
    OPENAKOL        reduce using rule 52 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT .)
    IF              reduce using rule 52 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT .)
    FOR             reduce using rule 52 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT .)
    WHILE           reduce using rule 52 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT .)
    PUBLIC          reduce using rule 52 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT .)
    PRIVATE         reduce using rule 52 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT .)
    THIS            reduce using rule 52 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT .)
    ID              reduce using rule 52 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT .)
    INT             reduce using rule 52 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT .)
    BOOLEAN         reduce using rule 52 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT .)
    STRING          reduce using rule 52 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT .)
    DOUBLE          reduce using rule 52 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT .)
    CHARACTER       reduce using rule 52 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT .)
    FLOAT           reduce using rule 52 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT .)
    VOID            reduce using rule 52 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT .)
    TRUE            reduce using rule 52 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT .)
    FALSE           reduce using rule 52 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT .)
    NULL            reduce using rule 52 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT .)
    NUMBER          reduce using rule 52 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT .)
    CHAR            reduce using rule 52 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT .)
    CLOSEAKOL       reduce using rule 52 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT .)
    ELSE            reduce using rule 52 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT .)
    RETURN          reduce using rule 52 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT .)


state 180

    (79) EXPRESSION6 -> ID ASSIGN ID OP ID OP ID SEMI .

    STATIC          reduce using rule 79 (EXPRESSION6 -> ID ASSIGN ID OP ID OP ID SEMI .)
    OPENAKOL        reduce using rule 79 (EXPRESSION6 -> ID ASSIGN ID OP ID OP ID SEMI .)
    IF              reduce using rule 79 (EXPRESSION6 -> ID ASSIGN ID OP ID OP ID SEMI .)
    FOR             reduce using rule 79 (EXPRESSION6 -> ID ASSIGN ID OP ID OP ID SEMI .)
    WHILE           reduce using rule 79 (EXPRESSION6 -> ID ASSIGN ID OP ID OP ID SEMI .)
    PUBLIC          reduce using rule 79 (EXPRESSION6 -> ID ASSIGN ID OP ID OP ID SEMI .)
    PRIVATE         reduce using rule 79 (EXPRESSION6 -> ID ASSIGN ID OP ID OP ID SEMI .)
    THIS            reduce using rule 79 (EXPRESSION6 -> ID ASSIGN ID OP ID OP ID SEMI .)
    ID              reduce using rule 79 (EXPRESSION6 -> ID ASSIGN ID OP ID OP ID SEMI .)
    INT             reduce using rule 79 (EXPRESSION6 -> ID ASSIGN ID OP ID OP ID SEMI .)
    BOOLEAN         reduce using rule 79 (EXPRESSION6 -> ID ASSIGN ID OP ID OP ID SEMI .)
    STRING          reduce using rule 79 (EXPRESSION6 -> ID ASSIGN ID OP ID OP ID SEMI .)
    DOUBLE          reduce using rule 79 (EXPRESSION6 -> ID ASSIGN ID OP ID OP ID SEMI .)
    CHARACTER       reduce using rule 79 (EXPRESSION6 -> ID ASSIGN ID OP ID OP ID SEMI .)
    FLOAT           reduce using rule 79 (EXPRESSION6 -> ID ASSIGN ID OP ID OP ID SEMI .)
    VOID            reduce using rule 79 (EXPRESSION6 -> ID ASSIGN ID OP ID OP ID SEMI .)
    TRUE            reduce using rule 79 (EXPRESSION6 -> ID ASSIGN ID OP ID OP ID SEMI .)
    FALSE           reduce using rule 79 (EXPRESSION6 -> ID ASSIGN ID OP ID OP ID SEMI .)
    NULL            reduce using rule 79 (EXPRESSION6 -> ID ASSIGN ID OP ID OP ID SEMI .)
    NUMBER          reduce using rule 79 (EXPRESSION6 -> ID ASSIGN ID OP ID OP ID SEMI .)
    CHAR            reduce using rule 79 (EXPRESSION6 -> ID ASSIGN ID OP ID OP ID SEMI .)
    CLOSEAKOL       reduce using rule 79 (EXPRESSION6 -> ID ASSIGN ID OP ID OP ID SEMI .)
    CLOSEBRACKET    reduce using rule 79 (EXPRESSION6 -> ID ASSIGN ID OP ID OP ID SEMI .)
    SEMI            reduce using rule 79 (EXPRESSION6 -> ID ASSIGN ID OP ID OP ID SEMI .)
    COMMA           reduce using rule 79 (EXPRESSION6 -> ID ASSIGN ID OP ID OP ID SEMI .)
    CLOSEPAR        reduce using rule 79 (EXPRESSION6 -> ID ASSIGN ID OP ID OP ID SEMI .)
    LESSEQUAL       reduce using rule 79 (EXPRESSION6 -> ID ASSIGN ID OP ID OP ID SEMI .)
    ASSIGN          reduce using rule 79 (EXPRESSION6 -> ID ASSIGN ID OP ID OP ID SEMI .)
    EQUALS          reduce using rule 79 (EXPRESSION6 -> ID ASSIGN ID OP ID OP ID SEMI .)
    GREATEREQUAL    reduce using rule 79 (EXPRESSION6 -> ID ASSIGN ID OP ID OP ID SEMI .)
    GREATERTHAN     reduce using rule 79 (EXPRESSION6 -> ID ASSIGN ID OP ID OP ID SEMI .)
    LESSTHAN        reduce using rule 79 (EXPRESSION6 -> ID ASSIGN ID OP ID OP ID SEMI .)
    ADD             reduce using rule 79 (EXPRESSION6 -> ID ASSIGN ID OP ID OP ID SEMI .)
    MINUS           reduce using rule 79 (EXPRESSION6 -> ID ASSIGN ID OP ID OP ID SEMI .)
    MULT            reduce using rule 79 (EXPRESSION6 -> ID ASSIGN ID OP ID OP ID SEMI .)
    NOTEQUAL        reduce using rule 79 (EXPRESSION6 -> ID ASSIGN ID OP ID OP ID SEMI .)
    DIVIDE          reduce using rule 79 (EXPRESSION6 -> ID ASSIGN ID OP ID OP ID SEMI .)
    PEQUAL          reduce using rule 79 (EXPRESSION6 -> ID ASSIGN ID OP ID OP ID SEMI .)
    MEQUAL          reduce using rule 79 (EXPRESSION6 -> ID ASSIGN ID OP ID OP ID SEMI .)
    PLUSPLUS        reduce using rule 79 (EXPRESSION6 -> ID ASSIGN ID OP ID OP ID SEMI .)
    ELSE            reduce using rule 79 (EXPRESSION6 -> ID ASSIGN ID OP ID OP ID SEMI .)
    RETURN          reduce using rule 79 (EXPRESSION6 -> ID ASSIGN ID OP ID OP ID SEMI .)


state 181

    (10) METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B RETURN . EXPRESSION SEMI CLOSEAKOL
    (58) EXPRESSION -> . EXPRESSION1
    (59) EXPRESSION -> . EXPRESSION2
    (60) EXPRESSION -> . EXPRESSION3
    (61) EXPRESSION -> . EXPRESSION4
    (62) EXPRESSION -> . EXPRESSION5
    (63) EXPRESSION -> . EXPRESSION6
    (64) EXPRESSION1 -> . ID ASSIGN ID OP ID SEMI
    (65) EXPRESSION2 -> . TYPE ID ASSIGN ID OP ID SEMI
    (66) EXPRESSION3 -> . TYPE ID SEMI
    (67) EXPRESSION4 -> . TYPE ID ASSIGN VALUE SEMI
    (68) EXPRESSION5 -> . ID ASSIGN VALUE SEMI
    (73) EXPRESSION6 -> . TRUE
    (74) EXPRESSION6 -> . FALSE
    (75) EXPRESSION6 -> . NULL
    (76) EXPRESSION6 -> . ID
    (77) EXPRESSION6 -> . VALUE
    (78) EXPRESSION6 -> . TYPE ID ASSIGN EXPRESSION OP EXPRESSION SEMI
    (79) EXPRESSION6 -> . ID ASSIGN ID OP ID OP ID SEMI
    (80) EXPRESSION6 -> . EMPTY
    (81) EXPRESSION6 -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I
    (23) TYPE -> . PRIMTYPE
    (24) TYPE -> . CLASSTYPE
    (25) TYPE -> . ARRTYPE
    (69) VALUE -> . VALUE1
    (70) VALUE -> . VALUE2
    (22) EMPTY -> .
    (42) REFERENCE -> . THIS G
    (43) REFERENCE -> . ID G
    (26) PRIMTYPE -> . INT
    (27) PRIMTYPE -> . BOOLEAN
    (28) PRIMTYPE -> . STRING
    (29) PRIMTYPE -> . DOUBLE
    (30) PRIMTYPE -> . CHARACTER
    (31) PRIMTYPE -> . FLOAT
    (32) PRIMTYPE -> . VOID
    (33) CLASSTYPE -> . ID
    (34) ARRTYPE -> . INT OPENBRACKET CLOSEBRACKET
    (35) ARRTYPE -> . CLASSTYPE OPENBRACKET CLOSEBRACKET
    (71) VALUE1 -> . NUMBER
    (72) VALUE2 -> . CHAR

    ID              shift and go to state 91
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    NULL            shift and go to state 47
    SEMI            reduce using rule 22 (EMPTY -> .)
    THIS            shift and go to state 36
    INT             shift and go to state 37
    BOOLEAN         shift and go to state 38
    STRING          shift and go to state 39
    DOUBLE          shift and go to state 40
    CHARACTER       shift and go to state 41
    FLOAT           shift and go to state 42
    VOID            shift and go to state 43
    NUMBER          shift and go to state 48
    CHAR            shift and go to state 51

    EXPRESSION                     shift and go to state 186
    EXPRESSION1                    shift and go to state 30
    EXPRESSION2                    shift and go to state 31
    EXPRESSION3                    shift and go to state 32
    EXPRESSION4                    shift and go to state 33
    EXPRESSION5                    shift and go to state 34
    EXPRESSION6                    shift and go to state 35
    TYPE                           shift and go to state 60
    VALUE                          shift and go to state 44
    EMPTY                          shift and go to state 92
    REFERENCE                      shift and go to state 89
    PRIMTYPE                       shift and go to state 27
    CLASSTYPE                      shift and go to state 28
    ARRTYPE                        shift and go to state 29
    VALUE1                         shift and go to state 49
    VALUE2                         shift and go to state 50

state 182

    (12) METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B CLOSEAKOL .

    STATIC          reduce using rule 12 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B CLOSEAKOL .)
    OPENAKOL        reduce using rule 12 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B CLOSEAKOL .)
    IF              reduce using rule 12 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B CLOSEAKOL .)
    FOR             reduce using rule 12 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B CLOSEAKOL .)
    WHILE           reduce using rule 12 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B CLOSEAKOL .)
    PUBLIC          reduce using rule 12 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B CLOSEAKOL .)
    PRIVATE         reduce using rule 12 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B CLOSEAKOL .)
    THIS            reduce using rule 12 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B CLOSEAKOL .)
    ID              reduce using rule 12 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B CLOSEAKOL .)
    INT             reduce using rule 12 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B CLOSEAKOL .)
    BOOLEAN         reduce using rule 12 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B CLOSEAKOL .)
    STRING          reduce using rule 12 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B CLOSEAKOL .)
    DOUBLE          reduce using rule 12 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B CLOSEAKOL .)
    CHARACTER       reduce using rule 12 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B CLOSEAKOL .)
    FLOAT           reduce using rule 12 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B CLOSEAKOL .)
    VOID            reduce using rule 12 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B CLOSEAKOL .)
    TRUE            reduce using rule 12 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B CLOSEAKOL .)
    FALSE           reduce using rule 12 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B CLOSEAKOL .)
    NULL            reduce using rule 12 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B CLOSEAKOL .)
    NUMBER          reduce using rule 12 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B CLOSEAKOL .)
    CHAR            reduce using rule 12 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B CLOSEAKOL .)
    CLOSEAKOL       reduce using rule 12 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B CLOSEAKOL .)


state 183

    (11) METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B RETURN EXPRESSION . SEMI CLOSEAKOL

    SEMI            shift and go to state 187


state 184

    (37) D -> COMMA TYPE ID . D
    (37) D -> . COMMA TYPE ID D
    (38) D -> . EMPTY
    (22) EMPTY -> .

    COMMA           shift and go to state 162
    CLOSEPAR        reduce using rule 22 (EMPTY -> .)

    D                              shift and go to state 188
    EMPTY                          shift and go to state 163

state 185

    (81) EXPRESSION6 -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI . I
    (96) I -> . REFERENCE OP
    (97) I -> . REFERENCE OP NUMBER
    (98) I -> . REFERENCE OP REFERENCE
    (42) REFERENCE -> . THIS G
    (43) REFERENCE -> . ID G

    THIS            shift and go to state 36
    ID              shift and go to state 149

    REFERENCE                      shift and go to state 189
    I                              shift and go to state 190

state 186

    (10) METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B RETURN EXPRESSION . SEMI CLOSEAKOL

    SEMI            shift and go to state 191


state 187

    (11) METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI . CLOSEAKOL

    CLOSEAKOL       shift and go to state 192


state 188

    (37) D -> COMMA TYPE ID D .

    CLOSEPAR        reduce using rule 37 (D -> COMMA TYPE ID D .)


state 189

    (96) I -> REFERENCE . OP
    (97) I -> REFERENCE . OP NUMBER
    (98) I -> REFERENCE . OP REFERENCE
    (82) OP -> . LESSEQUAL
    (83) OP -> . ASSIGN
    (84) OP -> . EQUALS
    (85) OP -> . GREATEREQUAL
    (86) OP -> . GREATERTHAN
    (87) OP -> . LESSTHAN
    (88) OP -> . ADD
    (89) OP -> . MINUS
    (90) OP -> . MULT
    (91) OP -> . NOTEQUAL
    (92) OP -> . DIVIDE
    (93) OP -> . PEQUAL
    (94) OP -> . MEQUAL
    (95) OP -> . PLUSPLUS

    LESSEQUAL       shift and go to state 105
    ASSIGN          shift and go to state 103
    EQUALS          shift and go to state 106
    GREATEREQUAL    shift and go to state 107
    GREATERTHAN     shift and go to state 108
    LESSTHAN        shift and go to state 109
    ADD             shift and go to state 110
    MINUS           shift and go to state 111
    MULT            shift and go to state 112
    NOTEQUAL        shift and go to state 113
    DIVIDE          shift and go to state 114
    PEQUAL          shift and go to state 115
    MEQUAL          shift and go to state 116
    PLUSPLUS        shift and go to state 117

    OP                             shift and go to state 193

state 190

    (81) EXPRESSION6 -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .

    STATIC          reduce using rule 81 (EXPRESSION6 -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    OPENAKOL        reduce using rule 81 (EXPRESSION6 -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    IF              reduce using rule 81 (EXPRESSION6 -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    FOR             reduce using rule 81 (EXPRESSION6 -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    WHILE           reduce using rule 81 (EXPRESSION6 -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    PUBLIC          reduce using rule 81 (EXPRESSION6 -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    PRIVATE         reduce using rule 81 (EXPRESSION6 -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    THIS            reduce using rule 81 (EXPRESSION6 -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    ID              reduce using rule 81 (EXPRESSION6 -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    INT             reduce using rule 81 (EXPRESSION6 -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    BOOLEAN         reduce using rule 81 (EXPRESSION6 -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    STRING          reduce using rule 81 (EXPRESSION6 -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    DOUBLE          reduce using rule 81 (EXPRESSION6 -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    CHARACTER       reduce using rule 81 (EXPRESSION6 -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    FLOAT           reduce using rule 81 (EXPRESSION6 -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    VOID            reduce using rule 81 (EXPRESSION6 -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    TRUE            reduce using rule 81 (EXPRESSION6 -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    FALSE           reduce using rule 81 (EXPRESSION6 -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    NULL            reduce using rule 81 (EXPRESSION6 -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    NUMBER          reduce using rule 81 (EXPRESSION6 -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    CHAR            reduce using rule 81 (EXPRESSION6 -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    CLOSEAKOL       reduce using rule 81 (EXPRESSION6 -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    CLOSEBRACKET    reduce using rule 81 (EXPRESSION6 -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    SEMI            reduce using rule 81 (EXPRESSION6 -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    COMMA           reduce using rule 81 (EXPRESSION6 -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    CLOSEPAR        reduce using rule 81 (EXPRESSION6 -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    LESSEQUAL       reduce using rule 81 (EXPRESSION6 -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    ASSIGN          reduce using rule 81 (EXPRESSION6 -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    EQUALS          reduce using rule 81 (EXPRESSION6 -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    GREATEREQUAL    reduce using rule 81 (EXPRESSION6 -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    GREATERTHAN     reduce using rule 81 (EXPRESSION6 -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    LESSTHAN        reduce using rule 81 (EXPRESSION6 -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    ADD             reduce using rule 81 (EXPRESSION6 -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    MINUS           reduce using rule 81 (EXPRESSION6 -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    MULT            reduce using rule 81 (EXPRESSION6 -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    NOTEQUAL        reduce using rule 81 (EXPRESSION6 -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    DIVIDE          reduce using rule 81 (EXPRESSION6 -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    PEQUAL          reduce using rule 81 (EXPRESSION6 -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    MEQUAL          reduce using rule 81 (EXPRESSION6 -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    PLUSPLUS        reduce using rule 81 (EXPRESSION6 -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    ELSE            reduce using rule 81 (EXPRESSION6 -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    RETURN          reduce using rule 81 (EXPRESSION6 -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)


state 191

    (10) METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI . CLOSEAKOL

    CLOSEAKOL       shift and go to state 194


state 192

    (11) METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .

    STATIC          reduce using rule 11 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    OPENAKOL        reduce using rule 11 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    IF              reduce using rule 11 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    FOR             reduce using rule 11 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    WHILE           reduce using rule 11 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    PUBLIC          reduce using rule 11 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    PRIVATE         reduce using rule 11 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    THIS            reduce using rule 11 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    ID              reduce using rule 11 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    INT             reduce using rule 11 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    BOOLEAN         reduce using rule 11 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    STRING          reduce using rule 11 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    DOUBLE          reduce using rule 11 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    CHARACTER       reduce using rule 11 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    FLOAT           reduce using rule 11 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    VOID            reduce using rule 11 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    TRUE            reduce using rule 11 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    FALSE           reduce using rule 11 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    NULL            reduce using rule 11 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    NUMBER          reduce using rule 11 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    CHAR            reduce using rule 11 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    CLOSEAKOL       reduce using rule 11 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)


state 193

    (96) I -> REFERENCE OP .
    (97) I -> REFERENCE OP . NUMBER
    (98) I -> REFERENCE OP . REFERENCE
    (42) REFERENCE -> . THIS G
    (43) REFERENCE -> . ID G

  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for THIS resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    STATIC          reduce using rule 96 (I -> REFERENCE OP .)
    OPENAKOL        reduce using rule 96 (I -> REFERENCE OP .)
    IF              reduce using rule 96 (I -> REFERENCE OP .)
    FOR             reduce using rule 96 (I -> REFERENCE OP .)
    WHILE           reduce using rule 96 (I -> REFERENCE OP .)
    PUBLIC          reduce using rule 96 (I -> REFERENCE OP .)
    PRIVATE         reduce using rule 96 (I -> REFERENCE OP .)
    INT             reduce using rule 96 (I -> REFERENCE OP .)
    BOOLEAN         reduce using rule 96 (I -> REFERENCE OP .)
    STRING          reduce using rule 96 (I -> REFERENCE OP .)
    DOUBLE          reduce using rule 96 (I -> REFERENCE OP .)
    CHARACTER       reduce using rule 96 (I -> REFERENCE OP .)
    FLOAT           reduce using rule 96 (I -> REFERENCE OP .)
    VOID            reduce using rule 96 (I -> REFERENCE OP .)
    TRUE            reduce using rule 96 (I -> REFERENCE OP .)
    FALSE           reduce using rule 96 (I -> REFERENCE OP .)
    NULL            reduce using rule 96 (I -> REFERENCE OP .)
    CHAR            reduce using rule 96 (I -> REFERENCE OP .)
    CLOSEAKOL       reduce using rule 96 (I -> REFERENCE OP .)
    CLOSEBRACKET    reduce using rule 96 (I -> REFERENCE OP .)
    SEMI            reduce using rule 96 (I -> REFERENCE OP .)
    COMMA           reduce using rule 96 (I -> REFERENCE OP .)
    CLOSEPAR        reduce using rule 96 (I -> REFERENCE OP .)
    LESSEQUAL       reduce using rule 96 (I -> REFERENCE OP .)
    ASSIGN          reduce using rule 96 (I -> REFERENCE OP .)
    EQUALS          reduce using rule 96 (I -> REFERENCE OP .)
    GREATEREQUAL    reduce using rule 96 (I -> REFERENCE OP .)
    GREATERTHAN     reduce using rule 96 (I -> REFERENCE OP .)
    LESSTHAN        reduce using rule 96 (I -> REFERENCE OP .)
    ADD             reduce using rule 96 (I -> REFERENCE OP .)
    MINUS           reduce using rule 96 (I -> REFERENCE OP .)
    MULT            reduce using rule 96 (I -> REFERENCE OP .)
    NOTEQUAL        reduce using rule 96 (I -> REFERENCE OP .)
    DIVIDE          reduce using rule 96 (I -> REFERENCE OP .)
    PEQUAL          reduce using rule 96 (I -> REFERENCE OP .)
    MEQUAL          reduce using rule 96 (I -> REFERENCE OP .)
    PLUSPLUS        reduce using rule 96 (I -> REFERENCE OP .)
    ELSE            reduce using rule 96 (I -> REFERENCE OP .)
    RETURN          reduce using rule 96 (I -> REFERENCE OP .)
    NUMBER          shift and go to state 196
    THIS            shift and go to state 36
    ID              shift and go to state 149

  ! THIS            [ reduce using rule 96 (I -> REFERENCE OP .) ]
  ! ID              [ reduce using rule 96 (I -> REFERENCE OP .) ]
  ! NUMBER          [ reduce using rule 96 (I -> REFERENCE OP .) ]

    REFERENCE                      shift and go to state 195

state 194

    (10) METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .

    STATIC          reduce using rule 10 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    OPENAKOL        reduce using rule 10 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    IF              reduce using rule 10 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    FOR             reduce using rule 10 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    WHILE           reduce using rule 10 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    PUBLIC          reduce using rule 10 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    PRIVATE         reduce using rule 10 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    THIS            reduce using rule 10 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    ID              reduce using rule 10 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    INT             reduce using rule 10 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    BOOLEAN         reduce using rule 10 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    STRING          reduce using rule 10 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    DOUBLE          reduce using rule 10 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    CHARACTER       reduce using rule 10 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    FLOAT           reduce using rule 10 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    VOID            reduce using rule 10 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    TRUE            reduce using rule 10 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    FALSE           reduce using rule 10 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    NULL            reduce using rule 10 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    NUMBER          reduce using rule 10 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    CHAR            reduce using rule 10 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    CLOSEAKOL       reduce using rule 10 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)


state 195

    (98) I -> REFERENCE OP REFERENCE .

    STATIC          reduce using rule 98 (I -> REFERENCE OP REFERENCE .)
    OPENAKOL        reduce using rule 98 (I -> REFERENCE OP REFERENCE .)
    IF              reduce using rule 98 (I -> REFERENCE OP REFERENCE .)
    FOR             reduce using rule 98 (I -> REFERENCE OP REFERENCE .)
    WHILE           reduce using rule 98 (I -> REFERENCE OP REFERENCE .)
    PUBLIC          reduce using rule 98 (I -> REFERENCE OP REFERENCE .)
    PRIVATE         reduce using rule 98 (I -> REFERENCE OP REFERENCE .)
    THIS            reduce using rule 98 (I -> REFERENCE OP REFERENCE .)
    ID              reduce using rule 98 (I -> REFERENCE OP REFERENCE .)
    INT             reduce using rule 98 (I -> REFERENCE OP REFERENCE .)
    BOOLEAN         reduce using rule 98 (I -> REFERENCE OP REFERENCE .)
    STRING          reduce using rule 98 (I -> REFERENCE OP REFERENCE .)
    DOUBLE          reduce using rule 98 (I -> REFERENCE OP REFERENCE .)
    CHARACTER       reduce using rule 98 (I -> REFERENCE OP REFERENCE .)
    FLOAT           reduce using rule 98 (I -> REFERENCE OP REFERENCE .)
    VOID            reduce using rule 98 (I -> REFERENCE OP REFERENCE .)
    TRUE            reduce using rule 98 (I -> REFERENCE OP REFERENCE .)
    FALSE           reduce using rule 98 (I -> REFERENCE OP REFERENCE .)
    NULL            reduce using rule 98 (I -> REFERENCE OP REFERENCE .)
    NUMBER          reduce using rule 98 (I -> REFERENCE OP REFERENCE .)
    CHAR            reduce using rule 98 (I -> REFERENCE OP REFERENCE .)
    CLOSEAKOL       reduce using rule 98 (I -> REFERENCE OP REFERENCE .)
    CLOSEBRACKET    reduce using rule 98 (I -> REFERENCE OP REFERENCE .)
    SEMI            reduce using rule 98 (I -> REFERENCE OP REFERENCE .)
    COMMA           reduce using rule 98 (I -> REFERENCE OP REFERENCE .)
    CLOSEPAR        reduce using rule 98 (I -> REFERENCE OP REFERENCE .)
    LESSEQUAL       reduce using rule 98 (I -> REFERENCE OP REFERENCE .)
    ASSIGN          reduce using rule 98 (I -> REFERENCE OP REFERENCE .)
    EQUALS          reduce using rule 98 (I -> REFERENCE OP REFERENCE .)
    GREATEREQUAL    reduce using rule 98 (I -> REFERENCE OP REFERENCE .)
    GREATERTHAN     reduce using rule 98 (I -> REFERENCE OP REFERENCE .)
    LESSTHAN        reduce using rule 98 (I -> REFERENCE OP REFERENCE .)
    ADD             reduce using rule 98 (I -> REFERENCE OP REFERENCE .)
    MINUS           reduce using rule 98 (I -> REFERENCE OP REFERENCE .)
    MULT            reduce using rule 98 (I -> REFERENCE OP REFERENCE .)
    NOTEQUAL        reduce using rule 98 (I -> REFERENCE OP REFERENCE .)
    DIVIDE          reduce using rule 98 (I -> REFERENCE OP REFERENCE .)
    PEQUAL          reduce using rule 98 (I -> REFERENCE OP REFERENCE .)
    MEQUAL          reduce using rule 98 (I -> REFERENCE OP REFERENCE .)
    PLUSPLUS        reduce using rule 98 (I -> REFERENCE OP REFERENCE .)
    ELSE            reduce using rule 98 (I -> REFERENCE OP REFERENCE .)
    RETURN          reduce using rule 98 (I -> REFERENCE OP REFERENCE .)


state 196

    (97) I -> REFERENCE OP NUMBER .

    STATIC          reduce using rule 97 (I -> REFERENCE OP NUMBER .)
    OPENAKOL        reduce using rule 97 (I -> REFERENCE OP NUMBER .)
    IF              reduce using rule 97 (I -> REFERENCE OP NUMBER .)
    FOR             reduce using rule 97 (I -> REFERENCE OP NUMBER .)
    WHILE           reduce using rule 97 (I -> REFERENCE OP NUMBER .)
    PUBLIC          reduce using rule 97 (I -> REFERENCE OP NUMBER .)
    PRIVATE         reduce using rule 97 (I -> REFERENCE OP NUMBER .)
    THIS            reduce using rule 97 (I -> REFERENCE OP NUMBER .)
    ID              reduce using rule 97 (I -> REFERENCE OP NUMBER .)
    INT             reduce using rule 97 (I -> REFERENCE OP NUMBER .)
    BOOLEAN         reduce using rule 97 (I -> REFERENCE OP NUMBER .)
    STRING          reduce using rule 97 (I -> REFERENCE OP NUMBER .)
    DOUBLE          reduce using rule 97 (I -> REFERENCE OP NUMBER .)
    CHARACTER       reduce using rule 97 (I -> REFERENCE OP NUMBER .)
    FLOAT           reduce using rule 97 (I -> REFERENCE OP NUMBER .)
    VOID            reduce using rule 97 (I -> REFERENCE OP NUMBER .)
    TRUE            reduce using rule 97 (I -> REFERENCE OP NUMBER .)
    FALSE           reduce using rule 97 (I -> REFERENCE OP NUMBER .)
    NULL            reduce using rule 97 (I -> REFERENCE OP NUMBER .)
    NUMBER          reduce using rule 97 (I -> REFERENCE OP NUMBER .)
    CHAR            reduce using rule 97 (I -> REFERENCE OP NUMBER .)
    CLOSEAKOL       reduce using rule 97 (I -> REFERENCE OP NUMBER .)
    CLOSEBRACKET    reduce using rule 97 (I -> REFERENCE OP NUMBER .)
    SEMI            reduce using rule 97 (I -> REFERENCE OP NUMBER .)
    COMMA           reduce using rule 97 (I -> REFERENCE OP NUMBER .)
    CLOSEPAR        reduce using rule 97 (I -> REFERENCE OP NUMBER .)
    LESSEQUAL       reduce using rule 97 (I -> REFERENCE OP NUMBER .)
    ASSIGN          reduce using rule 97 (I -> REFERENCE OP NUMBER .)
    EQUALS          reduce using rule 97 (I -> REFERENCE OP NUMBER .)
    GREATEREQUAL    reduce using rule 97 (I -> REFERENCE OP NUMBER .)
    GREATERTHAN     reduce using rule 97 (I -> REFERENCE OP NUMBER .)
    LESSTHAN        reduce using rule 97 (I -> REFERENCE OP NUMBER .)
    ADD             reduce using rule 97 (I -> REFERENCE OP NUMBER .)
    MINUS           reduce using rule 97 (I -> REFERENCE OP NUMBER .)
    MULT            reduce using rule 97 (I -> REFERENCE OP NUMBER .)
    NOTEQUAL        reduce using rule 97 (I -> REFERENCE OP NUMBER .)
    DIVIDE          reduce using rule 97 (I -> REFERENCE OP NUMBER .)
    PEQUAL          reduce using rule 97 (I -> REFERENCE OP NUMBER .)
    MEQUAL          reduce using rule 97 (I -> REFERENCE OP NUMBER .)
    PLUSPLUS        reduce using rule 97 (I -> REFERENCE OP NUMBER .)
    ELSE            reduce using rule 97 (I -> REFERENCE OP NUMBER .)
    RETURN          reduce using rule 97 (I -> REFERENCE OP NUMBER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for STATIC in state 8 resolved as shift
WARNING: shift/reduce conflict for OPENAKOL in state 8 resolved as shift
WARNING: shift/reduce conflict for IF in state 8 resolved as shift
WARNING: shift/reduce conflict for FOR in state 8 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 8 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 8 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 8 resolved as shift
WARNING: shift/reduce conflict for THIS in state 8 resolved as shift
WARNING: shift/reduce conflict for ID in state 8 resolved as shift
WARNING: shift/reduce conflict for INT in state 8 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 8 resolved as shift
WARNING: shift/reduce conflict for STRING in state 8 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 8 resolved as shift
WARNING: shift/reduce conflict for CHARACTER in state 8 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 8 resolved as shift
WARNING: shift/reduce conflict for VOID in state 8 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 8 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 8 resolved as shift
WARNING: shift/reduce conflict for NULL in state 8 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 8 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 8 resolved as shift
WARNING: shift/reduce conflict for ASSIGN in state 9 resolved as shift
WARNING: shift/reduce conflict for OPENAKOL in state 10 resolved as shift
WARNING: shift/reduce conflict for IF in state 10 resolved as shift
WARNING: shift/reduce conflict for FOR in state 10 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 10 resolved as shift
WARNING: shift/reduce conflict for THIS in state 10 resolved as shift
WARNING: shift/reduce conflict for ID in state 10 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 10 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 10 resolved as shift
WARNING: shift/reduce conflict for NULL in state 10 resolved as shift
WARNING: shift/reduce conflict for INT in state 10 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 10 resolved as shift
WARNING: shift/reduce conflict for STRING in state 10 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 10 resolved as shift
WARNING: shift/reduce conflict for CHARACTER in state 10 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 10 resolved as shift
WARNING: shift/reduce conflict for VOID in state 10 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 10 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 10 resolved as shift
WARNING: shift/reduce conflict for STATIC in state 12 resolved as shift
WARNING: shift/reduce conflict for OPENAKOL in state 12 resolved as shift
WARNING: shift/reduce conflict for IF in state 12 resolved as shift
WARNING: shift/reduce conflict for FOR in state 12 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 12 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 12 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 12 resolved as shift
WARNING: shift/reduce conflict for THIS in state 12 resolved as shift
WARNING: shift/reduce conflict for ID in state 12 resolved as shift
WARNING: shift/reduce conflict for INT in state 12 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 12 resolved as shift
WARNING: shift/reduce conflict for STRING in state 12 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 12 resolved as shift
WARNING: shift/reduce conflict for CHARACTER in state 12 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 12 resolved as shift
WARNING: shift/reduce conflict for VOID in state 12 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 12 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 12 resolved as shift
WARNING: shift/reduce conflict for NULL in state 12 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 12 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 12 resolved as shift
WARNING: shift/reduce conflict for STATIC in state 13 resolved as shift
WARNING: shift/reduce conflict for OPENAKOL in state 13 resolved as shift
WARNING: shift/reduce conflict for IF in state 13 resolved as shift
WARNING: shift/reduce conflict for FOR in state 13 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 13 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 13 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 13 resolved as shift
WARNING: shift/reduce conflict for THIS in state 13 resolved as shift
WARNING: shift/reduce conflict for ID in state 13 resolved as shift
WARNING: shift/reduce conflict for INT in state 13 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 13 resolved as shift
WARNING: shift/reduce conflict for STRING in state 13 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 13 resolved as shift
WARNING: shift/reduce conflict for CHARACTER in state 13 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 13 resolved as shift
WARNING: shift/reduce conflict for VOID in state 13 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 13 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 13 resolved as shift
WARNING: shift/reduce conflict for NULL in state 13 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 13 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 13 resolved as shift
WARNING: shift/reduce conflict for ID in state 20 resolved as shift
WARNING: shift/reduce conflict for OPENAKOL in state 57 resolved as shift
WARNING: shift/reduce conflict for IF in state 57 resolved as shift
WARNING: shift/reduce conflict for FOR in state 57 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 57 resolved as shift
WARNING: shift/reduce conflict for THIS in state 57 resolved as shift
WARNING: shift/reduce conflict for ID in state 57 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 57 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 57 resolved as shift
WARNING: shift/reduce conflict for NULL in state 57 resolved as shift
WARNING: shift/reduce conflict for INT in state 57 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 57 resolved as shift
WARNING: shift/reduce conflict for STRING in state 57 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 57 resolved as shift
WARNING: shift/reduce conflict for CHARACTER in state 57 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 57 resolved as shift
WARNING: shift/reduce conflict for VOID in state 57 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 57 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 57 resolved as shift
WARNING: shift/reduce conflict for ASSIGN in state 59 resolved as shift
WARNING: shift/reduce conflict for CLOSEPAR in state 72 resolved as shift
WARNING: shift/reduce conflict for ASSIGN in state 91 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 94 resolved as shift
WARNING: shift/reduce conflict for ASSIGN in state 123 resolved as shift
WARNING: shift/reduce conflict for LESSEQUAL in state 123 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 123 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 123 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 123 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 123 resolved as shift
WARNING: shift/reduce conflict for ADD in state 123 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 123 resolved as shift
WARNING: shift/reduce conflict for MULT in state 123 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 123 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 123 resolved as shift
WARNING: shift/reduce conflict for PEQUAL in state 123 resolved as shift
WARNING: shift/reduce conflict for MEQUAL in state 123 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 123 resolved as shift
WARNING: shift/reduce conflict for ASSIGN in state 123 resolved as shift
WARNING: shift/reduce conflict for OPENAKOL in state 135 resolved as shift
WARNING: shift/reduce conflict for IF in state 135 resolved as shift
WARNING: shift/reduce conflict for FOR in state 135 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 135 resolved as shift
WARNING: shift/reduce conflict for THIS in state 135 resolved as shift
WARNING: shift/reduce conflict for ID in state 135 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 135 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 135 resolved as shift
WARNING: shift/reduce conflict for NULL in state 135 resolved as shift
WARNING: shift/reduce conflict for INT in state 135 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 135 resolved as shift
WARNING: shift/reduce conflict for STRING in state 135 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 135 resolved as shift
WARNING: shift/reduce conflict for CHARACTER in state 135 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 135 resolved as shift
WARNING: shift/reduce conflict for VOID in state 135 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 135 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 135 resolved as shift
WARNING: shift/reduce conflict for OPENAKOL in state 136 resolved as shift
WARNING: shift/reduce conflict for IF in state 136 resolved as shift
WARNING: shift/reduce conflict for FOR in state 136 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 136 resolved as shift
WARNING: shift/reduce conflict for THIS in state 136 resolved as shift
WARNING: shift/reduce conflict for ID in state 136 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 136 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 136 resolved as shift
WARNING: shift/reduce conflict for NULL in state 136 resolved as shift
WARNING: shift/reduce conflict for INT in state 136 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 136 resolved as shift
WARNING: shift/reduce conflict for STRING in state 136 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 136 resolved as shift
WARNING: shift/reduce conflict for CHARACTER in state 136 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 136 resolved as shift
WARNING: shift/reduce conflict for VOID in state 136 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 136 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 136 resolved as shift
WARNING: shift/reduce conflict for OPENAKOL in state 137 resolved as shift
WARNING: shift/reduce conflict for IF in state 137 resolved as shift
WARNING: shift/reduce conflict for FOR in state 137 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 137 resolved as shift
WARNING: shift/reduce conflict for THIS in state 137 resolved as shift
WARNING: shift/reduce conflict for ID in state 137 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 137 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 137 resolved as shift
WARNING: shift/reduce conflict for NULL in state 137 resolved as shift
WARNING: shift/reduce conflict for INT in state 137 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 137 resolved as shift
WARNING: shift/reduce conflict for STRING in state 137 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 137 resolved as shift
WARNING: shift/reduce conflict for CHARACTER in state 137 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 137 resolved as shift
WARNING: shift/reduce conflict for VOID in state 137 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 137 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 137 resolved as shift
WARNING: shift/reduce conflict for OPENAKOL in state 140 resolved as shift
WARNING: shift/reduce conflict for IF in state 140 resolved as shift
WARNING: shift/reduce conflict for FOR in state 140 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 140 resolved as shift
WARNING: shift/reduce conflict for THIS in state 140 resolved as shift
WARNING: shift/reduce conflict for ID in state 140 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 140 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 140 resolved as shift
WARNING: shift/reduce conflict for NULL in state 140 resolved as shift
WARNING: shift/reduce conflict for INT in state 140 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 140 resolved as shift
WARNING: shift/reduce conflict for STRING in state 140 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 140 resolved as shift
WARNING: shift/reduce conflict for CHARACTER in state 140 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 140 resolved as shift
WARNING: shift/reduce conflict for VOID in state 140 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 140 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 140 resolved as shift
WARNING: shift/reduce conflict for ID in state 142 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 152 resolved as shift
WARNING: shift/reduce conflict for OPENAKOL in state 157 resolved as shift
WARNING: shift/reduce conflict for IF in state 157 resolved as shift
WARNING: shift/reduce conflict for FOR in state 157 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 157 resolved as shift
WARNING: shift/reduce conflict for THIS in state 157 resolved as shift
WARNING: shift/reduce conflict for ID in state 157 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 157 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 157 resolved as shift
WARNING: shift/reduce conflict for NULL in state 157 resolved as shift
WARNING: shift/reduce conflict for INT in state 157 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 157 resolved as shift
WARNING: shift/reduce conflict for STRING in state 157 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 157 resolved as shift
WARNING: shift/reduce conflict for CHARACTER in state 157 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 157 resolved as shift
WARNING: shift/reduce conflict for VOID in state 157 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 157 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 157 resolved as shift
WARNING: shift/reduce conflict for OPENAKOL in state 159 resolved as shift
WARNING: shift/reduce conflict for IF in state 159 resolved as shift
WARNING: shift/reduce conflict for FOR in state 159 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 159 resolved as shift
WARNING: shift/reduce conflict for THIS in state 159 resolved as shift
WARNING: shift/reduce conflict for ID in state 159 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 159 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 159 resolved as shift
WARNING: shift/reduce conflict for NULL in state 159 resolved as shift
WARNING: shift/reduce conflict for INT in state 159 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 159 resolved as shift
WARNING: shift/reduce conflict for STRING in state 159 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 159 resolved as shift
WARNING: shift/reduce conflict for CHARACTER in state 159 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 159 resolved as shift
WARNING: shift/reduce conflict for VOID in state 159 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 159 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 159 resolved as shift
WARNING: shift/reduce conflict for OPENAKOL in state 168 resolved as shift
WARNING: shift/reduce conflict for IF in state 168 resolved as shift
WARNING: shift/reduce conflict for FOR in state 168 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 168 resolved as shift
WARNING: shift/reduce conflict for THIS in state 168 resolved as shift
WARNING: shift/reduce conflict for ID in state 168 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 168 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 168 resolved as shift
WARNING: shift/reduce conflict for NULL in state 168 resolved as shift
WARNING: shift/reduce conflict for INT in state 168 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 168 resolved as shift
WARNING: shift/reduce conflict for STRING in state 168 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 168 resolved as shift
WARNING: shift/reduce conflict for CHARACTER in state 168 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 168 resolved as shift
WARNING: shift/reduce conflict for VOID in state 168 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 168 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 168 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 193 resolved as shift
WARNING: shift/reduce conflict for THIS in state 193 resolved as shift
WARNING: shift/reduce conflict for ID in state 193 resolved as shift
WARNING: reduce/reduce conflict in state 9 resolved using rule (CLASSTYPE -> ID)
WARNING: rejected rule (EXPRESSION6 -> ID) in state 9
WARNING: reduce/reduce conflict in state 9 resolved using rule (EMPTY -> <empty>)
WARNING: rejected rule (CLASSTYPE -> ID) in state 9
WARNING: reduce/reduce conflict in state 14 resolved using rule (A -> EMPTY)
WARNING: rejected rule (EXPRESSION6 -> EMPTY) in state 14
WARNING: reduce/reduce conflict in state 58 resolved using rule (H -> EMPTY)
WARNING: rejected rule (EXPRESSION6 -> EMPTY) in state 58
WARNING: reduce/reduce conflict in state 59 resolved using rule (CLASSTYPE -> ID)
WARNING: rejected rule (EXPRESSION6 -> ID) in state 59
WARNING: reduce/reduce conflict in state 59 resolved using rule (EMPTY -> <empty>)
WARNING: rejected rule (CLASSTYPE -> ID) in state 59
WARNING: reduce/reduce conflict in state 160 resolved using rule (B -> EMPTY)
WARNING: rejected rule (EXPRESSION6 -> EMPTY) in state 160
