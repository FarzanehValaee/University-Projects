Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> PROGRAM
Rule 1     PROGRAM -> Z
Rule 2     Z -> CLASSDECLARATION Z
Rule 3     Z -> EMPTY
Rule 4     CLASSDECLARATION -> CLASS ID OPENAKOL A CLOSEAKOL
Rule 5     A -> FIELDDECLARATION A
Rule 6     A -> METHODDECLARATION A
Rule 7     A -> EMPTY
Rule 8     FIELDDECLARATION -> DECLARATORS ID SEMI
Rule 9     METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL
Rule 10    METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL
Rule 11    METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B CLOSEAKOL
Rule 12    METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B CLOSEAKOL
Rule 13    B -> STATEMENT B
Rule 14    B -> EMPTY
Rule 15    DECLARATORS -> C STATIC TYPE
Rule 16    DECLARATORS -> STATIC TYPE
Rule 17    DECLARATORS -> C TYPE
Rule 18    DECLARATORS -> TYPE
Rule 19    C -> PUBLIC
Rule 20    C -> PRIVATE
Rule 21    EMPTY -> <empty>
Rule 22    TYPE -> PRIMTYPE
Rule 23    TYPE -> CLASSTYPE
Rule 24    TYPE -> ARRTYPE
Rule 25    PRIMTYPE -> INT
Rule 26    PRIMTYPE -> BOOLEAN
Rule 27    PRIMTYPE -> STRING
Rule 28    PRIMTYPE -> DOUBLE
Rule 29    PRIMTYPE -> CHARACTER
Rule 30    PRIMTYPE -> FLOAT
Rule 31    PRIMTYPE -> VOID
Rule 32    CLASSTYPE -> ID
Rule 33    ARRTYPE -> INT OPENBRACKET CLOSEBRACKET
Rule 34    ARRTYPE -> CLASSTYPE OPENBRACKET CLOSEBRACKET
Rule 35    PARAMERERLIST -> TYPE ID D
Rule 36    D -> COMMA TYPE ID D
Rule 37    D -> EMPTY
Rule 38    ARGUMENTLIST -> EXPRESSION E
Rule 39    E -> COMMA EXPRESSION
Rule 40    E -> EMPTY
Rule 41    REFERENCE -> THIS G
Rule 42    REFERENCE -> ID G
Rule 43    G -> DOT ID G
Rule 44    G -> EMPTY
Rule 45    STATEMENT -> OPENAKOL H CLOSEAKOL
Rule 46    STATEMENT -> TYPE ID ASSIGN EXPRESSION SEMI
Rule 47    STATEMENT -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI
Rule 48    STATEMENT -> REFERENCE ASSIGN EXPRESSION SEMI
Rule 49    STATEMENT -> REFERENCE OPENPAR CLOSEPAR SEMI
Rule 50    STATEMENT -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI
Rule 51    STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT
Rule 52    STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT
Rule 53    STATEMENT -> FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT
Rule 54    STATEMENT -> WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT
Rule 55    H -> STATEMENT H
Rule 56    H -> EMPTY
Rule 57    EXPRESSION -> TRUE
Rule 58    EXPRESSION -> FALSE
Rule 59    EXPRESSION -> NULL
Rule 60    EXPRESSION -> NEW ID OPENPAR CLOSEPAR
Rule 61    EXPRESSION -> NEW INT OPENBRACKET EXPRESSION CLOSEBRACKET
Rule 62    EXPRESSION -> NEW ID OPENBRACKET EXPRESSION CLOSEBRACKET
Rule 63    EXPRESSION -> OPENPAR EXPRESSION CLOSEPAR
Rule 64    EXPRESSION -> EXPRESSION OP EXPRESSION
Rule 65    EXPRESSION -> EXPRESSION OP EXPRESSION SEMI
Rule 66    EXPRESSION -> NUMBER
Rule 67    EXPRESSION -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR
Rule 68    EXPRESSION -> REFERENCE OPENPAR CLOSEPAR
Rule 69    EXPRESSION -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET
Rule 70    EXPRESSION -> REFERENCE
Rule 71    EXPRESSION -> REFERENCE ASSIGN REFERENCE SEMI REFERENCE OP REFERENCE SEMI I
Rule 72    EXPRESSION -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP NUMBER SEMI I
Rule 73    EXPRESSION -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I
Rule 74    OP -> LESSEQUAL
Rule 75    OP -> ASSIGN
Rule 76    OP -> EQUALS
Rule 77    OP -> GREATEREQUAL
Rule 78    OP -> GREATERTHAN
Rule 79    OP -> LESSTHAN
Rule 80    OP -> ADD
Rule 81    OP -> MINUS
Rule 82    OP -> MULT
Rule 83    OP -> NOTEQUAL
Rule 84    OP -> DIVIDE
Rule 85    OP -> PEQUAL
Rule 86    OP -> MEQUAL
Rule 87    OP -> PLUSPLUS
Rule 88    I -> REFERENCE OP
Rule 89    I -> REFERENCE OP NUMBER
Rule 90    I -> REFERENCE OP REFERENCE

Terminals, with rules where they appear

ADD                  : 80
ASSIGN               : 46 47 48 71 72 73 75
BOOLEAN              : 26
CHARACTER            : 29
CLASS                : 4
CLOSEAKOL            : 4 9 10 11 12 45
CLOSEBRACKET         : 33 34 47 61 62 69
CLOSEPAR             : 9 10 11 12 49 50 51 52 53 54 60 63 67 68
COMMA                : 36 39
DIVIDE               : 84
DOT                  : 43
DOUBLE               : 28
ELSE                 : 51
EQUALS               : 76
FALSE                : 58
FLOAT                : 30
FOR                  : 53
GREATEREQUAL         : 77
GREATERTHAN          : 78
ID                   : 4 8 9 10 11 12 32 35 36 42 43 46 60 62
IF                   : 51 52
INT                  : 25 33 61
LESSEQUAL            : 74
LESSTHAN             : 79
MEQUAL               : 86
MINUS                : 81
MULT                 : 82
NEW                  : 60 61 62
NOTEQUAL             : 83
NULL                 : 59
NUMBER               : 66 72 72 73 89
OPENAKOL             : 4 9 10 11 12 45
OPENBRACKET          : 33 34 47 61 62 69
OPENPAR              : 9 10 11 12 49 50 51 52 53 54 60 63 67 68
PEQUAL               : 85
PLUSPLUS             : 87
PRIVATE              : 20
PUBLIC               : 19
RETURN               : 9 10
SEMI                 : 8 9 10 46 47 48 49 50 65 71 71 72 72 73 73
STATIC               : 15 16
STRING               : 27
THIS                 : 41
TRUE                 : 57
VOID                 : 31
WHILE                : 54
error                : 

Nonterminals, with rules where they appear

A                    : 4 5 6
ARGUMENTLIST         : 50 67
ARRTYPE              : 24
B                    : 9 10 11 12 13
C                    : 15 17
CLASSDECLARATION     : 2
CLASSTYPE            : 23 34
D                    : 35 36
DECLARATORS          : 8 9 10 11 12
E                    : 38
EMPTY                : 3 7 14 37 40 44 56
EXPRESSION           : 9 10 38 39 46 47 47 48 51 52 53 54 61 62 63 64 64 65 65 69
FIELDDECLARATION     : 5
G                    : 41 42 43
H                    : 45 55
I                    : 71 72 73
METHODDECLARATION    : 6
OP                   : 64 65 71 72 73 88 89 90
PARAMERERLIST        : 9 11
PRIMTYPE             : 22
PROGRAM              : 0
REFERENCE            : 47 48 49 50 67 68 69 70 71 71 71 71 72 72 73 73 73 88 89 90 90
STATEMENT            : 13 51 51 52 53 54 55
TYPE                 : 15 16 17 18 35 36 46
Z                    : 1 2

Parsing method: LALR

state 0

    (0) S' -> . PROGRAM
    (1) PROGRAM -> . Z
    (2) Z -> . CLASSDECLARATION Z
    (3) Z -> . EMPTY
    (4) CLASSDECLARATION -> . CLASS ID OPENAKOL A CLOSEAKOL
    (21) EMPTY -> .

    CLASS           shift and go to state 5
    $end            reduce using rule 21 (EMPTY -> .)

    PROGRAM                        shift and go to state 1
    Z                              shift and go to state 2
    CLASSDECLARATION               shift and go to state 3
    EMPTY                          shift and go to state 4

state 1

    (0) S' -> PROGRAM .



state 2

    (1) PROGRAM -> Z .

    $end            reduce using rule 1 (PROGRAM -> Z .)


state 3

    (2) Z -> CLASSDECLARATION . Z
    (2) Z -> . CLASSDECLARATION Z
    (3) Z -> . EMPTY
    (4) CLASSDECLARATION -> . CLASS ID OPENAKOL A CLOSEAKOL
    (21) EMPTY -> .

    CLASS           shift and go to state 5
    $end            reduce using rule 21 (EMPTY -> .)

    CLASSDECLARATION               shift and go to state 3
    Z                              shift and go to state 6
    EMPTY                          shift and go to state 4

state 4

    (3) Z -> EMPTY .

    $end            reduce using rule 3 (Z -> EMPTY .)


state 5

    (4) CLASSDECLARATION -> CLASS . ID OPENAKOL A CLOSEAKOL

    ID              shift and go to state 7


state 6

    (2) Z -> CLASSDECLARATION Z .

    $end            reduce using rule 2 (Z -> CLASSDECLARATION Z .)


state 7

    (4) CLASSDECLARATION -> CLASS ID . OPENAKOL A CLOSEAKOL

    OPENAKOL        shift and go to state 8


state 8

    (4) CLASSDECLARATION -> CLASS ID OPENAKOL . A CLOSEAKOL
    (5) A -> . FIELDDECLARATION A
    (6) A -> . METHODDECLARATION A
    (7) A -> . EMPTY
    (8) FIELDDECLARATION -> . DECLARATORS ID SEMI
    (9) METHODDECLARATION -> . DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL
    (10) METHODDECLARATION -> . DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL
    (11) METHODDECLARATION -> . DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B CLOSEAKOL
    (12) METHODDECLARATION -> . DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B CLOSEAKOL
    (21) EMPTY -> .
    (15) DECLARATORS -> . C STATIC TYPE
    (16) DECLARATORS -> . STATIC TYPE
    (17) DECLARATORS -> . C TYPE
    (18) DECLARATORS -> . TYPE
    (19) C -> . PUBLIC
    (20) C -> . PRIVATE
    (22) TYPE -> . PRIMTYPE
    (23) TYPE -> . CLASSTYPE
    (24) TYPE -> . ARRTYPE
    (25) PRIMTYPE -> . INT
    (26) PRIMTYPE -> . BOOLEAN
    (27) PRIMTYPE -> . STRING
    (28) PRIMTYPE -> . DOUBLE
    (29) PRIMTYPE -> . CHARACTER
    (30) PRIMTYPE -> . FLOAT
    (31) PRIMTYPE -> . VOID
    (32) CLASSTYPE -> . ID
    (33) ARRTYPE -> . INT OPENBRACKET CLOSEBRACKET
    (34) ARRTYPE -> . CLASSTYPE OPENBRACKET CLOSEBRACKET

    CLOSEAKOL       reduce using rule 21 (EMPTY -> .)
    STATIC          shift and go to state 16
    PUBLIC          shift and go to state 18
    PRIVATE         shift and go to state 19
    INT             shift and go to state 23
    BOOLEAN         shift and go to state 24
    STRING          shift and go to state 25
    DOUBLE          shift and go to state 26
    CHARACTER       shift and go to state 27
    FLOAT           shift and go to state 28
    VOID            shift and go to state 29
    ID              shift and go to state 9

    A                              shift and go to state 10
    FIELDDECLARATION               shift and go to state 11
    METHODDECLARATION              shift and go to state 12
    EMPTY                          shift and go to state 13
    DECLARATORS                    shift and go to state 14
    C                              shift and go to state 15
    TYPE                           shift and go to state 17
    PRIMTYPE                       shift and go to state 20
    CLASSTYPE                      shift and go to state 21
    ARRTYPE                        shift and go to state 22

state 9

    (32) CLASSTYPE -> ID .

    OPENBRACKET     reduce using rule 32 (CLASSTYPE -> ID .)
    ID              reduce using rule 32 (CLASSTYPE -> ID .)


state 10

    (4) CLASSDECLARATION -> CLASS ID OPENAKOL A . CLOSEAKOL

    CLOSEAKOL       shift and go to state 30


state 11

    (5) A -> FIELDDECLARATION . A
    (5) A -> . FIELDDECLARATION A
    (6) A -> . METHODDECLARATION A
    (7) A -> . EMPTY
    (8) FIELDDECLARATION -> . DECLARATORS ID SEMI
    (9) METHODDECLARATION -> . DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL
    (10) METHODDECLARATION -> . DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL
    (11) METHODDECLARATION -> . DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B CLOSEAKOL
    (12) METHODDECLARATION -> . DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B CLOSEAKOL
    (21) EMPTY -> .
    (15) DECLARATORS -> . C STATIC TYPE
    (16) DECLARATORS -> . STATIC TYPE
    (17) DECLARATORS -> . C TYPE
    (18) DECLARATORS -> . TYPE
    (19) C -> . PUBLIC
    (20) C -> . PRIVATE
    (22) TYPE -> . PRIMTYPE
    (23) TYPE -> . CLASSTYPE
    (24) TYPE -> . ARRTYPE
    (25) PRIMTYPE -> . INT
    (26) PRIMTYPE -> . BOOLEAN
    (27) PRIMTYPE -> . STRING
    (28) PRIMTYPE -> . DOUBLE
    (29) PRIMTYPE -> . CHARACTER
    (30) PRIMTYPE -> . FLOAT
    (31) PRIMTYPE -> . VOID
    (32) CLASSTYPE -> . ID
    (33) ARRTYPE -> . INT OPENBRACKET CLOSEBRACKET
    (34) ARRTYPE -> . CLASSTYPE OPENBRACKET CLOSEBRACKET

    CLOSEAKOL       reduce using rule 21 (EMPTY -> .)
    STATIC          shift and go to state 16
    PUBLIC          shift and go to state 18
    PRIVATE         shift and go to state 19
    INT             shift and go to state 23
    BOOLEAN         shift and go to state 24
    STRING          shift and go to state 25
    DOUBLE          shift and go to state 26
    CHARACTER       shift and go to state 27
    FLOAT           shift and go to state 28
    VOID            shift and go to state 29
    ID              shift and go to state 9

    FIELDDECLARATION               shift and go to state 11
    A                              shift and go to state 31
    METHODDECLARATION              shift and go to state 12
    EMPTY                          shift and go to state 13
    DECLARATORS                    shift and go to state 14
    C                              shift and go to state 15
    TYPE                           shift and go to state 17
    PRIMTYPE                       shift and go to state 20
    CLASSTYPE                      shift and go to state 21
    ARRTYPE                        shift and go to state 22

state 12

    (6) A -> METHODDECLARATION . A
    (5) A -> . FIELDDECLARATION A
    (6) A -> . METHODDECLARATION A
    (7) A -> . EMPTY
    (8) FIELDDECLARATION -> . DECLARATORS ID SEMI
    (9) METHODDECLARATION -> . DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL
    (10) METHODDECLARATION -> . DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL
    (11) METHODDECLARATION -> . DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B CLOSEAKOL
    (12) METHODDECLARATION -> . DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B CLOSEAKOL
    (21) EMPTY -> .
    (15) DECLARATORS -> . C STATIC TYPE
    (16) DECLARATORS -> . STATIC TYPE
    (17) DECLARATORS -> . C TYPE
    (18) DECLARATORS -> . TYPE
    (19) C -> . PUBLIC
    (20) C -> . PRIVATE
    (22) TYPE -> . PRIMTYPE
    (23) TYPE -> . CLASSTYPE
    (24) TYPE -> . ARRTYPE
    (25) PRIMTYPE -> . INT
    (26) PRIMTYPE -> . BOOLEAN
    (27) PRIMTYPE -> . STRING
    (28) PRIMTYPE -> . DOUBLE
    (29) PRIMTYPE -> . CHARACTER
    (30) PRIMTYPE -> . FLOAT
    (31) PRIMTYPE -> . VOID
    (32) CLASSTYPE -> . ID
    (33) ARRTYPE -> . INT OPENBRACKET CLOSEBRACKET
    (34) ARRTYPE -> . CLASSTYPE OPENBRACKET CLOSEBRACKET

    CLOSEAKOL       reduce using rule 21 (EMPTY -> .)
    STATIC          shift and go to state 16
    PUBLIC          shift and go to state 18
    PRIVATE         shift and go to state 19
    INT             shift and go to state 23
    BOOLEAN         shift and go to state 24
    STRING          shift and go to state 25
    DOUBLE          shift and go to state 26
    CHARACTER       shift and go to state 27
    FLOAT           shift and go to state 28
    VOID            shift and go to state 29
    ID              shift and go to state 9

    METHODDECLARATION              shift and go to state 12
    A                              shift and go to state 32
    FIELDDECLARATION               shift and go to state 11
    EMPTY                          shift and go to state 13
    DECLARATORS                    shift and go to state 14
    C                              shift and go to state 15
    TYPE                           shift and go to state 17
    PRIMTYPE                       shift and go to state 20
    CLASSTYPE                      shift and go to state 21
    ARRTYPE                        shift and go to state 22

state 13

    (7) A -> EMPTY .

    CLOSEAKOL       reduce using rule 7 (A -> EMPTY .)


state 14

    (8) FIELDDECLARATION -> DECLARATORS . ID SEMI
    (9) METHODDECLARATION -> DECLARATORS . ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL
    (10) METHODDECLARATION -> DECLARATORS . ID OPENPAR CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL
    (11) METHODDECLARATION -> DECLARATORS . ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B CLOSEAKOL
    (12) METHODDECLARATION -> DECLARATORS . ID OPENPAR CLOSEPAR OPENAKOL B CLOSEAKOL

    ID              shift and go to state 33


state 15

    (15) DECLARATORS -> C . STATIC TYPE
    (17) DECLARATORS -> C . TYPE
    (22) TYPE -> . PRIMTYPE
    (23) TYPE -> . CLASSTYPE
    (24) TYPE -> . ARRTYPE
    (25) PRIMTYPE -> . INT
    (26) PRIMTYPE -> . BOOLEAN
    (27) PRIMTYPE -> . STRING
    (28) PRIMTYPE -> . DOUBLE
    (29) PRIMTYPE -> . CHARACTER
    (30) PRIMTYPE -> . FLOAT
    (31) PRIMTYPE -> . VOID
    (32) CLASSTYPE -> . ID
    (33) ARRTYPE -> . INT OPENBRACKET CLOSEBRACKET
    (34) ARRTYPE -> . CLASSTYPE OPENBRACKET CLOSEBRACKET

    STATIC          shift and go to state 34
    INT             shift and go to state 23
    BOOLEAN         shift and go to state 24
    STRING          shift and go to state 25
    DOUBLE          shift and go to state 26
    CHARACTER       shift and go to state 27
    FLOAT           shift and go to state 28
    VOID            shift and go to state 29
    ID              shift and go to state 9

    TYPE                           shift and go to state 35
    PRIMTYPE                       shift and go to state 20
    CLASSTYPE                      shift and go to state 21
    ARRTYPE                        shift and go to state 22

state 16

    (16) DECLARATORS -> STATIC . TYPE
    (22) TYPE -> . PRIMTYPE
    (23) TYPE -> . CLASSTYPE
    (24) TYPE -> . ARRTYPE
    (25) PRIMTYPE -> . INT
    (26) PRIMTYPE -> . BOOLEAN
    (27) PRIMTYPE -> . STRING
    (28) PRIMTYPE -> . DOUBLE
    (29) PRIMTYPE -> . CHARACTER
    (30) PRIMTYPE -> . FLOAT
    (31) PRIMTYPE -> . VOID
    (32) CLASSTYPE -> . ID
    (33) ARRTYPE -> . INT OPENBRACKET CLOSEBRACKET
    (34) ARRTYPE -> . CLASSTYPE OPENBRACKET CLOSEBRACKET

    INT             shift and go to state 23
    BOOLEAN         shift and go to state 24
    STRING          shift and go to state 25
    DOUBLE          shift and go to state 26
    CHARACTER       shift and go to state 27
    FLOAT           shift and go to state 28
    VOID            shift and go to state 29
    ID              shift and go to state 9

    TYPE                           shift and go to state 36
    PRIMTYPE                       shift and go to state 20
    CLASSTYPE                      shift and go to state 21
    ARRTYPE                        shift and go to state 22

state 17

    (18) DECLARATORS -> TYPE .

    ID              reduce using rule 18 (DECLARATORS -> TYPE .)


state 18

    (19) C -> PUBLIC .

    STATIC          reduce using rule 19 (C -> PUBLIC .)
    INT             reduce using rule 19 (C -> PUBLIC .)
    BOOLEAN         reduce using rule 19 (C -> PUBLIC .)
    STRING          reduce using rule 19 (C -> PUBLIC .)
    DOUBLE          reduce using rule 19 (C -> PUBLIC .)
    CHARACTER       reduce using rule 19 (C -> PUBLIC .)
    FLOAT           reduce using rule 19 (C -> PUBLIC .)
    VOID            reduce using rule 19 (C -> PUBLIC .)
    ID              reduce using rule 19 (C -> PUBLIC .)


state 19

    (20) C -> PRIVATE .

    STATIC          reduce using rule 20 (C -> PRIVATE .)
    INT             reduce using rule 20 (C -> PRIVATE .)
    BOOLEAN         reduce using rule 20 (C -> PRIVATE .)
    STRING          reduce using rule 20 (C -> PRIVATE .)
    DOUBLE          reduce using rule 20 (C -> PRIVATE .)
    CHARACTER       reduce using rule 20 (C -> PRIVATE .)
    FLOAT           reduce using rule 20 (C -> PRIVATE .)
    VOID            reduce using rule 20 (C -> PRIVATE .)
    ID              reduce using rule 20 (C -> PRIVATE .)


state 20

    (22) TYPE -> PRIMTYPE .

    ID              reduce using rule 22 (TYPE -> PRIMTYPE .)


state 21

    (23) TYPE -> CLASSTYPE .
    (34) ARRTYPE -> CLASSTYPE . OPENBRACKET CLOSEBRACKET

    ID              reduce using rule 23 (TYPE -> CLASSTYPE .)
    OPENBRACKET     shift and go to state 37


state 22

    (24) TYPE -> ARRTYPE .

    ID              reduce using rule 24 (TYPE -> ARRTYPE .)


state 23

    (25) PRIMTYPE -> INT .
    (33) ARRTYPE -> INT . OPENBRACKET CLOSEBRACKET

    ID              reduce using rule 25 (PRIMTYPE -> INT .)
    OPENBRACKET     shift and go to state 38


state 24

    (26) PRIMTYPE -> BOOLEAN .

    ID              reduce using rule 26 (PRIMTYPE -> BOOLEAN .)


state 25

    (27) PRIMTYPE -> STRING .

    ID              reduce using rule 27 (PRIMTYPE -> STRING .)


state 26

    (28) PRIMTYPE -> DOUBLE .

    ID              reduce using rule 28 (PRIMTYPE -> DOUBLE .)


state 27

    (29) PRIMTYPE -> CHARACTER .

    ID              reduce using rule 29 (PRIMTYPE -> CHARACTER .)


state 28

    (30) PRIMTYPE -> FLOAT .

    ID              reduce using rule 30 (PRIMTYPE -> FLOAT .)


state 29

    (31) PRIMTYPE -> VOID .

    ID              reduce using rule 31 (PRIMTYPE -> VOID .)


state 30

    (4) CLASSDECLARATION -> CLASS ID OPENAKOL A CLOSEAKOL .

    CLASS           reduce using rule 4 (CLASSDECLARATION -> CLASS ID OPENAKOL A CLOSEAKOL .)
    $end            reduce using rule 4 (CLASSDECLARATION -> CLASS ID OPENAKOL A CLOSEAKOL .)


state 31

    (5) A -> FIELDDECLARATION A .

    CLOSEAKOL       reduce using rule 5 (A -> FIELDDECLARATION A .)


state 32

    (6) A -> METHODDECLARATION A .

    CLOSEAKOL       reduce using rule 6 (A -> METHODDECLARATION A .)


state 33

    (8) FIELDDECLARATION -> DECLARATORS ID . SEMI
    (9) METHODDECLARATION -> DECLARATORS ID . OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL
    (10) METHODDECLARATION -> DECLARATORS ID . OPENPAR CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL
    (11) METHODDECLARATION -> DECLARATORS ID . OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B CLOSEAKOL
    (12) METHODDECLARATION -> DECLARATORS ID . OPENPAR CLOSEPAR OPENAKOL B CLOSEAKOL

    SEMI            shift and go to state 39
    OPENPAR         shift and go to state 40


state 34

    (15) DECLARATORS -> C STATIC . TYPE
    (22) TYPE -> . PRIMTYPE
    (23) TYPE -> . CLASSTYPE
    (24) TYPE -> . ARRTYPE
    (25) PRIMTYPE -> . INT
    (26) PRIMTYPE -> . BOOLEAN
    (27) PRIMTYPE -> . STRING
    (28) PRIMTYPE -> . DOUBLE
    (29) PRIMTYPE -> . CHARACTER
    (30) PRIMTYPE -> . FLOAT
    (31) PRIMTYPE -> . VOID
    (32) CLASSTYPE -> . ID
    (33) ARRTYPE -> . INT OPENBRACKET CLOSEBRACKET
    (34) ARRTYPE -> . CLASSTYPE OPENBRACKET CLOSEBRACKET

    INT             shift and go to state 23
    BOOLEAN         shift and go to state 24
    STRING          shift and go to state 25
    DOUBLE          shift and go to state 26
    CHARACTER       shift and go to state 27
    FLOAT           shift and go to state 28
    VOID            shift and go to state 29
    ID              shift and go to state 9

    TYPE                           shift and go to state 41
    PRIMTYPE                       shift and go to state 20
    CLASSTYPE                      shift and go to state 21
    ARRTYPE                        shift and go to state 22

state 35

    (17) DECLARATORS -> C TYPE .

    ID              reduce using rule 17 (DECLARATORS -> C TYPE .)


state 36

    (16) DECLARATORS -> STATIC TYPE .

    ID              reduce using rule 16 (DECLARATORS -> STATIC TYPE .)


state 37

    (34) ARRTYPE -> CLASSTYPE OPENBRACKET . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 42


state 38

    (33) ARRTYPE -> INT OPENBRACKET . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 43


state 39

    (8) FIELDDECLARATION -> DECLARATORS ID SEMI .

    STATIC          reduce using rule 8 (FIELDDECLARATION -> DECLARATORS ID SEMI .)
    PUBLIC          reduce using rule 8 (FIELDDECLARATION -> DECLARATORS ID SEMI .)
    PRIVATE         reduce using rule 8 (FIELDDECLARATION -> DECLARATORS ID SEMI .)
    INT             reduce using rule 8 (FIELDDECLARATION -> DECLARATORS ID SEMI .)
    BOOLEAN         reduce using rule 8 (FIELDDECLARATION -> DECLARATORS ID SEMI .)
    STRING          reduce using rule 8 (FIELDDECLARATION -> DECLARATORS ID SEMI .)
    DOUBLE          reduce using rule 8 (FIELDDECLARATION -> DECLARATORS ID SEMI .)
    CHARACTER       reduce using rule 8 (FIELDDECLARATION -> DECLARATORS ID SEMI .)
    FLOAT           reduce using rule 8 (FIELDDECLARATION -> DECLARATORS ID SEMI .)
    VOID            reduce using rule 8 (FIELDDECLARATION -> DECLARATORS ID SEMI .)
    ID              reduce using rule 8 (FIELDDECLARATION -> DECLARATORS ID SEMI .)
    CLOSEAKOL       reduce using rule 8 (FIELDDECLARATION -> DECLARATORS ID SEMI .)


state 40

    (9) METHODDECLARATION -> DECLARATORS ID OPENPAR . PARAMERERLIST CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL
    (10) METHODDECLARATION -> DECLARATORS ID OPENPAR . CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL
    (11) METHODDECLARATION -> DECLARATORS ID OPENPAR . PARAMERERLIST CLOSEPAR OPENAKOL B CLOSEAKOL
    (12) METHODDECLARATION -> DECLARATORS ID OPENPAR . CLOSEPAR OPENAKOL B CLOSEAKOL
    (35) PARAMERERLIST -> . TYPE ID D
    (22) TYPE -> . PRIMTYPE
    (23) TYPE -> . CLASSTYPE
    (24) TYPE -> . ARRTYPE
    (25) PRIMTYPE -> . INT
    (26) PRIMTYPE -> . BOOLEAN
    (27) PRIMTYPE -> . STRING
    (28) PRIMTYPE -> . DOUBLE
    (29) PRIMTYPE -> . CHARACTER
    (30) PRIMTYPE -> . FLOAT
    (31) PRIMTYPE -> . VOID
    (32) CLASSTYPE -> . ID
    (33) ARRTYPE -> . INT OPENBRACKET CLOSEBRACKET
    (34) ARRTYPE -> . CLASSTYPE OPENBRACKET CLOSEBRACKET

    CLOSEPAR        shift and go to state 45
    INT             shift and go to state 23
    BOOLEAN         shift and go to state 24
    STRING          shift and go to state 25
    DOUBLE          shift and go to state 26
    CHARACTER       shift and go to state 27
    FLOAT           shift and go to state 28
    VOID            shift and go to state 29
    ID              shift and go to state 9

    PARAMERERLIST                  shift and go to state 44
    TYPE                           shift and go to state 46
    PRIMTYPE                       shift and go to state 20
    CLASSTYPE                      shift and go to state 21
    ARRTYPE                        shift and go to state 22

state 41

    (15) DECLARATORS -> C STATIC TYPE .

    ID              reduce using rule 15 (DECLARATORS -> C STATIC TYPE .)


state 42

    (34) ARRTYPE -> CLASSTYPE OPENBRACKET CLOSEBRACKET .

    ID              reduce using rule 34 (ARRTYPE -> CLASSTYPE OPENBRACKET CLOSEBRACKET .)


state 43

    (33) ARRTYPE -> INT OPENBRACKET CLOSEBRACKET .

    ID              reduce using rule 33 (ARRTYPE -> INT OPENBRACKET CLOSEBRACKET .)


state 44

    (9) METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST . CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL
    (11) METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST . CLOSEPAR OPENAKOL B CLOSEAKOL

    CLOSEPAR        shift and go to state 47


state 45

    (10) METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR . OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL
    (12) METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR . OPENAKOL B CLOSEAKOL

    OPENAKOL        shift and go to state 48


state 46

    (35) PARAMERERLIST -> TYPE . ID D

    ID              shift and go to state 49


state 47

    (9) METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR . OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL
    (11) METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR . OPENAKOL B CLOSEAKOL

    OPENAKOL        shift and go to state 50


state 48

    (10) METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL . B RETURN EXPRESSION SEMI CLOSEAKOL
    (12) METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL . B CLOSEAKOL
    (13) B -> . STATEMENT B
    (14) B -> . EMPTY
    (45) STATEMENT -> . OPENAKOL H CLOSEAKOL
    (46) STATEMENT -> . TYPE ID ASSIGN EXPRESSION SEMI
    (47) STATEMENT -> . REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI
    (48) STATEMENT -> . REFERENCE ASSIGN EXPRESSION SEMI
    (49) STATEMENT -> . REFERENCE OPENPAR CLOSEPAR SEMI
    (50) STATEMENT -> . REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI
    (51) STATEMENT -> . IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT
    (52) STATEMENT -> . IF OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (53) STATEMENT -> . FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (54) STATEMENT -> . WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (21) EMPTY -> .
    (22) TYPE -> . PRIMTYPE
    (23) TYPE -> . CLASSTYPE
    (24) TYPE -> . ARRTYPE
    (41) REFERENCE -> . THIS G
    (42) REFERENCE -> . ID G
    (25) PRIMTYPE -> . INT
    (26) PRIMTYPE -> . BOOLEAN
    (27) PRIMTYPE -> . STRING
    (28) PRIMTYPE -> . DOUBLE
    (29) PRIMTYPE -> . CHARACTER
    (30) PRIMTYPE -> . FLOAT
    (31) PRIMTYPE -> . VOID
    (32) CLASSTYPE -> . ID
    (33) ARRTYPE -> . INT OPENBRACKET CLOSEBRACKET
    (34) ARRTYPE -> . CLASSTYPE OPENBRACKET CLOSEBRACKET

    OPENAKOL        shift and go to state 52
    IF              shift and go to state 58
    FOR             shift and go to state 59
    WHILE           shift and go to state 60
    RETURN          reduce using rule 21 (EMPTY -> .)
    CLOSEAKOL       reduce using rule 21 (EMPTY -> .)
    THIS            shift and go to state 61
    ID              shift and go to state 51
    INT             shift and go to state 23
    BOOLEAN         shift and go to state 24
    STRING          shift and go to state 25
    DOUBLE          shift and go to state 26
    CHARACTER       shift and go to state 27
    FLOAT           shift and go to state 28
    VOID            shift and go to state 29

    B                              shift and go to state 53
    STATEMENT                      shift and go to state 54
    EMPTY                          shift and go to state 55
    TYPE                           shift and go to state 56
    REFERENCE                      shift and go to state 57
    PRIMTYPE                       shift and go to state 20
    CLASSTYPE                      shift and go to state 21
    ARRTYPE                        shift and go to state 22

state 49

    (35) PARAMERERLIST -> TYPE ID . D
    (36) D -> . COMMA TYPE ID D
    (37) D -> . EMPTY
    (21) EMPTY -> .

    COMMA           shift and go to state 63
    CLOSEPAR        reduce using rule 21 (EMPTY -> .)

    D                              shift and go to state 62
    EMPTY                          shift and go to state 64

state 50

    (9) METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL . B RETURN EXPRESSION SEMI CLOSEAKOL
    (11) METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL . B CLOSEAKOL
    (13) B -> . STATEMENT B
    (14) B -> . EMPTY
    (45) STATEMENT -> . OPENAKOL H CLOSEAKOL
    (46) STATEMENT -> . TYPE ID ASSIGN EXPRESSION SEMI
    (47) STATEMENT -> . REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI
    (48) STATEMENT -> . REFERENCE ASSIGN EXPRESSION SEMI
    (49) STATEMENT -> . REFERENCE OPENPAR CLOSEPAR SEMI
    (50) STATEMENT -> . REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI
    (51) STATEMENT -> . IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT
    (52) STATEMENT -> . IF OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (53) STATEMENT -> . FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (54) STATEMENT -> . WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (21) EMPTY -> .
    (22) TYPE -> . PRIMTYPE
    (23) TYPE -> . CLASSTYPE
    (24) TYPE -> . ARRTYPE
    (41) REFERENCE -> . THIS G
    (42) REFERENCE -> . ID G
    (25) PRIMTYPE -> . INT
    (26) PRIMTYPE -> . BOOLEAN
    (27) PRIMTYPE -> . STRING
    (28) PRIMTYPE -> . DOUBLE
    (29) PRIMTYPE -> . CHARACTER
    (30) PRIMTYPE -> . FLOAT
    (31) PRIMTYPE -> . VOID
    (32) CLASSTYPE -> . ID
    (33) ARRTYPE -> . INT OPENBRACKET CLOSEBRACKET
    (34) ARRTYPE -> . CLASSTYPE OPENBRACKET CLOSEBRACKET

    OPENAKOL        shift and go to state 52
    IF              shift and go to state 58
    FOR             shift and go to state 59
    WHILE           shift and go to state 60
    RETURN          reduce using rule 21 (EMPTY -> .)
    CLOSEAKOL       reduce using rule 21 (EMPTY -> .)
    THIS            shift and go to state 61
    ID              shift and go to state 51
    INT             shift and go to state 23
    BOOLEAN         shift and go to state 24
    STRING          shift and go to state 25
    DOUBLE          shift and go to state 26
    CHARACTER       shift and go to state 27
    FLOAT           shift and go to state 28
    VOID            shift and go to state 29

    B                              shift and go to state 65
    STATEMENT                      shift and go to state 54
    EMPTY                          shift and go to state 55
    TYPE                           shift and go to state 56
    REFERENCE                      shift and go to state 57
    PRIMTYPE                       shift and go to state 20
    CLASSTYPE                      shift and go to state 21
    ARRTYPE                        shift and go to state 22

state 51

    (42) REFERENCE -> ID . G
    (32) CLASSTYPE -> ID .
    (43) G -> . DOT ID G
    (44) G -> . EMPTY
    (21) EMPTY -> .

  ! reduce/reduce conflict for OPENBRACKET resolved using rule 21 (EMPTY -> .)
    ID              reduce using rule 32 (CLASSTYPE -> ID .)
    DOT             shift and go to state 67
    OPENBRACKET     reduce using rule 21 (EMPTY -> .)
    ASSIGN          reduce using rule 21 (EMPTY -> .)
    OPENPAR         reduce using rule 21 (EMPTY -> .)

  ! OPENBRACKET     [ reduce using rule 32 (CLASSTYPE -> ID .) ]

    G                              shift and go to state 66
    EMPTY                          shift and go to state 68

state 52

    (45) STATEMENT -> OPENAKOL . H CLOSEAKOL
    (55) H -> . STATEMENT H
    (56) H -> . EMPTY
    (45) STATEMENT -> . OPENAKOL H CLOSEAKOL
    (46) STATEMENT -> . TYPE ID ASSIGN EXPRESSION SEMI
    (47) STATEMENT -> . REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI
    (48) STATEMENT -> . REFERENCE ASSIGN EXPRESSION SEMI
    (49) STATEMENT -> . REFERENCE OPENPAR CLOSEPAR SEMI
    (50) STATEMENT -> . REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI
    (51) STATEMENT -> . IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT
    (52) STATEMENT -> . IF OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (53) STATEMENT -> . FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (54) STATEMENT -> . WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (21) EMPTY -> .
    (22) TYPE -> . PRIMTYPE
    (23) TYPE -> . CLASSTYPE
    (24) TYPE -> . ARRTYPE
    (41) REFERENCE -> . THIS G
    (42) REFERENCE -> . ID G
    (25) PRIMTYPE -> . INT
    (26) PRIMTYPE -> . BOOLEAN
    (27) PRIMTYPE -> . STRING
    (28) PRIMTYPE -> . DOUBLE
    (29) PRIMTYPE -> . CHARACTER
    (30) PRIMTYPE -> . FLOAT
    (31) PRIMTYPE -> . VOID
    (32) CLASSTYPE -> . ID
    (33) ARRTYPE -> . INT OPENBRACKET CLOSEBRACKET
    (34) ARRTYPE -> . CLASSTYPE OPENBRACKET CLOSEBRACKET

    OPENAKOL        shift and go to state 52
    IF              shift and go to state 58
    FOR             shift and go to state 59
    WHILE           shift and go to state 60
    CLOSEAKOL       reduce using rule 21 (EMPTY -> .)
    THIS            shift and go to state 61
    ID              shift and go to state 51
    INT             shift and go to state 23
    BOOLEAN         shift and go to state 24
    STRING          shift and go to state 25
    DOUBLE          shift and go to state 26
    CHARACTER       shift and go to state 27
    FLOAT           shift and go to state 28
    VOID            shift and go to state 29

    H                              shift and go to state 69
    STATEMENT                      shift and go to state 70
    EMPTY                          shift and go to state 71
    TYPE                           shift and go to state 56
    REFERENCE                      shift and go to state 57
    PRIMTYPE                       shift and go to state 20
    CLASSTYPE                      shift and go to state 21
    ARRTYPE                        shift and go to state 22

state 53

    (10) METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B . RETURN EXPRESSION SEMI CLOSEAKOL
    (12) METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B . CLOSEAKOL

    RETURN          shift and go to state 72
    CLOSEAKOL       shift and go to state 73


state 54

    (13) B -> STATEMENT . B
    (13) B -> . STATEMENT B
    (14) B -> . EMPTY
    (45) STATEMENT -> . OPENAKOL H CLOSEAKOL
    (46) STATEMENT -> . TYPE ID ASSIGN EXPRESSION SEMI
    (47) STATEMENT -> . REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI
    (48) STATEMENT -> . REFERENCE ASSIGN EXPRESSION SEMI
    (49) STATEMENT -> . REFERENCE OPENPAR CLOSEPAR SEMI
    (50) STATEMENT -> . REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI
    (51) STATEMENT -> . IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT
    (52) STATEMENT -> . IF OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (53) STATEMENT -> . FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (54) STATEMENT -> . WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (21) EMPTY -> .
    (22) TYPE -> . PRIMTYPE
    (23) TYPE -> . CLASSTYPE
    (24) TYPE -> . ARRTYPE
    (41) REFERENCE -> . THIS G
    (42) REFERENCE -> . ID G
    (25) PRIMTYPE -> . INT
    (26) PRIMTYPE -> . BOOLEAN
    (27) PRIMTYPE -> . STRING
    (28) PRIMTYPE -> . DOUBLE
    (29) PRIMTYPE -> . CHARACTER
    (30) PRIMTYPE -> . FLOAT
    (31) PRIMTYPE -> . VOID
    (32) CLASSTYPE -> . ID
    (33) ARRTYPE -> . INT OPENBRACKET CLOSEBRACKET
    (34) ARRTYPE -> . CLASSTYPE OPENBRACKET CLOSEBRACKET

    OPENAKOL        shift and go to state 52
    IF              shift and go to state 58
    FOR             shift and go to state 59
    WHILE           shift and go to state 60
    RETURN          reduce using rule 21 (EMPTY -> .)
    CLOSEAKOL       reduce using rule 21 (EMPTY -> .)
    THIS            shift and go to state 61
    ID              shift and go to state 51
    INT             shift and go to state 23
    BOOLEAN         shift and go to state 24
    STRING          shift and go to state 25
    DOUBLE          shift and go to state 26
    CHARACTER       shift and go to state 27
    FLOAT           shift and go to state 28
    VOID            shift and go to state 29

    STATEMENT                      shift and go to state 54
    B                              shift and go to state 74
    EMPTY                          shift and go to state 55
    TYPE                           shift and go to state 56
    REFERENCE                      shift and go to state 57
    PRIMTYPE                       shift and go to state 20
    CLASSTYPE                      shift and go to state 21
    ARRTYPE                        shift and go to state 22

state 55

    (14) B -> EMPTY .

    RETURN          reduce using rule 14 (B -> EMPTY .)
    CLOSEAKOL       reduce using rule 14 (B -> EMPTY .)


state 56

    (46) STATEMENT -> TYPE . ID ASSIGN EXPRESSION SEMI

    ID              shift and go to state 75


state 57

    (47) STATEMENT -> REFERENCE . OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI
    (48) STATEMENT -> REFERENCE . ASSIGN EXPRESSION SEMI
    (49) STATEMENT -> REFERENCE . OPENPAR CLOSEPAR SEMI
    (50) STATEMENT -> REFERENCE . OPENPAR ARGUMENTLIST CLOSEPAR SEMI

    OPENBRACKET     shift and go to state 76
    ASSIGN          shift and go to state 77
    OPENPAR         shift and go to state 78


state 58

    (51) STATEMENT -> IF . OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT
    (52) STATEMENT -> IF . OPENPAR EXPRESSION CLOSEPAR STATEMENT

    OPENPAR         shift and go to state 79


state 59

    (53) STATEMENT -> FOR . OPENPAR EXPRESSION CLOSEPAR STATEMENT

    OPENPAR         shift and go to state 80


state 60

    (54) STATEMENT -> WHILE . OPENPAR EXPRESSION CLOSEPAR STATEMENT

    OPENPAR         shift and go to state 81


state 61

    (41) REFERENCE -> THIS . G
    (43) G -> . DOT ID G
    (44) G -> . EMPTY
    (21) EMPTY -> .

    DOT             shift and go to state 67
    OPENBRACKET     reduce using rule 21 (EMPTY -> .)
    ASSIGN          reduce using rule 21 (EMPTY -> .)
    OPENPAR         reduce using rule 21 (EMPTY -> .)
    SEMI            reduce using rule 21 (EMPTY -> .)
    LESSEQUAL       reduce using rule 21 (EMPTY -> .)
    EQUALS          reduce using rule 21 (EMPTY -> .)
    GREATEREQUAL    reduce using rule 21 (EMPTY -> .)
    GREATERTHAN     reduce using rule 21 (EMPTY -> .)
    LESSTHAN        reduce using rule 21 (EMPTY -> .)
    ADD             reduce using rule 21 (EMPTY -> .)
    MINUS           reduce using rule 21 (EMPTY -> .)
    MULT            reduce using rule 21 (EMPTY -> .)
    NOTEQUAL        reduce using rule 21 (EMPTY -> .)
    DIVIDE          reduce using rule 21 (EMPTY -> .)
    PEQUAL          reduce using rule 21 (EMPTY -> .)
    MEQUAL          reduce using rule 21 (EMPTY -> .)
    PLUSPLUS        reduce using rule 21 (EMPTY -> .)
    CLOSEBRACKET    reduce using rule 21 (EMPTY -> .)
    COMMA           reduce using rule 21 (EMPTY -> .)
    CLOSEPAR        reduce using rule 21 (EMPTY -> .)

    G                              shift and go to state 82
    EMPTY                          shift and go to state 68

state 62

    (35) PARAMERERLIST -> TYPE ID D .

    CLOSEPAR        reduce using rule 35 (PARAMERERLIST -> TYPE ID D .)


state 63

    (36) D -> COMMA . TYPE ID D
    (22) TYPE -> . PRIMTYPE
    (23) TYPE -> . CLASSTYPE
    (24) TYPE -> . ARRTYPE
    (25) PRIMTYPE -> . INT
    (26) PRIMTYPE -> . BOOLEAN
    (27) PRIMTYPE -> . STRING
    (28) PRIMTYPE -> . DOUBLE
    (29) PRIMTYPE -> . CHARACTER
    (30) PRIMTYPE -> . FLOAT
    (31) PRIMTYPE -> . VOID
    (32) CLASSTYPE -> . ID
    (33) ARRTYPE -> . INT OPENBRACKET CLOSEBRACKET
    (34) ARRTYPE -> . CLASSTYPE OPENBRACKET CLOSEBRACKET

    INT             shift and go to state 23
    BOOLEAN         shift and go to state 24
    STRING          shift and go to state 25
    DOUBLE          shift and go to state 26
    CHARACTER       shift and go to state 27
    FLOAT           shift and go to state 28
    VOID            shift and go to state 29
    ID              shift and go to state 9

    TYPE                           shift and go to state 83
    PRIMTYPE                       shift and go to state 20
    CLASSTYPE                      shift and go to state 21
    ARRTYPE                        shift and go to state 22

state 64

    (37) D -> EMPTY .

    CLOSEPAR        reduce using rule 37 (D -> EMPTY .)


state 65

    (9) METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B . RETURN EXPRESSION SEMI CLOSEAKOL
    (11) METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B . CLOSEAKOL

    RETURN          shift and go to state 84
    CLOSEAKOL       shift and go to state 85


state 66

    (42) REFERENCE -> ID G .

    OPENBRACKET     reduce using rule 42 (REFERENCE -> ID G .)
    ASSIGN          reduce using rule 42 (REFERENCE -> ID G .)
    OPENPAR         reduce using rule 42 (REFERENCE -> ID G .)
    SEMI            reduce using rule 42 (REFERENCE -> ID G .)
    LESSEQUAL       reduce using rule 42 (REFERENCE -> ID G .)
    EQUALS          reduce using rule 42 (REFERENCE -> ID G .)
    GREATEREQUAL    reduce using rule 42 (REFERENCE -> ID G .)
    GREATERTHAN     reduce using rule 42 (REFERENCE -> ID G .)
    LESSTHAN        reduce using rule 42 (REFERENCE -> ID G .)
    ADD             reduce using rule 42 (REFERENCE -> ID G .)
    MINUS           reduce using rule 42 (REFERENCE -> ID G .)
    MULT            reduce using rule 42 (REFERENCE -> ID G .)
    NOTEQUAL        reduce using rule 42 (REFERENCE -> ID G .)
    DIVIDE          reduce using rule 42 (REFERENCE -> ID G .)
    PEQUAL          reduce using rule 42 (REFERENCE -> ID G .)
    MEQUAL          reduce using rule 42 (REFERENCE -> ID G .)
    PLUSPLUS        reduce using rule 42 (REFERENCE -> ID G .)
    CLOSEBRACKET    reduce using rule 42 (REFERENCE -> ID G .)
    COMMA           reduce using rule 42 (REFERENCE -> ID G .)
    CLOSEPAR        reduce using rule 42 (REFERENCE -> ID G .)


state 67

    (43) G -> DOT . ID G

    ID              shift and go to state 86


state 68

    (44) G -> EMPTY .

    OPENBRACKET     reduce using rule 44 (G -> EMPTY .)
    ASSIGN          reduce using rule 44 (G -> EMPTY .)
    OPENPAR         reduce using rule 44 (G -> EMPTY .)
    SEMI            reduce using rule 44 (G -> EMPTY .)
    LESSEQUAL       reduce using rule 44 (G -> EMPTY .)
    EQUALS          reduce using rule 44 (G -> EMPTY .)
    GREATEREQUAL    reduce using rule 44 (G -> EMPTY .)
    GREATERTHAN     reduce using rule 44 (G -> EMPTY .)
    LESSTHAN        reduce using rule 44 (G -> EMPTY .)
    ADD             reduce using rule 44 (G -> EMPTY .)
    MINUS           reduce using rule 44 (G -> EMPTY .)
    MULT            reduce using rule 44 (G -> EMPTY .)
    NOTEQUAL        reduce using rule 44 (G -> EMPTY .)
    DIVIDE          reduce using rule 44 (G -> EMPTY .)
    PEQUAL          reduce using rule 44 (G -> EMPTY .)
    MEQUAL          reduce using rule 44 (G -> EMPTY .)
    PLUSPLUS        reduce using rule 44 (G -> EMPTY .)
    CLOSEBRACKET    reduce using rule 44 (G -> EMPTY .)
    COMMA           reduce using rule 44 (G -> EMPTY .)
    CLOSEPAR        reduce using rule 44 (G -> EMPTY .)


state 69

    (45) STATEMENT -> OPENAKOL H . CLOSEAKOL

    CLOSEAKOL       shift and go to state 87


state 70

    (55) H -> STATEMENT . H
    (55) H -> . STATEMENT H
    (56) H -> . EMPTY
    (45) STATEMENT -> . OPENAKOL H CLOSEAKOL
    (46) STATEMENT -> . TYPE ID ASSIGN EXPRESSION SEMI
    (47) STATEMENT -> . REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI
    (48) STATEMENT -> . REFERENCE ASSIGN EXPRESSION SEMI
    (49) STATEMENT -> . REFERENCE OPENPAR CLOSEPAR SEMI
    (50) STATEMENT -> . REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI
    (51) STATEMENT -> . IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT
    (52) STATEMENT -> . IF OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (53) STATEMENT -> . FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (54) STATEMENT -> . WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (21) EMPTY -> .
    (22) TYPE -> . PRIMTYPE
    (23) TYPE -> . CLASSTYPE
    (24) TYPE -> . ARRTYPE
    (41) REFERENCE -> . THIS G
    (42) REFERENCE -> . ID G
    (25) PRIMTYPE -> . INT
    (26) PRIMTYPE -> . BOOLEAN
    (27) PRIMTYPE -> . STRING
    (28) PRIMTYPE -> . DOUBLE
    (29) PRIMTYPE -> . CHARACTER
    (30) PRIMTYPE -> . FLOAT
    (31) PRIMTYPE -> . VOID
    (32) CLASSTYPE -> . ID
    (33) ARRTYPE -> . INT OPENBRACKET CLOSEBRACKET
    (34) ARRTYPE -> . CLASSTYPE OPENBRACKET CLOSEBRACKET

    OPENAKOL        shift and go to state 52
    IF              shift and go to state 58
    FOR             shift and go to state 59
    WHILE           shift and go to state 60
    CLOSEAKOL       reduce using rule 21 (EMPTY -> .)
    THIS            shift and go to state 61
    ID              shift and go to state 51
    INT             shift and go to state 23
    BOOLEAN         shift and go to state 24
    STRING          shift and go to state 25
    DOUBLE          shift and go to state 26
    CHARACTER       shift and go to state 27
    FLOAT           shift and go to state 28
    VOID            shift and go to state 29

    STATEMENT                      shift and go to state 70
    H                              shift and go to state 88
    EMPTY                          shift and go to state 71
    TYPE                           shift and go to state 56
    REFERENCE                      shift and go to state 57
    PRIMTYPE                       shift and go to state 20
    CLASSTYPE                      shift and go to state 21
    ARRTYPE                        shift and go to state 22

state 71

    (56) H -> EMPTY .

    CLOSEAKOL       reduce using rule 56 (H -> EMPTY .)


state 72

    (10) METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B RETURN . EXPRESSION SEMI CLOSEAKOL
    (57) EXPRESSION -> . TRUE
    (58) EXPRESSION -> . FALSE
    (59) EXPRESSION -> . NULL
    (60) EXPRESSION -> . NEW ID OPENPAR CLOSEPAR
    (61) EXPRESSION -> . NEW INT OPENBRACKET EXPRESSION CLOSEBRACKET
    (62) EXPRESSION -> . NEW ID OPENBRACKET EXPRESSION CLOSEBRACKET
    (63) EXPRESSION -> . OPENPAR EXPRESSION CLOSEPAR
    (64) EXPRESSION -> . EXPRESSION OP EXPRESSION
    (65) EXPRESSION -> . EXPRESSION OP EXPRESSION SEMI
    (66) EXPRESSION -> . NUMBER
    (67) EXPRESSION -> . REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR
    (68) EXPRESSION -> . REFERENCE OPENPAR CLOSEPAR
    (69) EXPRESSION -> . REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET
    (70) EXPRESSION -> . REFERENCE
    (71) EXPRESSION -> . REFERENCE ASSIGN REFERENCE SEMI REFERENCE OP REFERENCE SEMI I
    (72) EXPRESSION -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP NUMBER SEMI I
    (73) EXPRESSION -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I
    (41) REFERENCE -> . THIS G
    (42) REFERENCE -> . ID G

    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    NULL            shift and go to state 94
    NEW             shift and go to state 95
    OPENPAR         shift and go to state 90
    NUMBER          shift and go to state 96
    THIS            shift and go to state 61
    ID              shift and go to state 89

    EXPRESSION                     shift and go to state 91
    REFERENCE                      shift and go to state 97

state 73

    (12) METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B CLOSEAKOL .

    STATIC          reduce using rule 12 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B CLOSEAKOL .)
    PUBLIC          reduce using rule 12 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B CLOSEAKOL .)
    PRIVATE         reduce using rule 12 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B CLOSEAKOL .)
    INT             reduce using rule 12 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B CLOSEAKOL .)
    BOOLEAN         reduce using rule 12 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B CLOSEAKOL .)
    STRING          reduce using rule 12 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B CLOSEAKOL .)
    DOUBLE          reduce using rule 12 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B CLOSEAKOL .)
    CHARACTER       reduce using rule 12 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B CLOSEAKOL .)
    FLOAT           reduce using rule 12 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B CLOSEAKOL .)
    VOID            reduce using rule 12 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B CLOSEAKOL .)
    ID              reduce using rule 12 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B CLOSEAKOL .)
    CLOSEAKOL       reduce using rule 12 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B CLOSEAKOL .)


state 74

    (13) B -> STATEMENT B .

    RETURN          reduce using rule 13 (B -> STATEMENT B .)
    CLOSEAKOL       reduce using rule 13 (B -> STATEMENT B .)


state 75

    (46) STATEMENT -> TYPE ID . ASSIGN EXPRESSION SEMI

    ASSIGN          shift and go to state 98


state 76

    (47) STATEMENT -> REFERENCE OPENBRACKET . EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI
    (57) EXPRESSION -> . TRUE
    (58) EXPRESSION -> . FALSE
    (59) EXPRESSION -> . NULL
    (60) EXPRESSION -> . NEW ID OPENPAR CLOSEPAR
    (61) EXPRESSION -> . NEW INT OPENBRACKET EXPRESSION CLOSEBRACKET
    (62) EXPRESSION -> . NEW ID OPENBRACKET EXPRESSION CLOSEBRACKET
    (63) EXPRESSION -> . OPENPAR EXPRESSION CLOSEPAR
    (64) EXPRESSION -> . EXPRESSION OP EXPRESSION
    (65) EXPRESSION -> . EXPRESSION OP EXPRESSION SEMI
    (66) EXPRESSION -> . NUMBER
    (67) EXPRESSION -> . REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR
    (68) EXPRESSION -> . REFERENCE OPENPAR CLOSEPAR
    (69) EXPRESSION -> . REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET
    (70) EXPRESSION -> . REFERENCE
    (71) EXPRESSION -> . REFERENCE ASSIGN REFERENCE SEMI REFERENCE OP REFERENCE SEMI I
    (72) EXPRESSION -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP NUMBER SEMI I
    (73) EXPRESSION -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I
    (41) REFERENCE -> . THIS G
    (42) REFERENCE -> . ID G

    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    NULL            shift and go to state 94
    NEW             shift and go to state 95
    OPENPAR         shift and go to state 90
    NUMBER          shift and go to state 96
    THIS            shift and go to state 61
    ID              shift and go to state 89

    REFERENCE                      shift and go to state 97
    EXPRESSION                     shift and go to state 99

state 77

    (48) STATEMENT -> REFERENCE ASSIGN . EXPRESSION SEMI
    (57) EXPRESSION -> . TRUE
    (58) EXPRESSION -> . FALSE
    (59) EXPRESSION -> . NULL
    (60) EXPRESSION -> . NEW ID OPENPAR CLOSEPAR
    (61) EXPRESSION -> . NEW INT OPENBRACKET EXPRESSION CLOSEBRACKET
    (62) EXPRESSION -> . NEW ID OPENBRACKET EXPRESSION CLOSEBRACKET
    (63) EXPRESSION -> . OPENPAR EXPRESSION CLOSEPAR
    (64) EXPRESSION -> . EXPRESSION OP EXPRESSION
    (65) EXPRESSION -> . EXPRESSION OP EXPRESSION SEMI
    (66) EXPRESSION -> . NUMBER
    (67) EXPRESSION -> . REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR
    (68) EXPRESSION -> . REFERENCE OPENPAR CLOSEPAR
    (69) EXPRESSION -> . REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET
    (70) EXPRESSION -> . REFERENCE
    (71) EXPRESSION -> . REFERENCE ASSIGN REFERENCE SEMI REFERENCE OP REFERENCE SEMI I
    (72) EXPRESSION -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP NUMBER SEMI I
    (73) EXPRESSION -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I
    (41) REFERENCE -> . THIS G
    (42) REFERENCE -> . ID G

    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    NULL            shift and go to state 94
    NEW             shift and go to state 95
    OPENPAR         shift and go to state 90
    NUMBER          shift and go to state 96
    THIS            shift and go to state 61
    ID              shift and go to state 89

    REFERENCE                      shift and go to state 97
    EXPRESSION                     shift and go to state 100

state 78

    (49) STATEMENT -> REFERENCE OPENPAR . CLOSEPAR SEMI
    (50) STATEMENT -> REFERENCE OPENPAR . ARGUMENTLIST CLOSEPAR SEMI
    (38) ARGUMENTLIST -> . EXPRESSION E
    (57) EXPRESSION -> . TRUE
    (58) EXPRESSION -> . FALSE
    (59) EXPRESSION -> . NULL
    (60) EXPRESSION -> . NEW ID OPENPAR CLOSEPAR
    (61) EXPRESSION -> . NEW INT OPENBRACKET EXPRESSION CLOSEBRACKET
    (62) EXPRESSION -> . NEW ID OPENBRACKET EXPRESSION CLOSEBRACKET
    (63) EXPRESSION -> . OPENPAR EXPRESSION CLOSEPAR
    (64) EXPRESSION -> . EXPRESSION OP EXPRESSION
    (65) EXPRESSION -> . EXPRESSION OP EXPRESSION SEMI
    (66) EXPRESSION -> . NUMBER
    (67) EXPRESSION -> . REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR
    (68) EXPRESSION -> . REFERENCE OPENPAR CLOSEPAR
    (69) EXPRESSION -> . REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET
    (70) EXPRESSION -> . REFERENCE
    (71) EXPRESSION -> . REFERENCE ASSIGN REFERENCE SEMI REFERENCE OP REFERENCE SEMI I
    (72) EXPRESSION -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP NUMBER SEMI I
    (73) EXPRESSION -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I
    (41) REFERENCE -> . THIS G
    (42) REFERENCE -> . ID G

    CLOSEPAR        shift and go to state 101
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    NULL            shift and go to state 94
    NEW             shift and go to state 95
    OPENPAR         shift and go to state 90
    NUMBER          shift and go to state 96
    THIS            shift and go to state 61
    ID              shift and go to state 89

    REFERENCE                      shift and go to state 97
    ARGUMENTLIST                   shift and go to state 102
    EXPRESSION                     shift and go to state 103

state 79

    (51) STATEMENT -> IF OPENPAR . EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT
    (52) STATEMENT -> IF OPENPAR . EXPRESSION CLOSEPAR STATEMENT
    (57) EXPRESSION -> . TRUE
    (58) EXPRESSION -> . FALSE
    (59) EXPRESSION -> . NULL
    (60) EXPRESSION -> . NEW ID OPENPAR CLOSEPAR
    (61) EXPRESSION -> . NEW INT OPENBRACKET EXPRESSION CLOSEBRACKET
    (62) EXPRESSION -> . NEW ID OPENBRACKET EXPRESSION CLOSEBRACKET
    (63) EXPRESSION -> . OPENPAR EXPRESSION CLOSEPAR
    (64) EXPRESSION -> . EXPRESSION OP EXPRESSION
    (65) EXPRESSION -> . EXPRESSION OP EXPRESSION SEMI
    (66) EXPRESSION -> . NUMBER
    (67) EXPRESSION -> . REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR
    (68) EXPRESSION -> . REFERENCE OPENPAR CLOSEPAR
    (69) EXPRESSION -> . REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET
    (70) EXPRESSION -> . REFERENCE
    (71) EXPRESSION -> . REFERENCE ASSIGN REFERENCE SEMI REFERENCE OP REFERENCE SEMI I
    (72) EXPRESSION -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP NUMBER SEMI I
    (73) EXPRESSION -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I
    (41) REFERENCE -> . THIS G
    (42) REFERENCE -> . ID G

    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    NULL            shift and go to state 94
    NEW             shift and go to state 95
    OPENPAR         shift and go to state 90
    NUMBER          shift and go to state 96
    THIS            shift and go to state 61
    ID              shift and go to state 89

    EXPRESSION                     shift and go to state 104
    REFERENCE                      shift and go to state 97

state 80

    (53) STATEMENT -> FOR OPENPAR . EXPRESSION CLOSEPAR STATEMENT
    (57) EXPRESSION -> . TRUE
    (58) EXPRESSION -> . FALSE
    (59) EXPRESSION -> . NULL
    (60) EXPRESSION -> . NEW ID OPENPAR CLOSEPAR
    (61) EXPRESSION -> . NEW INT OPENBRACKET EXPRESSION CLOSEBRACKET
    (62) EXPRESSION -> . NEW ID OPENBRACKET EXPRESSION CLOSEBRACKET
    (63) EXPRESSION -> . OPENPAR EXPRESSION CLOSEPAR
    (64) EXPRESSION -> . EXPRESSION OP EXPRESSION
    (65) EXPRESSION -> . EXPRESSION OP EXPRESSION SEMI
    (66) EXPRESSION -> . NUMBER
    (67) EXPRESSION -> . REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR
    (68) EXPRESSION -> . REFERENCE OPENPAR CLOSEPAR
    (69) EXPRESSION -> . REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET
    (70) EXPRESSION -> . REFERENCE
    (71) EXPRESSION -> . REFERENCE ASSIGN REFERENCE SEMI REFERENCE OP REFERENCE SEMI I
    (72) EXPRESSION -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP NUMBER SEMI I
    (73) EXPRESSION -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I
    (41) REFERENCE -> . THIS G
    (42) REFERENCE -> . ID G

    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    NULL            shift and go to state 94
    NEW             shift and go to state 95
    OPENPAR         shift and go to state 90
    NUMBER          shift and go to state 96
    THIS            shift and go to state 61
    ID              shift and go to state 89

    EXPRESSION                     shift and go to state 105
    REFERENCE                      shift and go to state 97

state 81

    (54) STATEMENT -> WHILE OPENPAR . EXPRESSION CLOSEPAR STATEMENT
    (57) EXPRESSION -> . TRUE
    (58) EXPRESSION -> . FALSE
    (59) EXPRESSION -> . NULL
    (60) EXPRESSION -> . NEW ID OPENPAR CLOSEPAR
    (61) EXPRESSION -> . NEW INT OPENBRACKET EXPRESSION CLOSEBRACKET
    (62) EXPRESSION -> . NEW ID OPENBRACKET EXPRESSION CLOSEBRACKET
    (63) EXPRESSION -> . OPENPAR EXPRESSION CLOSEPAR
    (64) EXPRESSION -> . EXPRESSION OP EXPRESSION
    (65) EXPRESSION -> . EXPRESSION OP EXPRESSION SEMI
    (66) EXPRESSION -> . NUMBER
    (67) EXPRESSION -> . REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR
    (68) EXPRESSION -> . REFERENCE OPENPAR CLOSEPAR
    (69) EXPRESSION -> . REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET
    (70) EXPRESSION -> . REFERENCE
    (71) EXPRESSION -> . REFERENCE ASSIGN REFERENCE SEMI REFERENCE OP REFERENCE SEMI I
    (72) EXPRESSION -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP NUMBER SEMI I
    (73) EXPRESSION -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I
    (41) REFERENCE -> . THIS G
    (42) REFERENCE -> . ID G

    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    NULL            shift and go to state 94
    NEW             shift and go to state 95
    OPENPAR         shift and go to state 90
    NUMBER          shift and go to state 96
    THIS            shift and go to state 61
    ID              shift and go to state 89

    EXPRESSION                     shift and go to state 106
    REFERENCE                      shift and go to state 97

state 82

    (41) REFERENCE -> THIS G .

    OPENBRACKET     reduce using rule 41 (REFERENCE -> THIS G .)
    ASSIGN          reduce using rule 41 (REFERENCE -> THIS G .)
    OPENPAR         reduce using rule 41 (REFERENCE -> THIS G .)
    SEMI            reduce using rule 41 (REFERENCE -> THIS G .)
    LESSEQUAL       reduce using rule 41 (REFERENCE -> THIS G .)
    EQUALS          reduce using rule 41 (REFERENCE -> THIS G .)
    GREATEREQUAL    reduce using rule 41 (REFERENCE -> THIS G .)
    GREATERTHAN     reduce using rule 41 (REFERENCE -> THIS G .)
    LESSTHAN        reduce using rule 41 (REFERENCE -> THIS G .)
    ADD             reduce using rule 41 (REFERENCE -> THIS G .)
    MINUS           reduce using rule 41 (REFERENCE -> THIS G .)
    MULT            reduce using rule 41 (REFERENCE -> THIS G .)
    NOTEQUAL        reduce using rule 41 (REFERENCE -> THIS G .)
    DIVIDE          reduce using rule 41 (REFERENCE -> THIS G .)
    PEQUAL          reduce using rule 41 (REFERENCE -> THIS G .)
    MEQUAL          reduce using rule 41 (REFERENCE -> THIS G .)
    PLUSPLUS        reduce using rule 41 (REFERENCE -> THIS G .)
    CLOSEBRACKET    reduce using rule 41 (REFERENCE -> THIS G .)
    COMMA           reduce using rule 41 (REFERENCE -> THIS G .)
    CLOSEPAR        reduce using rule 41 (REFERENCE -> THIS G .)


state 83

    (36) D -> COMMA TYPE . ID D

    ID              shift and go to state 107


state 84

    (9) METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B RETURN . EXPRESSION SEMI CLOSEAKOL
    (57) EXPRESSION -> . TRUE
    (58) EXPRESSION -> . FALSE
    (59) EXPRESSION -> . NULL
    (60) EXPRESSION -> . NEW ID OPENPAR CLOSEPAR
    (61) EXPRESSION -> . NEW INT OPENBRACKET EXPRESSION CLOSEBRACKET
    (62) EXPRESSION -> . NEW ID OPENBRACKET EXPRESSION CLOSEBRACKET
    (63) EXPRESSION -> . OPENPAR EXPRESSION CLOSEPAR
    (64) EXPRESSION -> . EXPRESSION OP EXPRESSION
    (65) EXPRESSION -> . EXPRESSION OP EXPRESSION SEMI
    (66) EXPRESSION -> . NUMBER
    (67) EXPRESSION -> . REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR
    (68) EXPRESSION -> . REFERENCE OPENPAR CLOSEPAR
    (69) EXPRESSION -> . REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET
    (70) EXPRESSION -> . REFERENCE
    (71) EXPRESSION -> . REFERENCE ASSIGN REFERENCE SEMI REFERENCE OP REFERENCE SEMI I
    (72) EXPRESSION -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP NUMBER SEMI I
    (73) EXPRESSION -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I
    (41) REFERENCE -> . THIS G
    (42) REFERENCE -> . ID G

    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    NULL            shift and go to state 94
    NEW             shift and go to state 95
    OPENPAR         shift and go to state 90
    NUMBER          shift and go to state 96
    THIS            shift and go to state 61
    ID              shift and go to state 89

    EXPRESSION                     shift and go to state 108
    REFERENCE                      shift and go to state 97

state 85

    (11) METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B CLOSEAKOL .

    STATIC          reduce using rule 11 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B CLOSEAKOL .)
    PUBLIC          reduce using rule 11 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B CLOSEAKOL .)
    PRIVATE         reduce using rule 11 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B CLOSEAKOL .)
    INT             reduce using rule 11 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B CLOSEAKOL .)
    BOOLEAN         reduce using rule 11 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B CLOSEAKOL .)
    STRING          reduce using rule 11 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B CLOSEAKOL .)
    DOUBLE          reduce using rule 11 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B CLOSEAKOL .)
    CHARACTER       reduce using rule 11 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B CLOSEAKOL .)
    FLOAT           reduce using rule 11 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B CLOSEAKOL .)
    VOID            reduce using rule 11 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B CLOSEAKOL .)
    ID              reduce using rule 11 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B CLOSEAKOL .)
    CLOSEAKOL       reduce using rule 11 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B CLOSEAKOL .)


state 86

    (43) G -> DOT ID . G
    (43) G -> . DOT ID G
    (44) G -> . EMPTY
    (21) EMPTY -> .

    DOT             shift and go to state 67
    OPENBRACKET     reduce using rule 21 (EMPTY -> .)
    ASSIGN          reduce using rule 21 (EMPTY -> .)
    OPENPAR         reduce using rule 21 (EMPTY -> .)
    SEMI            reduce using rule 21 (EMPTY -> .)
    LESSEQUAL       reduce using rule 21 (EMPTY -> .)
    EQUALS          reduce using rule 21 (EMPTY -> .)
    GREATEREQUAL    reduce using rule 21 (EMPTY -> .)
    GREATERTHAN     reduce using rule 21 (EMPTY -> .)
    LESSTHAN        reduce using rule 21 (EMPTY -> .)
    ADD             reduce using rule 21 (EMPTY -> .)
    MINUS           reduce using rule 21 (EMPTY -> .)
    MULT            reduce using rule 21 (EMPTY -> .)
    NOTEQUAL        reduce using rule 21 (EMPTY -> .)
    DIVIDE          reduce using rule 21 (EMPTY -> .)
    PEQUAL          reduce using rule 21 (EMPTY -> .)
    MEQUAL          reduce using rule 21 (EMPTY -> .)
    PLUSPLUS        reduce using rule 21 (EMPTY -> .)
    CLOSEBRACKET    reduce using rule 21 (EMPTY -> .)
    COMMA           reduce using rule 21 (EMPTY -> .)
    CLOSEPAR        reduce using rule 21 (EMPTY -> .)

    G                              shift and go to state 109
    EMPTY                          shift and go to state 68

state 87

    (45) STATEMENT -> OPENAKOL H CLOSEAKOL .

    OPENAKOL        reduce using rule 45 (STATEMENT -> OPENAKOL H CLOSEAKOL .)
    IF              reduce using rule 45 (STATEMENT -> OPENAKOL H CLOSEAKOL .)
    FOR             reduce using rule 45 (STATEMENT -> OPENAKOL H CLOSEAKOL .)
    WHILE           reduce using rule 45 (STATEMENT -> OPENAKOL H CLOSEAKOL .)
    THIS            reduce using rule 45 (STATEMENT -> OPENAKOL H CLOSEAKOL .)
    ID              reduce using rule 45 (STATEMENT -> OPENAKOL H CLOSEAKOL .)
    INT             reduce using rule 45 (STATEMENT -> OPENAKOL H CLOSEAKOL .)
    BOOLEAN         reduce using rule 45 (STATEMENT -> OPENAKOL H CLOSEAKOL .)
    STRING          reduce using rule 45 (STATEMENT -> OPENAKOL H CLOSEAKOL .)
    DOUBLE          reduce using rule 45 (STATEMENT -> OPENAKOL H CLOSEAKOL .)
    CHARACTER       reduce using rule 45 (STATEMENT -> OPENAKOL H CLOSEAKOL .)
    FLOAT           reduce using rule 45 (STATEMENT -> OPENAKOL H CLOSEAKOL .)
    VOID            reduce using rule 45 (STATEMENT -> OPENAKOL H CLOSEAKOL .)
    RETURN          reduce using rule 45 (STATEMENT -> OPENAKOL H CLOSEAKOL .)
    CLOSEAKOL       reduce using rule 45 (STATEMENT -> OPENAKOL H CLOSEAKOL .)
    ELSE            reduce using rule 45 (STATEMENT -> OPENAKOL H CLOSEAKOL .)


state 88

    (55) H -> STATEMENT H .

    CLOSEAKOL       reduce using rule 55 (H -> STATEMENT H .)


state 89

    (42) REFERENCE -> ID . G
    (43) G -> . DOT ID G
    (44) G -> . EMPTY
    (21) EMPTY -> .

    DOT             shift and go to state 67
    OPENPAR         reduce using rule 21 (EMPTY -> .)
    OPENBRACKET     reduce using rule 21 (EMPTY -> .)
    ASSIGN          reduce using rule 21 (EMPTY -> .)
    SEMI            reduce using rule 21 (EMPTY -> .)
    LESSEQUAL       reduce using rule 21 (EMPTY -> .)
    EQUALS          reduce using rule 21 (EMPTY -> .)
    GREATEREQUAL    reduce using rule 21 (EMPTY -> .)
    GREATERTHAN     reduce using rule 21 (EMPTY -> .)
    LESSTHAN        reduce using rule 21 (EMPTY -> .)
    ADD             reduce using rule 21 (EMPTY -> .)
    MINUS           reduce using rule 21 (EMPTY -> .)
    MULT            reduce using rule 21 (EMPTY -> .)
    NOTEQUAL        reduce using rule 21 (EMPTY -> .)
    DIVIDE          reduce using rule 21 (EMPTY -> .)
    PEQUAL          reduce using rule 21 (EMPTY -> .)
    MEQUAL          reduce using rule 21 (EMPTY -> .)
    PLUSPLUS        reduce using rule 21 (EMPTY -> .)
    CLOSEBRACKET    reduce using rule 21 (EMPTY -> .)
    COMMA           reduce using rule 21 (EMPTY -> .)
    CLOSEPAR        reduce using rule 21 (EMPTY -> .)

    G                              shift and go to state 66
    EMPTY                          shift and go to state 68

state 90

    (63) EXPRESSION -> OPENPAR . EXPRESSION CLOSEPAR
    (57) EXPRESSION -> . TRUE
    (58) EXPRESSION -> . FALSE
    (59) EXPRESSION -> . NULL
    (60) EXPRESSION -> . NEW ID OPENPAR CLOSEPAR
    (61) EXPRESSION -> . NEW INT OPENBRACKET EXPRESSION CLOSEBRACKET
    (62) EXPRESSION -> . NEW ID OPENBRACKET EXPRESSION CLOSEBRACKET
    (63) EXPRESSION -> . OPENPAR EXPRESSION CLOSEPAR
    (64) EXPRESSION -> . EXPRESSION OP EXPRESSION
    (65) EXPRESSION -> . EXPRESSION OP EXPRESSION SEMI
    (66) EXPRESSION -> . NUMBER
    (67) EXPRESSION -> . REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR
    (68) EXPRESSION -> . REFERENCE OPENPAR CLOSEPAR
    (69) EXPRESSION -> . REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET
    (70) EXPRESSION -> . REFERENCE
    (71) EXPRESSION -> . REFERENCE ASSIGN REFERENCE SEMI REFERENCE OP REFERENCE SEMI I
    (72) EXPRESSION -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP NUMBER SEMI I
    (73) EXPRESSION -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I
    (41) REFERENCE -> . THIS G
    (42) REFERENCE -> . ID G

    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    NULL            shift and go to state 94
    NEW             shift and go to state 95
    OPENPAR         shift and go to state 90
    NUMBER          shift and go to state 96
    THIS            shift and go to state 61
    ID              shift and go to state 89

    EXPRESSION                     shift and go to state 110
    REFERENCE                      shift and go to state 97

state 91

    (10) METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B RETURN EXPRESSION . SEMI CLOSEAKOL
    (64) EXPRESSION -> EXPRESSION . OP EXPRESSION
    (65) EXPRESSION -> EXPRESSION . OP EXPRESSION SEMI
    (74) OP -> . LESSEQUAL
    (75) OP -> . ASSIGN
    (76) OP -> . EQUALS
    (77) OP -> . GREATEREQUAL
    (78) OP -> . GREATERTHAN
    (79) OP -> . LESSTHAN
    (80) OP -> . ADD
    (81) OP -> . MINUS
    (82) OP -> . MULT
    (83) OP -> . NOTEQUAL
    (84) OP -> . DIVIDE
    (85) OP -> . PEQUAL
    (86) OP -> . MEQUAL
    (87) OP -> . PLUSPLUS

    SEMI            shift and go to state 111
    LESSEQUAL       shift and go to state 113
    ASSIGN          shift and go to state 114
    EQUALS          shift and go to state 115
    GREATEREQUAL    shift and go to state 116
    GREATERTHAN     shift and go to state 117
    LESSTHAN        shift and go to state 118
    ADD             shift and go to state 119
    MINUS           shift and go to state 120
    MULT            shift and go to state 121
    NOTEQUAL        shift and go to state 122
    DIVIDE          shift and go to state 123
    PEQUAL          shift and go to state 124
    MEQUAL          shift and go to state 125
    PLUSPLUS        shift and go to state 126

    OP                             shift and go to state 112

state 92

    (57) EXPRESSION -> TRUE .

    SEMI            reduce using rule 57 (EXPRESSION -> TRUE .)
    LESSEQUAL       reduce using rule 57 (EXPRESSION -> TRUE .)
    ASSIGN          reduce using rule 57 (EXPRESSION -> TRUE .)
    EQUALS          reduce using rule 57 (EXPRESSION -> TRUE .)
    GREATEREQUAL    reduce using rule 57 (EXPRESSION -> TRUE .)
    GREATERTHAN     reduce using rule 57 (EXPRESSION -> TRUE .)
    LESSTHAN        reduce using rule 57 (EXPRESSION -> TRUE .)
    ADD             reduce using rule 57 (EXPRESSION -> TRUE .)
    MINUS           reduce using rule 57 (EXPRESSION -> TRUE .)
    MULT            reduce using rule 57 (EXPRESSION -> TRUE .)
    NOTEQUAL        reduce using rule 57 (EXPRESSION -> TRUE .)
    DIVIDE          reduce using rule 57 (EXPRESSION -> TRUE .)
    PEQUAL          reduce using rule 57 (EXPRESSION -> TRUE .)
    MEQUAL          reduce using rule 57 (EXPRESSION -> TRUE .)
    PLUSPLUS        reduce using rule 57 (EXPRESSION -> TRUE .)
    CLOSEBRACKET    reduce using rule 57 (EXPRESSION -> TRUE .)
    COMMA           reduce using rule 57 (EXPRESSION -> TRUE .)
    CLOSEPAR        reduce using rule 57 (EXPRESSION -> TRUE .)


state 93

    (58) EXPRESSION -> FALSE .

    SEMI            reduce using rule 58 (EXPRESSION -> FALSE .)
    LESSEQUAL       reduce using rule 58 (EXPRESSION -> FALSE .)
    ASSIGN          reduce using rule 58 (EXPRESSION -> FALSE .)
    EQUALS          reduce using rule 58 (EXPRESSION -> FALSE .)
    GREATEREQUAL    reduce using rule 58 (EXPRESSION -> FALSE .)
    GREATERTHAN     reduce using rule 58 (EXPRESSION -> FALSE .)
    LESSTHAN        reduce using rule 58 (EXPRESSION -> FALSE .)
    ADD             reduce using rule 58 (EXPRESSION -> FALSE .)
    MINUS           reduce using rule 58 (EXPRESSION -> FALSE .)
    MULT            reduce using rule 58 (EXPRESSION -> FALSE .)
    NOTEQUAL        reduce using rule 58 (EXPRESSION -> FALSE .)
    DIVIDE          reduce using rule 58 (EXPRESSION -> FALSE .)
    PEQUAL          reduce using rule 58 (EXPRESSION -> FALSE .)
    MEQUAL          reduce using rule 58 (EXPRESSION -> FALSE .)
    PLUSPLUS        reduce using rule 58 (EXPRESSION -> FALSE .)
    CLOSEBRACKET    reduce using rule 58 (EXPRESSION -> FALSE .)
    COMMA           reduce using rule 58 (EXPRESSION -> FALSE .)
    CLOSEPAR        reduce using rule 58 (EXPRESSION -> FALSE .)


state 94

    (59) EXPRESSION -> NULL .

    SEMI            reduce using rule 59 (EXPRESSION -> NULL .)
    LESSEQUAL       reduce using rule 59 (EXPRESSION -> NULL .)
    ASSIGN          reduce using rule 59 (EXPRESSION -> NULL .)
    EQUALS          reduce using rule 59 (EXPRESSION -> NULL .)
    GREATEREQUAL    reduce using rule 59 (EXPRESSION -> NULL .)
    GREATERTHAN     reduce using rule 59 (EXPRESSION -> NULL .)
    LESSTHAN        reduce using rule 59 (EXPRESSION -> NULL .)
    ADD             reduce using rule 59 (EXPRESSION -> NULL .)
    MINUS           reduce using rule 59 (EXPRESSION -> NULL .)
    MULT            reduce using rule 59 (EXPRESSION -> NULL .)
    NOTEQUAL        reduce using rule 59 (EXPRESSION -> NULL .)
    DIVIDE          reduce using rule 59 (EXPRESSION -> NULL .)
    PEQUAL          reduce using rule 59 (EXPRESSION -> NULL .)
    MEQUAL          reduce using rule 59 (EXPRESSION -> NULL .)
    PLUSPLUS        reduce using rule 59 (EXPRESSION -> NULL .)
    CLOSEBRACKET    reduce using rule 59 (EXPRESSION -> NULL .)
    COMMA           reduce using rule 59 (EXPRESSION -> NULL .)
    CLOSEPAR        reduce using rule 59 (EXPRESSION -> NULL .)


state 95

    (60) EXPRESSION -> NEW . ID OPENPAR CLOSEPAR
    (61) EXPRESSION -> NEW . INT OPENBRACKET EXPRESSION CLOSEBRACKET
    (62) EXPRESSION -> NEW . ID OPENBRACKET EXPRESSION CLOSEBRACKET

    ID              shift and go to state 127
    INT             shift and go to state 128


state 96

    (66) EXPRESSION -> NUMBER .

    SEMI            reduce using rule 66 (EXPRESSION -> NUMBER .)
    LESSEQUAL       reduce using rule 66 (EXPRESSION -> NUMBER .)
    ASSIGN          reduce using rule 66 (EXPRESSION -> NUMBER .)
    EQUALS          reduce using rule 66 (EXPRESSION -> NUMBER .)
    GREATEREQUAL    reduce using rule 66 (EXPRESSION -> NUMBER .)
    GREATERTHAN     reduce using rule 66 (EXPRESSION -> NUMBER .)
    LESSTHAN        reduce using rule 66 (EXPRESSION -> NUMBER .)
    ADD             reduce using rule 66 (EXPRESSION -> NUMBER .)
    MINUS           reduce using rule 66 (EXPRESSION -> NUMBER .)
    MULT            reduce using rule 66 (EXPRESSION -> NUMBER .)
    NOTEQUAL        reduce using rule 66 (EXPRESSION -> NUMBER .)
    DIVIDE          reduce using rule 66 (EXPRESSION -> NUMBER .)
    PEQUAL          reduce using rule 66 (EXPRESSION -> NUMBER .)
    MEQUAL          reduce using rule 66 (EXPRESSION -> NUMBER .)
    PLUSPLUS        reduce using rule 66 (EXPRESSION -> NUMBER .)
    CLOSEBRACKET    reduce using rule 66 (EXPRESSION -> NUMBER .)
    COMMA           reduce using rule 66 (EXPRESSION -> NUMBER .)
    CLOSEPAR        reduce using rule 66 (EXPRESSION -> NUMBER .)


state 97

    (67) EXPRESSION -> REFERENCE . OPENPAR ARGUMENTLIST CLOSEPAR
    (68) EXPRESSION -> REFERENCE . OPENPAR CLOSEPAR
    (69) EXPRESSION -> REFERENCE . OPENBRACKET EXPRESSION CLOSEBRACKET
    (70) EXPRESSION -> REFERENCE .
    (71) EXPRESSION -> REFERENCE . ASSIGN REFERENCE SEMI REFERENCE OP REFERENCE SEMI I
    (72) EXPRESSION -> REFERENCE . ASSIGN NUMBER SEMI REFERENCE OP NUMBER SEMI I
    (73) EXPRESSION -> REFERENCE . ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I

  ! shift/reduce conflict for ASSIGN resolved as shift
    OPENPAR         shift and go to state 129
    OPENBRACKET     shift and go to state 130
    SEMI            reduce using rule 70 (EXPRESSION -> REFERENCE .)
    LESSEQUAL       reduce using rule 70 (EXPRESSION -> REFERENCE .)
    EQUALS          reduce using rule 70 (EXPRESSION -> REFERENCE .)
    GREATEREQUAL    reduce using rule 70 (EXPRESSION -> REFERENCE .)
    GREATERTHAN     reduce using rule 70 (EXPRESSION -> REFERENCE .)
    LESSTHAN        reduce using rule 70 (EXPRESSION -> REFERENCE .)
    ADD             reduce using rule 70 (EXPRESSION -> REFERENCE .)
    MINUS           reduce using rule 70 (EXPRESSION -> REFERENCE .)
    MULT            reduce using rule 70 (EXPRESSION -> REFERENCE .)
    NOTEQUAL        reduce using rule 70 (EXPRESSION -> REFERENCE .)
    DIVIDE          reduce using rule 70 (EXPRESSION -> REFERENCE .)
    PEQUAL          reduce using rule 70 (EXPRESSION -> REFERENCE .)
    MEQUAL          reduce using rule 70 (EXPRESSION -> REFERENCE .)
    PLUSPLUS        reduce using rule 70 (EXPRESSION -> REFERENCE .)
    CLOSEBRACKET    reduce using rule 70 (EXPRESSION -> REFERENCE .)
    COMMA           reduce using rule 70 (EXPRESSION -> REFERENCE .)
    CLOSEPAR        reduce using rule 70 (EXPRESSION -> REFERENCE .)
    ASSIGN          shift and go to state 131

  ! ASSIGN          [ reduce using rule 70 (EXPRESSION -> REFERENCE .) ]


state 98

    (46) STATEMENT -> TYPE ID ASSIGN . EXPRESSION SEMI
    (57) EXPRESSION -> . TRUE
    (58) EXPRESSION -> . FALSE
    (59) EXPRESSION -> . NULL
    (60) EXPRESSION -> . NEW ID OPENPAR CLOSEPAR
    (61) EXPRESSION -> . NEW INT OPENBRACKET EXPRESSION CLOSEBRACKET
    (62) EXPRESSION -> . NEW ID OPENBRACKET EXPRESSION CLOSEBRACKET
    (63) EXPRESSION -> . OPENPAR EXPRESSION CLOSEPAR
    (64) EXPRESSION -> . EXPRESSION OP EXPRESSION
    (65) EXPRESSION -> . EXPRESSION OP EXPRESSION SEMI
    (66) EXPRESSION -> . NUMBER
    (67) EXPRESSION -> . REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR
    (68) EXPRESSION -> . REFERENCE OPENPAR CLOSEPAR
    (69) EXPRESSION -> . REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET
    (70) EXPRESSION -> . REFERENCE
    (71) EXPRESSION -> . REFERENCE ASSIGN REFERENCE SEMI REFERENCE OP REFERENCE SEMI I
    (72) EXPRESSION -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP NUMBER SEMI I
    (73) EXPRESSION -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I
    (41) REFERENCE -> . THIS G
    (42) REFERENCE -> . ID G

    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    NULL            shift and go to state 94
    NEW             shift and go to state 95
    OPENPAR         shift and go to state 90
    NUMBER          shift and go to state 96
    THIS            shift and go to state 61
    ID              shift and go to state 89

    EXPRESSION                     shift and go to state 132
    REFERENCE                      shift and go to state 97

state 99

    (47) STATEMENT -> REFERENCE OPENBRACKET EXPRESSION . CLOSEBRACKET ASSIGN EXPRESSION SEMI
    (64) EXPRESSION -> EXPRESSION . OP EXPRESSION
    (65) EXPRESSION -> EXPRESSION . OP EXPRESSION SEMI
    (74) OP -> . LESSEQUAL
    (75) OP -> . ASSIGN
    (76) OP -> . EQUALS
    (77) OP -> . GREATEREQUAL
    (78) OP -> . GREATERTHAN
    (79) OP -> . LESSTHAN
    (80) OP -> . ADD
    (81) OP -> . MINUS
    (82) OP -> . MULT
    (83) OP -> . NOTEQUAL
    (84) OP -> . DIVIDE
    (85) OP -> . PEQUAL
    (86) OP -> . MEQUAL
    (87) OP -> . PLUSPLUS

    CLOSEBRACKET    shift and go to state 133
    LESSEQUAL       shift and go to state 113
    ASSIGN          shift and go to state 114
    EQUALS          shift and go to state 115
    GREATEREQUAL    shift and go to state 116
    GREATERTHAN     shift and go to state 117
    LESSTHAN        shift and go to state 118
    ADD             shift and go to state 119
    MINUS           shift and go to state 120
    MULT            shift and go to state 121
    NOTEQUAL        shift and go to state 122
    DIVIDE          shift and go to state 123
    PEQUAL          shift and go to state 124
    MEQUAL          shift and go to state 125
    PLUSPLUS        shift and go to state 126

    OP                             shift and go to state 112

state 100

    (48) STATEMENT -> REFERENCE ASSIGN EXPRESSION . SEMI
    (64) EXPRESSION -> EXPRESSION . OP EXPRESSION
    (65) EXPRESSION -> EXPRESSION . OP EXPRESSION SEMI
    (74) OP -> . LESSEQUAL
    (75) OP -> . ASSIGN
    (76) OP -> . EQUALS
    (77) OP -> . GREATEREQUAL
    (78) OP -> . GREATERTHAN
    (79) OP -> . LESSTHAN
    (80) OP -> . ADD
    (81) OP -> . MINUS
    (82) OP -> . MULT
    (83) OP -> . NOTEQUAL
    (84) OP -> . DIVIDE
    (85) OP -> . PEQUAL
    (86) OP -> . MEQUAL
    (87) OP -> . PLUSPLUS

    SEMI            shift and go to state 134
    LESSEQUAL       shift and go to state 113
    ASSIGN          shift and go to state 114
    EQUALS          shift and go to state 115
    GREATEREQUAL    shift and go to state 116
    GREATERTHAN     shift and go to state 117
    LESSTHAN        shift and go to state 118
    ADD             shift and go to state 119
    MINUS           shift and go to state 120
    MULT            shift and go to state 121
    NOTEQUAL        shift and go to state 122
    DIVIDE          shift and go to state 123
    PEQUAL          shift and go to state 124
    MEQUAL          shift and go to state 125
    PLUSPLUS        shift and go to state 126

    OP                             shift and go to state 112

state 101

    (49) STATEMENT -> REFERENCE OPENPAR CLOSEPAR . SEMI

    SEMI            shift and go to state 135


state 102

    (50) STATEMENT -> REFERENCE OPENPAR ARGUMENTLIST . CLOSEPAR SEMI

    CLOSEPAR        shift and go to state 136


state 103

    (38) ARGUMENTLIST -> EXPRESSION . E
    (64) EXPRESSION -> EXPRESSION . OP EXPRESSION
    (65) EXPRESSION -> EXPRESSION . OP EXPRESSION SEMI
    (39) E -> . COMMA EXPRESSION
    (40) E -> . EMPTY
    (74) OP -> . LESSEQUAL
    (75) OP -> . ASSIGN
    (76) OP -> . EQUALS
    (77) OP -> . GREATEREQUAL
    (78) OP -> . GREATERTHAN
    (79) OP -> . LESSTHAN
    (80) OP -> . ADD
    (81) OP -> . MINUS
    (82) OP -> . MULT
    (83) OP -> . NOTEQUAL
    (84) OP -> . DIVIDE
    (85) OP -> . PEQUAL
    (86) OP -> . MEQUAL
    (87) OP -> . PLUSPLUS
    (21) EMPTY -> .

    COMMA           shift and go to state 138
    LESSEQUAL       shift and go to state 113
    ASSIGN          shift and go to state 114
    EQUALS          shift and go to state 115
    GREATEREQUAL    shift and go to state 116
    GREATERTHAN     shift and go to state 117
    LESSTHAN        shift and go to state 118
    ADD             shift and go to state 119
    MINUS           shift and go to state 120
    MULT            shift and go to state 121
    NOTEQUAL        shift and go to state 122
    DIVIDE          shift and go to state 123
    PEQUAL          shift and go to state 124
    MEQUAL          shift and go to state 125
    PLUSPLUS        shift and go to state 126
    CLOSEPAR        reduce using rule 21 (EMPTY -> .)

    E                              shift and go to state 137
    OP                             shift and go to state 112
    EMPTY                          shift and go to state 139

state 104

    (51) STATEMENT -> IF OPENPAR EXPRESSION . CLOSEPAR STATEMENT ELSE STATEMENT
    (52) STATEMENT -> IF OPENPAR EXPRESSION . CLOSEPAR STATEMENT
    (64) EXPRESSION -> EXPRESSION . OP EXPRESSION
    (65) EXPRESSION -> EXPRESSION . OP EXPRESSION SEMI
    (74) OP -> . LESSEQUAL
    (75) OP -> . ASSIGN
    (76) OP -> . EQUALS
    (77) OP -> . GREATEREQUAL
    (78) OP -> . GREATERTHAN
    (79) OP -> . LESSTHAN
    (80) OP -> . ADD
    (81) OP -> . MINUS
    (82) OP -> . MULT
    (83) OP -> . NOTEQUAL
    (84) OP -> . DIVIDE
    (85) OP -> . PEQUAL
    (86) OP -> . MEQUAL
    (87) OP -> . PLUSPLUS

    CLOSEPAR        shift and go to state 140
    LESSEQUAL       shift and go to state 113
    ASSIGN          shift and go to state 114
    EQUALS          shift and go to state 115
    GREATEREQUAL    shift and go to state 116
    GREATERTHAN     shift and go to state 117
    LESSTHAN        shift and go to state 118
    ADD             shift and go to state 119
    MINUS           shift and go to state 120
    MULT            shift and go to state 121
    NOTEQUAL        shift and go to state 122
    DIVIDE          shift and go to state 123
    PEQUAL          shift and go to state 124
    MEQUAL          shift and go to state 125
    PLUSPLUS        shift and go to state 126

    OP                             shift and go to state 112

state 105

    (53) STATEMENT -> FOR OPENPAR EXPRESSION . CLOSEPAR STATEMENT
    (64) EXPRESSION -> EXPRESSION . OP EXPRESSION
    (65) EXPRESSION -> EXPRESSION . OP EXPRESSION SEMI
    (74) OP -> . LESSEQUAL
    (75) OP -> . ASSIGN
    (76) OP -> . EQUALS
    (77) OP -> . GREATEREQUAL
    (78) OP -> . GREATERTHAN
    (79) OP -> . LESSTHAN
    (80) OP -> . ADD
    (81) OP -> . MINUS
    (82) OP -> . MULT
    (83) OP -> . NOTEQUAL
    (84) OP -> . DIVIDE
    (85) OP -> . PEQUAL
    (86) OP -> . MEQUAL
    (87) OP -> . PLUSPLUS

    CLOSEPAR        shift and go to state 141
    LESSEQUAL       shift and go to state 113
    ASSIGN          shift and go to state 114
    EQUALS          shift and go to state 115
    GREATEREQUAL    shift and go to state 116
    GREATERTHAN     shift and go to state 117
    LESSTHAN        shift and go to state 118
    ADD             shift and go to state 119
    MINUS           shift and go to state 120
    MULT            shift and go to state 121
    NOTEQUAL        shift and go to state 122
    DIVIDE          shift and go to state 123
    PEQUAL          shift and go to state 124
    MEQUAL          shift and go to state 125
    PLUSPLUS        shift and go to state 126

    OP                             shift and go to state 112

state 106

    (54) STATEMENT -> WHILE OPENPAR EXPRESSION . CLOSEPAR STATEMENT
    (64) EXPRESSION -> EXPRESSION . OP EXPRESSION
    (65) EXPRESSION -> EXPRESSION . OP EXPRESSION SEMI
    (74) OP -> . LESSEQUAL
    (75) OP -> . ASSIGN
    (76) OP -> . EQUALS
    (77) OP -> . GREATEREQUAL
    (78) OP -> . GREATERTHAN
    (79) OP -> . LESSTHAN
    (80) OP -> . ADD
    (81) OP -> . MINUS
    (82) OP -> . MULT
    (83) OP -> . NOTEQUAL
    (84) OP -> . DIVIDE
    (85) OP -> . PEQUAL
    (86) OP -> . MEQUAL
    (87) OP -> . PLUSPLUS

    CLOSEPAR        shift and go to state 142
    LESSEQUAL       shift and go to state 113
    ASSIGN          shift and go to state 114
    EQUALS          shift and go to state 115
    GREATEREQUAL    shift and go to state 116
    GREATERTHAN     shift and go to state 117
    LESSTHAN        shift and go to state 118
    ADD             shift and go to state 119
    MINUS           shift and go to state 120
    MULT            shift and go to state 121
    NOTEQUAL        shift and go to state 122
    DIVIDE          shift and go to state 123
    PEQUAL          shift and go to state 124
    MEQUAL          shift and go to state 125
    PLUSPLUS        shift and go to state 126

    OP                             shift and go to state 112

state 107

    (36) D -> COMMA TYPE ID . D
    (36) D -> . COMMA TYPE ID D
    (37) D -> . EMPTY
    (21) EMPTY -> .

    COMMA           shift and go to state 63
    CLOSEPAR        reduce using rule 21 (EMPTY -> .)

    D                              shift and go to state 143
    EMPTY                          shift and go to state 64

state 108

    (9) METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B RETURN EXPRESSION . SEMI CLOSEAKOL
    (64) EXPRESSION -> EXPRESSION . OP EXPRESSION
    (65) EXPRESSION -> EXPRESSION . OP EXPRESSION SEMI
    (74) OP -> . LESSEQUAL
    (75) OP -> . ASSIGN
    (76) OP -> . EQUALS
    (77) OP -> . GREATEREQUAL
    (78) OP -> . GREATERTHAN
    (79) OP -> . LESSTHAN
    (80) OP -> . ADD
    (81) OP -> . MINUS
    (82) OP -> . MULT
    (83) OP -> . NOTEQUAL
    (84) OP -> . DIVIDE
    (85) OP -> . PEQUAL
    (86) OP -> . MEQUAL
    (87) OP -> . PLUSPLUS

    SEMI            shift and go to state 144
    LESSEQUAL       shift and go to state 113
    ASSIGN          shift and go to state 114
    EQUALS          shift and go to state 115
    GREATEREQUAL    shift and go to state 116
    GREATERTHAN     shift and go to state 117
    LESSTHAN        shift and go to state 118
    ADD             shift and go to state 119
    MINUS           shift and go to state 120
    MULT            shift and go to state 121
    NOTEQUAL        shift and go to state 122
    DIVIDE          shift and go to state 123
    PEQUAL          shift and go to state 124
    MEQUAL          shift and go to state 125
    PLUSPLUS        shift and go to state 126

    OP                             shift and go to state 112

state 109

    (43) G -> DOT ID G .

    OPENBRACKET     reduce using rule 43 (G -> DOT ID G .)
    ASSIGN          reduce using rule 43 (G -> DOT ID G .)
    OPENPAR         reduce using rule 43 (G -> DOT ID G .)
    SEMI            reduce using rule 43 (G -> DOT ID G .)
    LESSEQUAL       reduce using rule 43 (G -> DOT ID G .)
    EQUALS          reduce using rule 43 (G -> DOT ID G .)
    GREATEREQUAL    reduce using rule 43 (G -> DOT ID G .)
    GREATERTHAN     reduce using rule 43 (G -> DOT ID G .)
    LESSTHAN        reduce using rule 43 (G -> DOT ID G .)
    ADD             reduce using rule 43 (G -> DOT ID G .)
    MINUS           reduce using rule 43 (G -> DOT ID G .)
    MULT            reduce using rule 43 (G -> DOT ID G .)
    NOTEQUAL        reduce using rule 43 (G -> DOT ID G .)
    DIVIDE          reduce using rule 43 (G -> DOT ID G .)
    PEQUAL          reduce using rule 43 (G -> DOT ID G .)
    MEQUAL          reduce using rule 43 (G -> DOT ID G .)
    PLUSPLUS        reduce using rule 43 (G -> DOT ID G .)
    CLOSEBRACKET    reduce using rule 43 (G -> DOT ID G .)
    COMMA           reduce using rule 43 (G -> DOT ID G .)
    CLOSEPAR        reduce using rule 43 (G -> DOT ID G .)


state 110

    (63) EXPRESSION -> OPENPAR EXPRESSION . CLOSEPAR
    (64) EXPRESSION -> EXPRESSION . OP EXPRESSION
    (65) EXPRESSION -> EXPRESSION . OP EXPRESSION SEMI
    (74) OP -> . LESSEQUAL
    (75) OP -> . ASSIGN
    (76) OP -> . EQUALS
    (77) OP -> . GREATEREQUAL
    (78) OP -> . GREATERTHAN
    (79) OP -> . LESSTHAN
    (80) OP -> . ADD
    (81) OP -> . MINUS
    (82) OP -> . MULT
    (83) OP -> . NOTEQUAL
    (84) OP -> . DIVIDE
    (85) OP -> . PEQUAL
    (86) OP -> . MEQUAL
    (87) OP -> . PLUSPLUS

    CLOSEPAR        shift and go to state 145
    LESSEQUAL       shift and go to state 113
    ASSIGN          shift and go to state 114
    EQUALS          shift and go to state 115
    GREATEREQUAL    shift and go to state 116
    GREATERTHAN     shift and go to state 117
    LESSTHAN        shift and go to state 118
    ADD             shift and go to state 119
    MINUS           shift and go to state 120
    MULT            shift and go to state 121
    NOTEQUAL        shift and go to state 122
    DIVIDE          shift and go to state 123
    PEQUAL          shift and go to state 124
    MEQUAL          shift and go to state 125
    PLUSPLUS        shift and go to state 126

    OP                             shift and go to state 112

state 111

    (10) METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI . CLOSEAKOL

    CLOSEAKOL       shift and go to state 146


state 112

    (64) EXPRESSION -> EXPRESSION OP . EXPRESSION
    (65) EXPRESSION -> EXPRESSION OP . EXPRESSION SEMI
    (57) EXPRESSION -> . TRUE
    (58) EXPRESSION -> . FALSE
    (59) EXPRESSION -> . NULL
    (60) EXPRESSION -> . NEW ID OPENPAR CLOSEPAR
    (61) EXPRESSION -> . NEW INT OPENBRACKET EXPRESSION CLOSEBRACKET
    (62) EXPRESSION -> . NEW ID OPENBRACKET EXPRESSION CLOSEBRACKET
    (63) EXPRESSION -> . OPENPAR EXPRESSION CLOSEPAR
    (64) EXPRESSION -> . EXPRESSION OP EXPRESSION
    (65) EXPRESSION -> . EXPRESSION OP EXPRESSION SEMI
    (66) EXPRESSION -> . NUMBER
    (67) EXPRESSION -> . REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR
    (68) EXPRESSION -> . REFERENCE OPENPAR CLOSEPAR
    (69) EXPRESSION -> . REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET
    (70) EXPRESSION -> . REFERENCE
    (71) EXPRESSION -> . REFERENCE ASSIGN REFERENCE SEMI REFERENCE OP REFERENCE SEMI I
    (72) EXPRESSION -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP NUMBER SEMI I
    (73) EXPRESSION -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I
    (41) REFERENCE -> . THIS G
    (42) REFERENCE -> . ID G

    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    NULL            shift and go to state 94
    NEW             shift and go to state 95
    OPENPAR         shift and go to state 90
    NUMBER          shift and go to state 96
    THIS            shift and go to state 61
    ID              shift and go to state 89

    EXPRESSION                     shift and go to state 147
    REFERENCE                      shift and go to state 97

state 113

    (74) OP -> LESSEQUAL .

    TRUE            reduce using rule 74 (OP -> LESSEQUAL .)
    FALSE           reduce using rule 74 (OP -> LESSEQUAL .)
    NULL            reduce using rule 74 (OP -> LESSEQUAL .)
    NEW             reduce using rule 74 (OP -> LESSEQUAL .)
    OPENPAR         reduce using rule 74 (OP -> LESSEQUAL .)
    NUMBER          reduce using rule 74 (OP -> LESSEQUAL .)
    THIS            reduce using rule 74 (OP -> LESSEQUAL .)
    ID              reduce using rule 74 (OP -> LESSEQUAL .)
    SEMI            reduce using rule 74 (OP -> LESSEQUAL .)
    LESSEQUAL       reduce using rule 74 (OP -> LESSEQUAL .)
    ASSIGN          reduce using rule 74 (OP -> LESSEQUAL .)
    EQUALS          reduce using rule 74 (OP -> LESSEQUAL .)
    GREATEREQUAL    reduce using rule 74 (OP -> LESSEQUAL .)
    GREATERTHAN     reduce using rule 74 (OP -> LESSEQUAL .)
    LESSTHAN        reduce using rule 74 (OP -> LESSEQUAL .)
    ADD             reduce using rule 74 (OP -> LESSEQUAL .)
    MINUS           reduce using rule 74 (OP -> LESSEQUAL .)
    MULT            reduce using rule 74 (OP -> LESSEQUAL .)
    NOTEQUAL        reduce using rule 74 (OP -> LESSEQUAL .)
    DIVIDE          reduce using rule 74 (OP -> LESSEQUAL .)
    PEQUAL          reduce using rule 74 (OP -> LESSEQUAL .)
    MEQUAL          reduce using rule 74 (OP -> LESSEQUAL .)
    PLUSPLUS        reduce using rule 74 (OP -> LESSEQUAL .)
    CLOSEBRACKET    reduce using rule 74 (OP -> LESSEQUAL .)
    COMMA           reduce using rule 74 (OP -> LESSEQUAL .)
    CLOSEPAR        reduce using rule 74 (OP -> LESSEQUAL .)


state 114

    (75) OP -> ASSIGN .

    TRUE            reduce using rule 75 (OP -> ASSIGN .)
    FALSE           reduce using rule 75 (OP -> ASSIGN .)
    NULL            reduce using rule 75 (OP -> ASSIGN .)
    NEW             reduce using rule 75 (OP -> ASSIGN .)
    OPENPAR         reduce using rule 75 (OP -> ASSIGN .)
    NUMBER          reduce using rule 75 (OP -> ASSIGN .)
    THIS            reduce using rule 75 (OP -> ASSIGN .)
    ID              reduce using rule 75 (OP -> ASSIGN .)
    SEMI            reduce using rule 75 (OP -> ASSIGN .)
    LESSEQUAL       reduce using rule 75 (OP -> ASSIGN .)
    ASSIGN          reduce using rule 75 (OP -> ASSIGN .)
    EQUALS          reduce using rule 75 (OP -> ASSIGN .)
    GREATEREQUAL    reduce using rule 75 (OP -> ASSIGN .)
    GREATERTHAN     reduce using rule 75 (OP -> ASSIGN .)
    LESSTHAN        reduce using rule 75 (OP -> ASSIGN .)
    ADD             reduce using rule 75 (OP -> ASSIGN .)
    MINUS           reduce using rule 75 (OP -> ASSIGN .)
    MULT            reduce using rule 75 (OP -> ASSIGN .)
    NOTEQUAL        reduce using rule 75 (OP -> ASSIGN .)
    DIVIDE          reduce using rule 75 (OP -> ASSIGN .)
    PEQUAL          reduce using rule 75 (OP -> ASSIGN .)
    MEQUAL          reduce using rule 75 (OP -> ASSIGN .)
    PLUSPLUS        reduce using rule 75 (OP -> ASSIGN .)
    CLOSEBRACKET    reduce using rule 75 (OP -> ASSIGN .)
    COMMA           reduce using rule 75 (OP -> ASSIGN .)
    CLOSEPAR        reduce using rule 75 (OP -> ASSIGN .)


state 115

    (76) OP -> EQUALS .

    TRUE            reduce using rule 76 (OP -> EQUALS .)
    FALSE           reduce using rule 76 (OP -> EQUALS .)
    NULL            reduce using rule 76 (OP -> EQUALS .)
    NEW             reduce using rule 76 (OP -> EQUALS .)
    OPENPAR         reduce using rule 76 (OP -> EQUALS .)
    NUMBER          reduce using rule 76 (OP -> EQUALS .)
    THIS            reduce using rule 76 (OP -> EQUALS .)
    ID              reduce using rule 76 (OP -> EQUALS .)
    SEMI            reduce using rule 76 (OP -> EQUALS .)
    LESSEQUAL       reduce using rule 76 (OP -> EQUALS .)
    ASSIGN          reduce using rule 76 (OP -> EQUALS .)
    EQUALS          reduce using rule 76 (OP -> EQUALS .)
    GREATEREQUAL    reduce using rule 76 (OP -> EQUALS .)
    GREATERTHAN     reduce using rule 76 (OP -> EQUALS .)
    LESSTHAN        reduce using rule 76 (OP -> EQUALS .)
    ADD             reduce using rule 76 (OP -> EQUALS .)
    MINUS           reduce using rule 76 (OP -> EQUALS .)
    MULT            reduce using rule 76 (OP -> EQUALS .)
    NOTEQUAL        reduce using rule 76 (OP -> EQUALS .)
    DIVIDE          reduce using rule 76 (OP -> EQUALS .)
    PEQUAL          reduce using rule 76 (OP -> EQUALS .)
    MEQUAL          reduce using rule 76 (OP -> EQUALS .)
    PLUSPLUS        reduce using rule 76 (OP -> EQUALS .)
    CLOSEBRACKET    reduce using rule 76 (OP -> EQUALS .)
    COMMA           reduce using rule 76 (OP -> EQUALS .)
    CLOSEPAR        reduce using rule 76 (OP -> EQUALS .)


state 116

    (77) OP -> GREATEREQUAL .

    TRUE            reduce using rule 77 (OP -> GREATEREQUAL .)
    FALSE           reduce using rule 77 (OP -> GREATEREQUAL .)
    NULL            reduce using rule 77 (OP -> GREATEREQUAL .)
    NEW             reduce using rule 77 (OP -> GREATEREQUAL .)
    OPENPAR         reduce using rule 77 (OP -> GREATEREQUAL .)
    NUMBER          reduce using rule 77 (OP -> GREATEREQUAL .)
    THIS            reduce using rule 77 (OP -> GREATEREQUAL .)
    ID              reduce using rule 77 (OP -> GREATEREQUAL .)
    SEMI            reduce using rule 77 (OP -> GREATEREQUAL .)
    LESSEQUAL       reduce using rule 77 (OP -> GREATEREQUAL .)
    ASSIGN          reduce using rule 77 (OP -> GREATEREQUAL .)
    EQUALS          reduce using rule 77 (OP -> GREATEREQUAL .)
    GREATEREQUAL    reduce using rule 77 (OP -> GREATEREQUAL .)
    GREATERTHAN     reduce using rule 77 (OP -> GREATEREQUAL .)
    LESSTHAN        reduce using rule 77 (OP -> GREATEREQUAL .)
    ADD             reduce using rule 77 (OP -> GREATEREQUAL .)
    MINUS           reduce using rule 77 (OP -> GREATEREQUAL .)
    MULT            reduce using rule 77 (OP -> GREATEREQUAL .)
    NOTEQUAL        reduce using rule 77 (OP -> GREATEREQUAL .)
    DIVIDE          reduce using rule 77 (OP -> GREATEREQUAL .)
    PEQUAL          reduce using rule 77 (OP -> GREATEREQUAL .)
    MEQUAL          reduce using rule 77 (OP -> GREATEREQUAL .)
    PLUSPLUS        reduce using rule 77 (OP -> GREATEREQUAL .)
    CLOSEBRACKET    reduce using rule 77 (OP -> GREATEREQUAL .)
    COMMA           reduce using rule 77 (OP -> GREATEREQUAL .)
    CLOSEPAR        reduce using rule 77 (OP -> GREATEREQUAL .)


state 117

    (78) OP -> GREATERTHAN .

    TRUE            reduce using rule 78 (OP -> GREATERTHAN .)
    FALSE           reduce using rule 78 (OP -> GREATERTHAN .)
    NULL            reduce using rule 78 (OP -> GREATERTHAN .)
    NEW             reduce using rule 78 (OP -> GREATERTHAN .)
    OPENPAR         reduce using rule 78 (OP -> GREATERTHAN .)
    NUMBER          reduce using rule 78 (OP -> GREATERTHAN .)
    THIS            reduce using rule 78 (OP -> GREATERTHAN .)
    ID              reduce using rule 78 (OP -> GREATERTHAN .)
    SEMI            reduce using rule 78 (OP -> GREATERTHAN .)
    LESSEQUAL       reduce using rule 78 (OP -> GREATERTHAN .)
    ASSIGN          reduce using rule 78 (OP -> GREATERTHAN .)
    EQUALS          reduce using rule 78 (OP -> GREATERTHAN .)
    GREATEREQUAL    reduce using rule 78 (OP -> GREATERTHAN .)
    GREATERTHAN     reduce using rule 78 (OP -> GREATERTHAN .)
    LESSTHAN        reduce using rule 78 (OP -> GREATERTHAN .)
    ADD             reduce using rule 78 (OP -> GREATERTHAN .)
    MINUS           reduce using rule 78 (OP -> GREATERTHAN .)
    MULT            reduce using rule 78 (OP -> GREATERTHAN .)
    NOTEQUAL        reduce using rule 78 (OP -> GREATERTHAN .)
    DIVIDE          reduce using rule 78 (OP -> GREATERTHAN .)
    PEQUAL          reduce using rule 78 (OP -> GREATERTHAN .)
    MEQUAL          reduce using rule 78 (OP -> GREATERTHAN .)
    PLUSPLUS        reduce using rule 78 (OP -> GREATERTHAN .)
    CLOSEBRACKET    reduce using rule 78 (OP -> GREATERTHAN .)
    COMMA           reduce using rule 78 (OP -> GREATERTHAN .)
    CLOSEPAR        reduce using rule 78 (OP -> GREATERTHAN .)


state 118

    (79) OP -> LESSTHAN .

    TRUE            reduce using rule 79 (OP -> LESSTHAN .)
    FALSE           reduce using rule 79 (OP -> LESSTHAN .)
    NULL            reduce using rule 79 (OP -> LESSTHAN .)
    NEW             reduce using rule 79 (OP -> LESSTHAN .)
    OPENPAR         reduce using rule 79 (OP -> LESSTHAN .)
    NUMBER          reduce using rule 79 (OP -> LESSTHAN .)
    THIS            reduce using rule 79 (OP -> LESSTHAN .)
    ID              reduce using rule 79 (OP -> LESSTHAN .)
    SEMI            reduce using rule 79 (OP -> LESSTHAN .)
    LESSEQUAL       reduce using rule 79 (OP -> LESSTHAN .)
    ASSIGN          reduce using rule 79 (OP -> LESSTHAN .)
    EQUALS          reduce using rule 79 (OP -> LESSTHAN .)
    GREATEREQUAL    reduce using rule 79 (OP -> LESSTHAN .)
    GREATERTHAN     reduce using rule 79 (OP -> LESSTHAN .)
    LESSTHAN        reduce using rule 79 (OP -> LESSTHAN .)
    ADD             reduce using rule 79 (OP -> LESSTHAN .)
    MINUS           reduce using rule 79 (OP -> LESSTHAN .)
    MULT            reduce using rule 79 (OP -> LESSTHAN .)
    NOTEQUAL        reduce using rule 79 (OP -> LESSTHAN .)
    DIVIDE          reduce using rule 79 (OP -> LESSTHAN .)
    PEQUAL          reduce using rule 79 (OP -> LESSTHAN .)
    MEQUAL          reduce using rule 79 (OP -> LESSTHAN .)
    PLUSPLUS        reduce using rule 79 (OP -> LESSTHAN .)
    CLOSEBRACKET    reduce using rule 79 (OP -> LESSTHAN .)
    COMMA           reduce using rule 79 (OP -> LESSTHAN .)
    CLOSEPAR        reduce using rule 79 (OP -> LESSTHAN .)


state 119

    (80) OP -> ADD .

    TRUE            reduce using rule 80 (OP -> ADD .)
    FALSE           reduce using rule 80 (OP -> ADD .)
    NULL            reduce using rule 80 (OP -> ADD .)
    NEW             reduce using rule 80 (OP -> ADD .)
    OPENPAR         reduce using rule 80 (OP -> ADD .)
    NUMBER          reduce using rule 80 (OP -> ADD .)
    THIS            reduce using rule 80 (OP -> ADD .)
    ID              reduce using rule 80 (OP -> ADD .)
    SEMI            reduce using rule 80 (OP -> ADD .)
    LESSEQUAL       reduce using rule 80 (OP -> ADD .)
    ASSIGN          reduce using rule 80 (OP -> ADD .)
    EQUALS          reduce using rule 80 (OP -> ADD .)
    GREATEREQUAL    reduce using rule 80 (OP -> ADD .)
    GREATERTHAN     reduce using rule 80 (OP -> ADD .)
    LESSTHAN        reduce using rule 80 (OP -> ADD .)
    ADD             reduce using rule 80 (OP -> ADD .)
    MINUS           reduce using rule 80 (OP -> ADD .)
    MULT            reduce using rule 80 (OP -> ADD .)
    NOTEQUAL        reduce using rule 80 (OP -> ADD .)
    DIVIDE          reduce using rule 80 (OP -> ADD .)
    PEQUAL          reduce using rule 80 (OP -> ADD .)
    MEQUAL          reduce using rule 80 (OP -> ADD .)
    PLUSPLUS        reduce using rule 80 (OP -> ADD .)
    CLOSEBRACKET    reduce using rule 80 (OP -> ADD .)
    COMMA           reduce using rule 80 (OP -> ADD .)
    CLOSEPAR        reduce using rule 80 (OP -> ADD .)


state 120

    (81) OP -> MINUS .

    TRUE            reduce using rule 81 (OP -> MINUS .)
    FALSE           reduce using rule 81 (OP -> MINUS .)
    NULL            reduce using rule 81 (OP -> MINUS .)
    NEW             reduce using rule 81 (OP -> MINUS .)
    OPENPAR         reduce using rule 81 (OP -> MINUS .)
    NUMBER          reduce using rule 81 (OP -> MINUS .)
    THIS            reduce using rule 81 (OP -> MINUS .)
    ID              reduce using rule 81 (OP -> MINUS .)
    SEMI            reduce using rule 81 (OP -> MINUS .)
    LESSEQUAL       reduce using rule 81 (OP -> MINUS .)
    ASSIGN          reduce using rule 81 (OP -> MINUS .)
    EQUALS          reduce using rule 81 (OP -> MINUS .)
    GREATEREQUAL    reduce using rule 81 (OP -> MINUS .)
    GREATERTHAN     reduce using rule 81 (OP -> MINUS .)
    LESSTHAN        reduce using rule 81 (OP -> MINUS .)
    ADD             reduce using rule 81 (OP -> MINUS .)
    MINUS           reduce using rule 81 (OP -> MINUS .)
    MULT            reduce using rule 81 (OP -> MINUS .)
    NOTEQUAL        reduce using rule 81 (OP -> MINUS .)
    DIVIDE          reduce using rule 81 (OP -> MINUS .)
    PEQUAL          reduce using rule 81 (OP -> MINUS .)
    MEQUAL          reduce using rule 81 (OP -> MINUS .)
    PLUSPLUS        reduce using rule 81 (OP -> MINUS .)
    CLOSEBRACKET    reduce using rule 81 (OP -> MINUS .)
    COMMA           reduce using rule 81 (OP -> MINUS .)
    CLOSEPAR        reduce using rule 81 (OP -> MINUS .)


state 121

    (82) OP -> MULT .

    TRUE            reduce using rule 82 (OP -> MULT .)
    FALSE           reduce using rule 82 (OP -> MULT .)
    NULL            reduce using rule 82 (OP -> MULT .)
    NEW             reduce using rule 82 (OP -> MULT .)
    OPENPAR         reduce using rule 82 (OP -> MULT .)
    NUMBER          reduce using rule 82 (OP -> MULT .)
    THIS            reduce using rule 82 (OP -> MULT .)
    ID              reduce using rule 82 (OP -> MULT .)
    SEMI            reduce using rule 82 (OP -> MULT .)
    LESSEQUAL       reduce using rule 82 (OP -> MULT .)
    ASSIGN          reduce using rule 82 (OP -> MULT .)
    EQUALS          reduce using rule 82 (OP -> MULT .)
    GREATEREQUAL    reduce using rule 82 (OP -> MULT .)
    GREATERTHAN     reduce using rule 82 (OP -> MULT .)
    LESSTHAN        reduce using rule 82 (OP -> MULT .)
    ADD             reduce using rule 82 (OP -> MULT .)
    MINUS           reduce using rule 82 (OP -> MULT .)
    MULT            reduce using rule 82 (OP -> MULT .)
    NOTEQUAL        reduce using rule 82 (OP -> MULT .)
    DIVIDE          reduce using rule 82 (OP -> MULT .)
    PEQUAL          reduce using rule 82 (OP -> MULT .)
    MEQUAL          reduce using rule 82 (OP -> MULT .)
    PLUSPLUS        reduce using rule 82 (OP -> MULT .)
    CLOSEBRACKET    reduce using rule 82 (OP -> MULT .)
    COMMA           reduce using rule 82 (OP -> MULT .)
    CLOSEPAR        reduce using rule 82 (OP -> MULT .)


state 122

    (83) OP -> NOTEQUAL .

    TRUE            reduce using rule 83 (OP -> NOTEQUAL .)
    FALSE           reduce using rule 83 (OP -> NOTEQUAL .)
    NULL            reduce using rule 83 (OP -> NOTEQUAL .)
    NEW             reduce using rule 83 (OP -> NOTEQUAL .)
    OPENPAR         reduce using rule 83 (OP -> NOTEQUAL .)
    NUMBER          reduce using rule 83 (OP -> NOTEQUAL .)
    THIS            reduce using rule 83 (OP -> NOTEQUAL .)
    ID              reduce using rule 83 (OP -> NOTEQUAL .)
    SEMI            reduce using rule 83 (OP -> NOTEQUAL .)
    LESSEQUAL       reduce using rule 83 (OP -> NOTEQUAL .)
    ASSIGN          reduce using rule 83 (OP -> NOTEQUAL .)
    EQUALS          reduce using rule 83 (OP -> NOTEQUAL .)
    GREATEREQUAL    reduce using rule 83 (OP -> NOTEQUAL .)
    GREATERTHAN     reduce using rule 83 (OP -> NOTEQUAL .)
    LESSTHAN        reduce using rule 83 (OP -> NOTEQUAL .)
    ADD             reduce using rule 83 (OP -> NOTEQUAL .)
    MINUS           reduce using rule 83 (OP -> NOTEQUAL .)
    MULT            reduce using rule 83 (OP -> NOTEQUAL .)
    NOTEQUAL        reduce using rule 83 (OP -> NOTEQUAL .)
    DIVIDE          reduce using rule 83 (OP -> NOTEQUAL .)
    PEQUAL          reduce using rule 83 (OP -> NOTEQUAL .)
    MEQUAL          reduce using rule 83 (OP -> NOTEQUAL .)
    PLUSPLUS        reduce using rule 83 (OP -> NOTEQUAL .)
    CLOSEBRACKET    reduce using rule 83 (OP -> NOTEQUAL .)
    COMMA           reduce using rule 83 (OP -> NOTEQUAL .)
    CLOSEPAR        reduce using rule 83 (OP -> NOTEQUAL .)


state 123

    (84) OP -> DIVIDE .

    TRUE            reduce using rule 84 (OP -> DIVIDE .)
    FALSE           reduce using rule 84 (OP -> DIVIDE .)
    NULL            reduce using rule 84 (OP -> DIVIDE .)
    NEW             reduce using rule 84 (OP -> DIVIDE .)
    OPENPAR         reduce using rule 84 (OP -> DIVIDE .)
    NUMBER          reduce using rule 84 (OP -> DIVIDE .)
    THIS            reduce using rule 84 (OP -> DIVIDE .)
    ID              reduce using rule 84 (OP -> DIVIDE .)
    SEMI            reduce using rule 84 (OP -> DIVIDE .)
    LESSEQUAL       reduce using rule 84 (OP -> DIVIDE .)
    ASSIGN          reduce using rule 84 (OP -> DIVIDE .)
    EQUALS          reduce using rule 84 (OP -> DIVIDE .)
    GREATEREQUAL    reduce using rule 84 (OP -> DIVIDE .)
    GREATERTHAN     reduce using rule 84 (OP -> DIVIDE .)
    LESSTHAN        reduce using rule 84 (OP -> DIVIDE .)
    ADD             reduce using rule 84 (OP -> DIVIDE .)
    MINUS           reduce using rule 84 (OP -> DIVIDE .)
    MULT            reduce using rule 84 (OP -> DIVIDE .)
    NOTEQUAL        reduce using rule 84 (OP -> DIVIDE .)
    DIVIDE          reduce using rule 84 (OP -> DIVIDE .)
    PEQUAL          reduce using rule 84 (OP -> DIVIDE .)
    MEQUAL          reduce using rule 84 (OP -> DIVIDE .)
    PLUSPLUS        reduce using rule 84 (OP -> DIVIDE .)
    CLOSEBRACKET    reduce using rule 84 (OP -> DIVIDE .)
    COMMA           reduce using rule 84 (OP -> DIVIDE .)
    CLOSEPAR        reduce using rule 84 (OP -> DIVIDE .)


state 124

    (85) OP -> PEQUAL .

    TRUE            reduce using rule 85 (OP -> PEQUAL .)
    FALSE           reduce using rule 85 (OP -> PEQUAL .)
    NULL            reduce using rule 85 (OP -> PEQUAL .)
    NEW             reduce using rule 85 (OP -> PEQUAL .)
    OPENPAR         reduce using rule 85 (OP -> PEQUAL .)
    NUMBER          reduce using rule 85 (OP -> PEQUAL .)
    THIS            reduce using rule 85 (OP -> PEQUAL .)
    ID              reduce using rule 85 (OP -> PEQUAL .)
    SEMI            reduce using rule 85 (OP -> PEQUAL .)
    LESSEQUAL       reduce using rule 85 (OP -> PEQUAL .)
    ASSIGN          reduce using rule 85 (OP -> PEQUAL .)
    EQUALS          reduce using rule 85 (OP -> PEQUAL .)
    GREATEREQUAL    reduce using rule 85 (OP -> PEQUAL .)
    GREATERTHAN     reduce using rule 85 (OP -> PEQUAL .)
    LESSTHAN        reduce using rule 85 (OP -> PEQUAL .)
    ADD             reduce using rule 85 (OP -> PEQUAL .)
    MINUS           reduce using rule 85 (OP -> PEQUAL .)
    MULT            reduce using rule 85 (OP -> PEQUAL .)
    NOTEQUAL        reduce using rule 85 (OP -> PEQUAL .)
    DIVIDE          reduce using rule 85 (OP -> PEQUAL .)
    PEQUAL          reduce using rule 85 (OP -> PEQUAL .)
    MEQUAL          reduce using rule 85 (OP -> PEQUAL .)
    PLUSPLUS        reduce using rule 85 (OP -> PEQUAL .)
    CLOSEBRACKET    reduce using rule 85 (OP -> PEQUAL .)
    COMMA           reduce using rule 85 (OP -> PEQUAL .)
    CLOSEPAR        reduce using rule 85 (OP -> PEQUAL .)


state 125

    (86) OP -> MEQUAL .

    TRUE            reduce using rule 86 (OP -> MEQUAL .)
    FALSE           reduce using rule 86 (OP -> MEQUAL .)
    NULL            reduce using rule 86 (OP -> MEQUAL .)
    NEW             reduce using rule 86 (OP -> MEQUAL .)
    OPENPAR         reduce using rule 86 (OP -> MEQUAL .)
    NUMBER          reduce using rule 86 (OP -> MEQUAL .)
    THIS            reduce using rule 86 (OP -> MEQUAL .)
    ID              reduce using rule 86 (OP -> MEQUAL .)
    SEMI            reduce using rule 86 (OP -> MEQUAL .)
    LESSEQUAL       reduce using rule 86 (OP -> MEQUAL .)
    ASSIGN          reduce using rule 86 (OP -> MEQUAL .)
    EQUALS          reduce using rule 86 (OP -> MEQUAL .)
    GREATEREQUAL    reduce using rule 86 (OP -> MEQUAL .)
    GREATERTHAN     reduce using rule 86 (OP -> MEQUAL .)
    LESSTHAN        reduce using rule 86 (OP -> MEQUAL .)
    ADD             reduce using rule 86 (OP -> MEQUAL .)
    MINUS           reduce using rule 86 (OP -> MEQUAL .)
    MULT            reduce using rule 86 (OP -> MEQUAL .)
    NOTEQUAL        reduce using rule 86 (OP -> MEQUAL .)
    DIVIDE          reduce using rule 86 (OP -> MEQUAL .)
    PEQUAL          reduce using rule 86 (OP -> MEQUAL .)
    MEQUAL          reduce using rule 86 (OP -> MEQUAL .)
    PLUSPLUS        reduce using rule 86 (OP -> MEQUAL .)
    CLOSEBRACKET    reduce using rule 86 (OP -> MEQUAL .)
    COMMA           reduce using rule 86 (OP -> MEQUAL .)
    CLOSEPAR        reduce using rule 86 (OP -> MEQUAL .)


state 126

    (87) OP -> PLUSPLUS .

    TRUE            reduce using rule 87 (OP -> PLUSPLUS .)
    FALSE           reduce using rule 87 (OP -> PLUSPLUS .)
    NULL            reduce using rule 87 (OP -> PLUSPLUS .)
    NEW             reduce using rule 87 (OP -> PLUSPLUS .)
    OPENPAR         reduce using rule 87 (OP -> PLUSPLUS .)
    NUMBER          reduce using rule 87 (OP -> PLUSPLUS .)
    THIS            reduce using rule 87 (OP -> PLUSPLUS .)
    ID              reduce using rule 87 (OP -> PLUSPLUS .)
    SEMI            reduce using rule 87 (OP -> PLUSPLUS .)
    LESSEQUAL       reduce using rule 87 (OP -> PLUSPLUS .)
    ASSIGN          reduce using rule 87 (OP -> PLUSPLUS .)
    EQUALS          reduce using rule 87 (OP -> PLUSPLUS .)
    GREATEREQUAL    reduce using rule 87 (OP -> PLUSPLUS .)
    GREATERTHAN     reduce using rule 87 (OP -> PLUSPLUS .)
    LESSTHAN        reduce using rule 87 (OP -> PLUSPLUS .)
    ADD             reduce using rule 87 (OP -> PLUSPLUS .)
    MINUS           reduce using rule 87 (OP -> PLUSPLUS .)
    MULT            reduce using rule 87 (OP -> PLUSPLUS .)
    NOTEQUAL        reduce using rule 87 (OP -> PLUSPLUS .)
    DIVIDE          reduce using rule 87 (OP -> PLUSPLUS .)
    PEQUAL          reduce using rule 87 (OP -> PLUSPLUS .)
    MEQUAL          reduce using rule 87 (OP -> PLUSPLUS .)
    PLUSPLUS        reduce using rule 87 (OP -> PLUSPLUS .)
    CLOSEBRACKET    reduce using rule 87 (OP -> PLUSPLUS .)
    COMMA           reduce using rule 87 (OP -> PLUSPLUS .)
    CLOSEPAR        reduce using rule 87 (OP -> PLUSPLUS .)


state 127

    (60) EXPRESSION -> NEW ID . OPENPAR CLOSEPAR
    (62) EXPRESSION -> NEW ID . OPENBRACKET EXPRESSION CLOSEBRACKET

    OPENPAR         shift and go to state 148
    OPENBRACKET     shift and go to state 149


state 128

    (61) EXPRESSION -> NEW INT . OPENBRACKET EXPRESSION CLOSEBRACKET

    OPENBRACKET     shift and go to state 150


state 129

    (67) EXPRESSION -> REFERENCE OPENPAR . ARGUMENTLIST CLOSEPAR
    (68) EXPRESSION -> REFERENCE OPENPAR . CLOSEPAR
    (38) ARGUMENTLIST -> . EXPRESSION E
    (57) EXPRESSION -> . TRUE
    (58) EXPRESSION -> . FALSE
    (59) EXPRESSION -> . NULL
    (60) EXPRESSION -> . NEW ID OPENPAR CLOSEPAR
    (61) EXPRESSION -> . NEW INT OPENBRACKET EXPRESSION CLOSEBRACKET
    (62) EXPRESSION -> . NEW ID OPENBRACKET EXPRESSION CLOSEBRACKET
    (63) EXPRESSION -> . OPENPAR EXPRESSION CLOSEPAR
    (64) EXPRESSION -> . EXPRESSION OP EXPRESSION
    (65) EXPRESSION -> . EXPRESSION OP EXPRESSION SEMI
    (66) EXPRESSION -> . NUMBER
    (67) EXPRESSION -> . REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR
    (68) EXPRESSION -> . REFERENCE OPENPAR CLOSEPAR
    (69) EXPRESSION -> . REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET
    (70) EXPRESSION -> . REFERENCE
    (71) EXPRESSION -> . REFERENCE ASSIGN REFERENCE SEMI REFERENCE OP REFERENCE SEMI I
    (72) EXPRESSION -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP NUMBER SEMI I
    (73) EXPRESSION -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I
    (41) REFERENCE -> . THIS G
    (42) REFERENCE -> . ID G

    CLOSEPAR        shift and go to state 152
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    NULL            shift and go to state 94
    NEW             shift and go to state 95
    OPENPAR         shift and go to state 90
    NUMBER          shift and go to state 96
    THIS            shift and go to state 61
    ID              shift and go to state 89

    REFERENCE                      shift and go to state 97
    ARGUMENTLIST                   shift and go to state 151
    EXPRESSION                     shift and go to state 103

state 130

    (69) EXPRESSION -> REFERENCE OPENBRACKET . EXPRESSION CLOSEBRACKET
    (57) EXPRESSION -> . TRUE
    (58) EXPRESSION -> . FALSE
    (59) EXPRESSION -> . NULL
    (60) EXPRESSION -> . NEW ID OPENPAR CLOSEPAR
    (61) EXPRESSION -> . NEW INT OPENBRACKET EXPRESSION CLOSEBRACKET
    (62) EXPRESSION -> . NEW ID OPENBRACKET EXPRESSION CLOSEBRACKET
    (63) EXPRESSION -> . OPENPAR EXPRESSION CLOSEPAR
    (64) EXPRESSION -> . EXPRESSION OP EXPRESSION
    (65) EXPRESSION -> . EXPRESSION OP EXPRESSION SEMI
    (66) EXPRESSION -> . NUMBER
    (67) EXPRESSION -> . REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR
    (68) EXPRESSION -> . REFERENCE OPENPAR CLOSEPAR
    (69) EXPRESSION -> . REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET
    (70) EXPRESSION -> . REFERENCE
    (71) EXPRESSION -> . REFERENCE ASSIGN REFERENCE SEMI REFERENCE OP REFERENCE SEMI I
    (72) EXPRESSION -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP NUMBER SEMI I
    (73) EXPRESSION -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I
    (41) REFERENCE -> . THIS G
    (42) REFERENCE -> . ID G

    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    NULL            shift and go to state 94
    NEW             shift and go to state 95
    OPENPAR         shift and go to state 90
    NUMBER          shift and go to state 96
    THIS            shift and go to state 61
    ID              shift and go to state 89

    REFERENCE                      shift and go to state 97
    EXPRESSION                     shift and go to state 153

state 131

    (71) EXPRESSION -> REFERENCE ASSIGN . REFERENCE SEMI REFERENCE OP REFERENCE SEMI I
    (72) EXPRESSION -> REFERENCE ASSIGN . NUMBER SEMI REFERENCE OP NUMBER SEMI I
    (73) EXPRESSION -> REFERENCE ASSIGN . NUMBER SEMI REFERENCE OP REFERENCE SEMI I
    (41) REFERENCE -> . THIS G
    (42) REFERENCE -> . ID G

    NUMBER          shift and go to state 155
    THIS            shift and go to state 61
    ID              shift and go to state 89

    REFERENCE                      shift and go to state 154

state 132

    (46) STATEMENT -> TYPE ID ASSIGN EXPRESSION . SEMI
    (64) EXPRESSION -> EXPRESSION . OP EXPRESSION
    (65) EXPRESSION -> EXPRESSION . OP EXPRESSION SEMI
    (74) OP -> . LESSEQUAL
    (75) OP -> . ASSIGN
    (76) OP -> . EQUALS
    (77) OP -> . GREATEREQUAL
    (78) OP -> . GREATERTHAN
    (79) OP -> . LESSTHAN
    (80) OP -> . ADD
    (81) OP -> . MINUS
    (82) OP -> . MULT
    (83) OP -> . NOTEQUAL
    (84) OP -> . DIVIDE
    (85) OP -> . PEQUAL
    (86) OP -> . MEQUAL
    (87) OP -> . PLUSPLUS

    SEMI            shift and go to state 156
    LESSEQUAL       shift and go to state 113
    ASSIGN          shift and go to state 114
    EQUALS          shift and go to state 115
    GREATEREQUAL    shift and go to state 116
    GREATERTHAN     shift and go to state 117
    LESSTHAN        shift and go to state 118
    ADD             shift and go to state 119
    MINUS           shift and go to state 120
    MULT            shift and go to state 121
    NOTEQUAL        shift and go to state 122
    DIVIDE          shift and go to state 123
    PEQUAL          shift and go to state 124
    MEQUAL          shift and go to state 125
    PLUSPLUS        shift and go to state 126

    OP                             shift and go to state 112

state 133

    (47) STATEMENT -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET . ASSIGN EXPRESSION SEMI

    ASSIGN          shift and go to state 157


state 134

    (48) STATEMENT -> REFERENCE ASSIGN EXPRESSION SEMI .

    OPENAKOL        reduce using rule 48 (STATEMENT -> REFERENCE ASSIGN EXPRESSION SEMI .)
    IF              reduce using rule 48 (STATEMENT -> REFERENCE ASSIGN EXPRESSION SEMI .)
    FOR             reduce using rule 48 (STATEMENT -> REFERENCE ASSIGN EXPRESSION SEMI .)
    WHILE           reduce using rule 48 (STATEMENT -> REFERENCE ASSIGN EXPRESSION SEMI .)
    THIS            reduce using rule 48 (STATEMENT -> REFERENCE ASSIGN EXPRESSION SEMI .)
    ID              reduce using rule 48 (STATEMENT -> REFERENCE ASSIGN EXPRESSION SEMI .)
    INT             reduce using rule 48 (STATEMENT -> REFERENCE ASSIGN EXPRESSION SEMI .)
    BOOLEAN         reduce using rule 48 (STATEMENT -> REFERENCE ASSIGN EXPRESSION SEMI .)
    STRING          reduce using rule 48 (STATEMENT -> REFERENCE ASSIGN EXPRESSION SEMI .)
    DOUBLE          reduce using rule 48 (STATEMENT -> REFERENCE ASSIGN EXPRESSION SEMI .)
    CHARACTER       reduce using rule 48 (STATEMENT -> REFERENCE ASSIGN EXPRESSION SEMI .)
    FLOAT           reduce using rule 48 (STATEMENT -> REFERENCE ASSIGN EXPRESSION SEMI .)
    VOID            reduce using rule 48 (STATEMENT -> REFERENCE ASSIGN EXPRESSION SEMI .)
    RETURN          reduce using rule 48 (STATEMENT -> REFERENCE ASSIGN EXPRESSION SEMI .)
    CLOSEAKOL       reduce using rule 48 (STATEMENT -> REFERENCE ASSIGN EXPRESSION SEMI .)
    ELSE            reduce using rule 48 (STATEMENT -> REFERENCE ASSIGN EXPRESSION SEMI .)


state 135

    (49) STATEMENT -> REFERENCE OPENPAR CLOSEPAR SEMI .

    OPENAKOL        reduce using rule 49 (STATEMENT -> REFERENCE OPENPAR CLOSEPAR SEMI .)
    IF              reduce using rule 49 (STATEMENT -> REFERENCE OPENPAR CLOSEPAR SEMI .)
    FOR             reduce using rule 49 (STATEMENT -> REFERENCE OPENPAR CLOSEPAR SEMI .)
    WHILE           reduce using rule 49 (STATEMENT -> REFERENCE OPENPAR CLOSEPAR SEMI .)
    THIS            reduce using rule 49 (STATEMENT -> REFERENCE OPENPAR CLOSEPAR SEMI .)
    ID              reduce using rule 49 (STATEMENT -> REFERENCE OPENPAR CLOSEPAR SEMI .)
    INT             reduce using rule 49 (STATEMENT -> REFERENCE OPENPAR CLOSEPAR SEMI .)
    BOOLEAN         reduce using rule 49 (STATEMENT -> REFERENCE OPENPAR CLOSEPAR SEMI .)
    STRING          reduce using rule 49 (STATEMENT -> REFERENCE OPENPAR CLOSEPAR SEMI .)
    DOUBLE          reduce using rule 49 (STATEMENT -> REFERENCE OPENPAR CLOSEPAR SEMI .)
    CHARACTER       reduce using rule 49 (STATEMENT -> REFERENCE OPENPAR CLOSEPAR SEMI .)
    FLOAT           reduce using rule 49 (STATEMENT -> REFERENCE OPENPAR CLOSEPAR SEMI .)
    VOID            reduce using rule 49 (STATEMENT -> REFERENCE OPENPAR CLOSEPAR SEMI .)
    RETURN          reduce using rule 49 (STATEMENT -> REFERENCE OPENPAR CLOSEPAR SEMI .)
    CLOSEAKOL       reduce using rule 49 (STATEMENT -> REFERENCE OPENPAR CLOSEPAR SEMI .)
    ELSE            reduce using rule 49 (STATEMENT -> REFERENCE OPENPAR CLOSEPAR SEMI .)


state 136

    (50) STATEMENT -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR . SEMI

    SEMI            shift and go to state 158


state 137

    (38) ARGUMENTLIST -> EXPRESSION E .

    CLOSEPAR        reduce using rule 38 (ARGUMENTLIST -> EXPRESSION E .)


state 138

    (39) E -> COMMA . EXPRESSION
    (57) EXPRESSION -> . TRUE
    (58) EXPRESSION -> . FALSE
    (59) EXPRESSION -> . NULL
    (60) EXPRESSION -> . NEW ID OPENPAR CLOSEPAR
    (61) EXPRESSION -> . NEW INT OPENBRACKET EXPRESSION CLOSEBRACKET
    (62) EXPRESSION -> . NEW ID OPENBRACKET EXPRESSION CLOSEBRACKET
    (63) EXPRESSION -> . OPENPAR EXPRESSION CLOSEPAR
    (64) EXPRESSION -> . EXPRESSION OP EXPRESSION
    (65) EXPRESSION -> . EXPRESSION OP EXPRESSION SEMI
    (66) EXPRESSION -> . NUMBER
    (67) EXPRESSION -> . REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR
    (68) EXPRESSION -> . REFERENCE OPENPAR CLOSEPAR
    (69) EXPRESSION -> . REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET
    (70) EXPRESSION -> . REFERENCE
    (71) EXPRESSION -> . REFERENCE ASSIGN REFERENCE SEMI REFERENCE OP REFERENCE SEMI I
    (72) EXPRESSION -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP NUMBER SEMI I
    (73) EXPRESSION -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I
    (41) REFERENCE -> . THIS G
    (42) REFERENCE -> . ID G

    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    NULL            shift and go to state 94
    NEW             shift and go to state 95
    OPENPAR         shift and go to state 90
    NUMBER          shift and go to state 96
    THIS            shift and go to state 61
    ID              shift and go to state 89

    EXPRESSION                     shift and go to state 159
    REFERENCE                      shift and go to state 97

state 139

    (40) E -> EMPTY .

    CLOSEPAR        reduce using rule 40 (E -> EMPTY .)


state 140

    (51) STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR . STATEMENT ELSE STATEMENT
    (52) STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR . STATEMENT
    (45) STATEMENT -> . OPENAKOL H CLOSEAKOL
    (46) STATEMENT -> . TYPE ID ASSIGN EXPRESSION SEMI
    (47) STATEMENT -> . REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI
    (48) STATEMENT -> . REFERENCE ASSIGN EXPRESSION SEMI
    (49) STATEMENT -> . REFERENCE OPENPAR CLOSEPAR SEMI
    (50) STATEMENT -> . REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI
    (51) STATEMENT -> . IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT
    (52) STATEMENT -> . IF OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (53) STATEMENT -> . FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (54) STATEMENT -> . WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (22) TYPE -> . PRIMTYPE
    (23) TYPE -> . CLASSTYPE
    (24) TYPE -> . ARRTYPE
    (41) REFERENCE -> . THIS G
    (42) REFERENCE -> . ID G
    (25) PRIMTYPE -> . INT
    (26) PRIMTYPE -> . BOOLEAN
    (27) PRIMTYPE -> . STRING
    (28) PRIMTYPE -> . DOUBLE
    (29) PRIMTYPE -> . CHARACTER
    (30) PRIMTYPE -> . FLOAT
    (31) PRIMTYPE -> . VOID
    (32) CLASSTYPE -> . ID
    (33) ARRTYPE -> . INT OPENBRACKET CLOSEBRACKET
    (34) ARRTYPE -> . CLASSTYPE OPENBRACKET CLOSEBRACKET

    OPENAKOL        shift and go to state 52
    IF              shift and go to state 58
    FOR             shift and go to state 59
    WHILE           shift and go to state 60
    THIS            shift and go to state 61
    ID              shift and go to state 51
    INT             shift and go to state 23
    BOOLEAN         shift and go to state 24
    STRING          shift and go to state 25
    DOUBLE          shift and go to state 26
    CHARACTER       shift and go to state 27
    FLOAT           shift and go to state 28
    VOID            shift and go to state 29

    STATEMENT                      shift and go to state 160
    TYPE                           shift and go to state 56
    REFERENCE                      shift and go to state 57
    PRIMTYPE                       shift and go to state 20
    CLASSTYPE                      shift and go to state 21
    ARRTYPE                        shift and go to state 22

state 141

    (53) STATEMENT -> FOR OPENPAR EXPRESSION CLOSEPAR . STATEMENT
    (45) STATEMENT -> . OPENAKOL H CLOSEAKOL
    (46) STATEMENT -> . TYPE ID ASSIGN EXPRESSION SEMI
    (47) STATEMENT -> . REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI
    (48) STATEMENT -> . REFERENCE ASSIGN EXPRESSION SEMI
    (49) STATEMENT -> . REFERENCE OPENPAR CLOSEPAR SEMI
    (50) STATEMENT -> . REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI
    (51) STATEMENT -> . IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT
    (52) STATEMENT -> . IF OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (53) STATEMENT -> . FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (54) STATEMENT -> . WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (22) TYPE -> . PRIMTYPE
    (23) TYPE -> . CLASSTYPE
    (24) TYPE -> . ARRTYPE
    (41) REFERENCE -> . THIS G
    (42) REFERENCE -> . ID G
    (25) PRIMTYPE -> . INT
    (26) PRIMTYPE -> . BOOLEAN
    (27) PRIMTYPE -> . STRING
    (28) PRIMTYPE -> . DOUBLE
    (29) PRIMTYPE -> . CHARACTER
    (30) PRIMTYPE -> . FLOAT
    (31) PRIMTYPE -> . VOID
    (32) CLASSTYPE -> . ID
    (33) ARRTYPE -> . INT OPENBRACKET CLOSEBRACKET
    (34) ARRTYPE -> . CLASSTYPE OPENBRACKET CLOSEBRACKET

    OPENAKOL        shift and go to state 52
    IF              shift and go to state 58
    FOR             shift and go to state 59
    WHILE           shift and go to state 60
    THIS            shift and go to state 61
    ID              shift and go to state 51
    INT             shift and go to state 23
    BOOLEAN         shift and go to state 24
    STRING          shift and go to state 25
    DOUBLE          shift and go to state 26
    CHARACTER       shift and go to state 27
    FLOAT           shift and go to state 28
    VOID            shift and go to state 29

    STATEMENT                      shift and go to state 161
    TYPE                           shift and go to state 56
    REFERENCE                      shift and go to state 57
    PRIMTYPE                       shift and go to state 20
    CLASSTYPE                      shift and go to state 21
    ARRTYPE                        shift and go to state 22

state 142

    (54) STATEMENT -> WHILE OPENPAR EXPRESSION CLOSEPAR . STATEMENT
    (45) STATEMENT -> . OPENAKOL H CLOSEAKOL
    (46) STATEMENT -> . TYPE ID ASSIGN EXPRESSION SEMI
    (47) STATEMENT -> . REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI
    (48) STATEMENT -> . REFERENCE ASSIGN EXPRESSION SEMI
    (49) STATEMENT -> . REFERENCE OPENPAR CLOSEPAR SEMI
    (50) STATEMENT -> . REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI
    (51) STATEMENT -> . IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT
    (52) STATEMENT -> . IF OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (53) STATEMENT -> . FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (54) STATEMENT -> . WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (22) TYPE -> . PRIMTYPE
    (23) TYPE -> . CLASSTYPE
    (24) TYPE -> . ARRTYPE
    (41) REFERENCE -> . THIS G
    (42) REFERENCE -> . ID G
    (25) PRIMTYPE -> . INT
    (26) PRIMTYPE -> . BOOLEAN
    (27) PRIMTYPE -> . STRING
    (28) PRIMTYPE -> . DOUBLE
    (29) PRIMTYPE -> . CHARACTER
    (30) PRIMTYPE -> . FLOAT
    (31) PRIMTYPE -> . VOID
    (32) CLASSTYPE -> . ID
    (33) ARRTYPE -> . INT OPENBRACKET CLOSEBRACKET
    (34) ARRTYPE -> . CLASSTYPE OPENBRACKET CLOSEBRACKET

    OPENAKOL        shift and go to state 52
    IF              shift and go to state 58
    FOR             shift and go to state 59
    WHILE           shift and go to state 60
    THIS            shift and go to state 61
    ID              shift and go to state 51
    INT             shift and go to state 23
    BOOLEAN         shift and go to state 24
    STRING          shift and go to state 25
    DOUBLE          shift and go to state 26
    CHARACTER       shift and go to state 27
    FLOAT           shift and go to state 28
    VOID            shift and go to state 29

    STATEMENT                      shift and go to state 162
    TYPE                           shift and go to state 56
    REFERENCE                      shift and go to state 57
    PRIMTYPE                       shift and go to state 20
    CLASSTYPE                      shift and go to state 21
    ARRTYPE                        shift and go to state 22

state 143

    (36) D -> COMMA TYPE ID D .

    CLOSEPAR        reduce using rule 36 (D -> COMMA TYPE ID D .)


state 144

    (9) METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI . CLOSEAKOL

    CLOSEAKOL       shift and go to state 163


state 145

    (63) EXPRESSION -> OPENPAR EXPRESSION CLOSEPAR .

    SEMI            reduce using rule 63 (EXPRESSION -> OPENPAR EXPRESSION CLOSEPAR .)
    LESSEQUAL       reduce using rule 63 (EXPRESSION -> OPENPAR EXPRESSION CLOSEPAR .)
    ASSIGN          reduce using rule 63 (EXPRESSION -> OPENPAR EXPRESSION CLOSEPAR .)
    EQUALS          reduce using rule 63 (EXPRESSION -> OPENPAR EXPRESSION CLOSEPAR .)
    GREATEREQUAL    reduce using rule 63 (EXPRESSION -> OPENPAR EXPRESSION CLOSEPAR .)
    GREATERTHAN     reduce using rule 63 (EXPRESSION -> OPENPAR EXPRESSION CLOSEPAR .)
    LESSTHAN        reduce using rule 63 (EXPRESSION -> OPENPAR EXPRESSION CLOSEPAR .)
    ADD             reduce using rule 63 (EXPRESSION -> OPENPAR EXPRESSION CLOSEPAR .)
    MINUS           reduce using rule 63 (EXPRESSION -> OPENPAR EXPRESSION CLOSEPAR .)
    MULT            reduce using rule 63 (EXPRESSION -> OPENPAR EXPRESSION CLOSEPAR .)
    NOTEQUAL        reduce using rule 63 (EXPRESSION -> OPENPAR EXPRESSION CLOSEPAR .)
    DIVIDE          reduce using rule 63 (EXPRESSION -> OPENPAR EXPRESSION CLOSEPAR .)
    PEQUAL          reduce using rule 63 (EXPRESSION -> OPENPAR EXPRESSION CLOSEPAR .)
    MEQUAL          reduce using rule 63 (EXPRESSION -> OPENPAR EXPRESSION CLOSEPAR .)
    PLUSPLUS        reduce using rule 63 (EXPRESSION -> OPENPAR EXPRESSION CLOSEPAR .)
    CLOSEBRACKET    reduce using rule 63 (EXPRESSION -> OPENPAR EXPRESSION CLOSEPAR .)
    COMMA           reduce using rule 63 (EXPRESSION -> OPENPAR EXPRESSION CLOSEPAR .)
    CLOSEPAR        reduce using rule 63 (EXPRESSION -> OPENPAR EXPRESSION CLOSEPAR .)


state 146

    (10) METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .

    STATIC          reduce using rule 10 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    PUBLIC          reduce using rule 10 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    PRIVATE         reduce using rule 10 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    INT             reduce using rule 10 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    BOOLEAN         reduce using rule 10 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    STRING          reduce using rule 10 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    DOUBLE          reduce using rule 10 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    CHARACTER       reduce using rule 10 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    FLOAT           reduce using rule 10 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    VOID            reduce using rule 10 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    ID              reduce using rule 10 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    CLOSEAKOL       reduce using rule 10 (METHODDECLARATION -> DECLARATORS ID OPENPAR CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)


state 147

    (64) EXPRESSION -> EXPRESSION OP EXPRESSION .
    (65) EXPRESSION -> EXPRESSION OP EXPRESSION . SEMI
    (64) EXPRESSION -> EXPRESSION . OP EXPRESSION
    (65) EXPRESSION -> EXPRESSION . OP EXPRESSION SEMI
    (74) OP -> . LESSEQUAL
    (75) OP -> . ASSIGN
    (76) OP -> . EQUALS
    (77) OP -> . GREATEREQUAL
    (78) OP -> . GREATERTHAN
    (79) OP -> . LESSTHAN
    (80) OP -> . ADD
    (81) OP -> . MINUS
    (82) OP -> . MULT
    (83) OP -> . NOTEQUAL
    (84) OP -> . DIVIDE
    (85) OP -> . PEQUAL
    (86) OP -> . MEQUAL
    (87) OP -> . PLUSPLUS

  ! shift/reduce conflict for SEMI resolved as shift
  ! shift/reduce conflict for LESSEQUAL resolved as shift
  ! shift/reduce conflict for ASSIGN resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PEQUAL resolved as shift
  ! shift/reduce conflict for MEQUAL resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
    CLOSEBRACKET    reduce using rule 64 (EXPRESSION -> EXPRESSION OP EXPRESSION .)
    COMMA           reduce using rule 64 (EXPRESSION -> EXPRESSION OP EXPRESSION .)
    CLOSEPAR        reduce using rule 64 (EXPRESSION -> EXPRESSION OP EXPRESSION .)
    SEMI            shift and go to state 164
    LESSEQUAL       shift and go to state 113
    ASSIGN          shift and go to state 114
    EQUALS          shift and go to state 115
    GREATEREQUAL    shift and go to state 116
    GREATERTHAN     shift and go to state 117
    LESSTHAN        shift and go to state 118
    ADD             shift and go to state 119
    MINUS           shift and go to state 120
    MULT            shift and go to state 121
    NOTEQUAL        shift and go to state 122
    DIVIDE          shift and go to state 123
    PEQUAL          shift and go to state 124
    MEQUAL          shift and go to state 125
    PLUSPLUS        shift and go to state 126

  ! SEMI            [ reduce using rule 64 (EXPRESSION -> EXPRESSION OP EXPRESSION .) ]
  ! LESSEQUAL       [ reduce using rule 64 (EXPRESSION -> EXPRESSION OP EXPRESSION .) ]
  ! ASSIGN          [ reduce using rule 64 (EXPRESSION -> EXPRESSION OP EXPRESSION .) ]
  ! EQUALS          [ reduce using rule 64 (EXPRESSION -> EXPRESSION OP EXPRESSION .) ]
  ! GREATEREQUAL    [ reduce using rule 64 (EXPRESSION -> EXPRESSION OP EXPRESSION .) ]
  ! GREATERTHAN     [ reduce using rule 64 (EXPRESSION -> EXPRESSION OP EXPRESSION .) ]
  ! LESSTHAN        [ reduce using rule 64 (EXPRESSION -> EXPRESSION OP EXPRESSION .) ]
  ! ADD             [ reduce using rule 64 (EXPRESSION -> EXPRESSION OP EXPRESSION .) ]
  ! MINUS           [ reduce using rule 64 (EXPRESSION -> EXPRESSION OP EXPRESSION .) ]
  ! MULT            [ reduce using rule 64 (EXPRESSION -> EXPRESSION OP EXPRESSION .) ]
  ! NOTEQUAL        [ reduce using rule 64 (EXPRESSION -> EXPRESSION OP EXPRESSION .) ]
  ! DIVIDE          [ reduce using rule 64 (EXPRESSION -> EXPRESSION OP EXPRESSION .) ]
  ! PEQUAL          [ reduce using rule 64 (EXPRESSION -> EXPRESSION OP EXPRESSION .) ]
  ! MEQUAL          [ reduce using rule 64 (EXPRESSION -> EXPRESSION OP EXPRESSION .) ]
  ! PLUSPLUS        [ reduce using rule 64 (EXPRESSION -> EXPRESSION OP EXPRESSION .) ]

    OP                             shift and go to state 112

state 148

    (60) EXPRESSION -> NEW ID OPENPAR . CLOSEPAR

    CLOSEPAR        shift and go to state 165


state 149

    (62) EXPRESSION -> NEW ID OPENBRACKET . EXPRESSION CLOSEBRACKET
    (57) EXPRESSION -> . TRUE
    (58) EXPRESSION -> . FALSE
    (59) EXPRESSION -> . NULL
    (60) EXPRESSION -> . NEW ID OPENPAR CLOSEPAR
    (61) EXPRESSION -> . NEW INT OPENBRACKET EXPRESSION CLOSEBRACKET
    (62) EXPRESSION -> . NEW ID OPENBRACKET EXPRESSION CLOSEBRACKET
    (63) EXPRESSION -> . OPENPAR EXPRESSION CLOSEPAR
    (64) EXPRESSION -> . EXPRESSION OP EXPRESSION
    (65) EXPRESSION -> . EXPRESSION OP EXPRESSION SEMI
    (66) EXPRESSION -> . NUMBER
    (67) EXPRESSION -> . REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR
    (68) EXPRESSION -> . REFERENCE OPENPAR CLOSEPAR
    (69) EXPRESSION -> . REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET
    (70) EXPRESSION -> . REFERENCE
    (71) EXPRESSION -> . REFERENCE ASSIGN REFERENCE SEMI REFERENCE OP REFERENCE SEMI I
    (72) EXPRESSION -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP NUMBER SEMI I
    (73) EXPRESSION -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I
    (41) REFERENCE -> . THIS G
    (42) REFERENCE -> . ID G

    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    NULL            shift and go to state 94
    NEW             shift and go to state 95
    OPENPAR         shift and go to state 90
    NUMBER          shift and go to state 96
    THIS            shift and go to state 61
    ID              shift and go to state 89

    EXPRESSION                     shift and go to state 166
    REFERENCE                      shift and go to state 97

state 150

    (61) EXPRESSION -> NEW INT OPENBRACKET . EXPRESSION CLOSEBRACKET
    (57) EXPRESSION -> . TRUE
    (58) EXPRESSION -> . FALSE
    (59) EXPRESSION -> . NULL
    (60) EXPRESSION -> . NEW ID OPENPAR CLOSEPAR
    (61) EXPRESSION -> . NEW INT OPENBRACKET EXPRESSION CLOSEBRACKET
    (62) EXPRESSION -> . NEW ID OPENBRACKET EXPRESSION CLOSEBRACKET
    (63) EXPRESSION -> . OPENPAR EXPRESSION CLOSEPAR
    (64) EXPRESSION -> . EXPRESSION OP EXPRESSION
    (65) EXPRESSION -> . EXPRESSION OP EXPRESSION SEMI
    (66) EXPRESSION -> . NUMBER
    (67) EXPRESSION -> . REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR
    (68) EXPRESSION -> . REFERENCE OPENPAR CLOSEPAR
    (69) EXPRESSION -> . REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET
    (70) EXPRESSION -> . REFERENCE
    (71) EXPRESSION -> . REFERENCE ASSIGN REFERENCE SEMI REFERENCE OP REFERENCE SEMI I
    (72) EXPRESSION -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP NUMBER SEMI I
    (73) EXPRESSION -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I
    (41) REFERENCE -> . THIS G
    (42) REFERENCE -> . ID G

    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    NULL            shift and go to state 94
    NEW             shift and go to state 95
    OPENPAR         shift and go to state 90
    NUMBER          shift and go to state 96
    THIS            shift and go to state 61
    ID              shift and go to state 89

    EXPRESSION                     shift and go to state 167
    REFERENCE                      shift and go to state 97

state 151

    (67) EXPRESSION -> REFERENCE OPENPAR ARGUMENTLIST . CLOSEPAR

    CLOSEPAR        shift and go to state 168


state 152

    (68) EXPRESSION -> REFERENCE OPENPAR CLOSEPAR .

    SEMI            reduce using rule 68 (EXPRESSION -> REFERENCE OPENPAR CLOSEPAR .)
    LESSEQUAL       reduce using rule 68 (EXPRESSION -> REFERENCE OPENPAR CLOSEPAR .)
    ASSIGN          reduce using rule 68 (EXPRESSION -> REFERENCE OPENPAR CLOSEPAR .)
    EQUALS          reduce using rule 68 (EXPRESSION -> REFERENCE OPENPAR CLOSEPAR .)
    GREATEREQUAL    reduce using rule 68 (EXPRESSION -> REFERENCE OPENPAR CLOSEPAR .)
    GREATERTHAN     reduce using rule 68 (EXPRESSION -> REFERENCE OPENPAR CLOSEPAR .)
    LESSTHAN        reduce using rule 68 (EXPRESSION -> REFERENCE OPENPAR CLOSEPAR .)
    ADD             reduce using rule 68 (EXPRESSION -> REFERENCE OPENPAR CLOSEPAR .)
    MINUS           reduce using rule 68 (EXPRESSION -> REFERENCE OPENPAR CLOSEPAR .)
    MULT            reduce using rule 68 (EXPRESSION -> REFERENCE OPENPAR CLOSEPAR .)
    NOTEQUAL        reduce using rule 68 (EXPRESSION -> REFERENCE OPENPAR CLOSEPAR .)
    DIVIDE          reduce using rule 68 (EXPRESSION -> REFERENCE OPENPAR CLOSEPAR .)
    PEQUAL          reduce using rule 68 (EXPRESSION -> REFERENCE OPENPAR CLOSEPAR .)
    MEQUAL          reduce using rule 68 (EXPRESSION -> REFERENCE OPENPAR CLOSEPAR .)
    PLUSPLUS        reduce using rule 68 (EXPRESSION -> REFERENCE OPENPAR CLOSEPAR .)
    CLOSEBRACKET    reduce using rule 68 (EXPRESSION -> REFERENCE OPENPAR CLOSEPAR .)
    COMMA           reduce using rule 68 (EXPRESSION -> REFERENCE OPENPAR CLOSEPAR .)
    CLOSEPAR        reduce using rule 68 (EXPRESSION -> REFERENCE OPENPAR CLOSEPAR .)


state 153

    (69) EXPRESSION -> REFERENCE OPENBRACKET EXPRESSION . CLOSEBRACKET
    (64) EXPRESSION -> EXPRESSION . OP EXPRESSION
    (65) EXPRESSION -> EXPRESSION . OP EXPRESSION SEMI
    (74) OP -> . LESSEQUAL
    (75) OP -> . ASSIGN
    (76) OP -> . EQUALS
    (77) OP -> . GREATEREQUAL
    (78) OP -> . GREATERTHAN
    (79) OP -> . LESSTHAN
    (80) OP -> . ADD
    (81) OP -> . MINUS
    (82) OP -> . MULT
    (83) OP -> . NOTEQUAL
    (84) OP -> . DIVIDE
    (85) OP -> . PEQUAL
    (86) OP -> . MEQUAL
    (87) OP -> . PLUSPLUS

    CLOSEBRACKET    shift and go to state 169
    LESSEQUAL       shift and go to state 113
    ASSIGN          shift and go to state 114
    EQUALS          shift and go to state 115
    GREATEREQUAL    shift and go to state 116
    GREATERTHAN     shift and go to state 117
    LESSTHAN        shift and go to state 118
    ADD             shift and go to state 119
    MINUS           shift and go to state 120
    MULT            shift and go to state 121
    NOTEQUAL        shift and go to state 122
    DIVIDE          shift and go to state 123
    PEQUAL          shift and go to state 124
    MEQUAL          shift and go to state 125
    PLUSPLUS        shift and go to state 126

    OP                             shift and go to state 112

state 154

    (71) EXPRESSION -> REFERENCE ASSIGN REFERENCE . SEMI REFERENCE OP REFERENCE SEMI I

    SEMI            shift and go to state 170


state 155

    (72) EXPRESSION -> REFERENCE ASSIGN NUMBER . SEMI REFERENCE OP NUMBER SEMI I
    (73) EXPRESSION -> REFERENCE ASSIGN NUMBER . SEMI REFERENCE OP REFERENCE SEMI I

    SEMI            shift and go to state 171


state 156

    (46) STATEMENT -> TYPE ID ASSIGN EXPRESSION SEMI .

    OPENAKOL        reduce using rule 46 (STATEMENT -> TYPE ID ASSIGN EXPRESSION SEMI .)
    IF              reduce using rule 46 (STATEMENT -> TYPE ID ASSIGN EXPRESSION SEMI .)
    FOR             reduce using rule 46 (STATEMENT -> TYPE ID ASSIGN EXPRESSION SEMI .)
    WHILE           reduce using rule 46 (STATEMENT -> TYPE ID ASSIGN EXPRESSION SEMI .)
    THIS            reduce using rule 46 (STATEMENT -> TYPE ID ASSIGN EXPRESSION SEMI .)
    ID              reduce using rule 46 (STATEMENT -> TYPE ID ASSIGN EXPRESSION SEMI .)
    INT             reduce using rule 46 (STATEMENT -> TYPE ID ASSIGN EXPRESSION SEMI .)
    BOOLEAN         reduce using rule 46 (STATEMENT -> TYPE ID ASSIGN EXPRESSION SEMI .)
    STRING          reduce using rule 46 (STATEMENT -> TYPE ID ASSIGN EXPRESSION SEMI .)
    DOUBLE          reduce using rule 46 (STATEMENT -> TYPE ID ASSIGN EXPRESSION SEMI .)
    CHARACTER       reduce using rule 46 (STATEMENT -> TYPE ID ASSIGN EXPRESSION SEMI .)
    FLOAT           reduce using rule 46 (STATEMENT -> TYPE ID ASSIGN EXPRESSION SEMI .)
    VOID            reduce using rule 46 (STATEMENT -> TYPE ID ASSIGN EXPRESSION SEMI .)
    RETURN          reduce using rule 46 (STATEMENT -> TYPE ID ASSIGN EXPRESSION SEMI .)
    CLOSEAKOL       reduce using rule 46 (STATEMENT -> TYPE ID ASSIGN EXPRESSION SEMI .)
    ELSE            reduce using rule 46 (STATEMENT -> TYPE ID ASSIGN EXPRESSION SEMI .)


state 157

    (47) STATEMENT -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN . EXPRESSION SEMI
    (57) EXPRESSION -> . TRUE
    (58) EXPRESSION -> . FALSE
    (59) EXPRESSION -> . NULL
    (60) EXPRESSION -> . NEW ID OPENPAR CLOSEPAR
    (61) EXPRESSION -> . NEW INT OPENBRACKET EXPRESSION CLOSEBRACKET
    (62) EXPRESSION -> . NEW ID OPENBRACKET EXPRESSION CLOSEBRACKET
    (63) EXPRESSION -> . OPENPAR EXPRESSION CLOSEPAR
    (64) EXPRESSION -> . EXPRESSION OP EXPRESSION
    (65) EXPRESSION -> . EXPRESSION OP EXPRESSION SEMI
    (66) EXPRESSION -> . NUMBER
    (67) EXPRESSION -> . REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR
    (68) EXPRESSION -> . REFERENCE OPENPAR CLOSEPAR
    (69) EXPRESSION -> . REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET
    (70) EXPRESSION -> . REFERENCE
    (71) EXPRESSION -> . REFERENCE ASSIGN REFERENCE SEMI REFERENCE OP REFERENCE SEMI I
    (72) EXPRESSION -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP NUMBER SEMI I
    (73) EXPRESSION -> . REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I
    (41) REFERENCE -> . THIS G
    (42) REFERENCE -> . ID G

    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    NULL            shift and go to state 94
    NEW             shift and go to state 95
    OPENPAR         shift and go to state 90
    NUMBER          shift and go to state 96
    THIS            shift and go to state 61
    ID              shift and go to state 89

    REFERENCE                      shift and go to state 97
    EXPRESSION                     shift and go to state 172

state 158

    (50) STATEMENT -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI .

    OPENAKOL        reduce using rule 50 (STATEMENT -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI .)
    IF              reduce using rule 50 (STATEMENT -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI .)
    FOR             reduce using rule 50 (STATEMENT -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI .)
    WHILE           reduce using rule 50 (STATEMENT -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI .)
    THIS            reduce using rule 50 (STATEMENT -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI .)
    ID              reduce using rule 50 (STATEMENT -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI .)
    INT             reduce using rule 50 (STATEMENT -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI .)
    BOOLEAN         reduce using rule 50 (STATEMENT -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI .)
    STRING          reduce using rule 50 (STATEMENT -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI .)
    DOUBLE          reduce using rule 50 (STATEMENT -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI .)
    CHARACTER       reduce using rule 50 (STATEMENT -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI .)
    FLOAT           reduce using rule 50 (STATEMENT -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI .)
    VOID            reduce using rule 50 (STATEMENT -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI .)
    RETURN          reduce using rule 50 (STATEMENT -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI .)
    CLOSEAKOL       reduce using rule 50 (STATEMENT -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI .)
    ELSE            reduce using rule 50 (STATEMENT -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI .)


state 159

    (39) E -> COMMA EXPRESSION .
    (64) EXPRESSION -> EXPRESSION . OP EXPRESSION
    (65) EXPRESSION -> EXPRESSION . OP EXPRESSION SEMI
    (74) OP -> . LESSEQUAL
    (75) OP -> . ASSIGN
    (76) OP -> . EQUALS
    (77) OP -> . GREATEREQUAL
    (78) OP -> . GREATERTHAN
    (79) OP -> . LESSTHAN
    (80) OP -> . ADD
    (81) OP -> . MINUS
    (82) OP -> . MULT
    (83) OP -> . NOTEQUAL
    (84) OP -> . DIVIDE
    (85) OP -> . PEQUAL
    (86) OP -> . MEQUAL
    (87) OP -> . PLUSPLUS

    CLOSEPAR        reduce using rule 39 (E -> COMMA EXPRESSION .)
    LESSEQUAL       shift and go to state 113
    ASSIGN          shift and go to state 114
    EQUALS          shift and go to state 115
    GREATEREQUAL    shift and go to state 116
    GREATERTHAN     shift and go to state 117
    LESSTHAN        shift and go to state 118
    ADD             shift and go to state 119
    MINUS           shift and go to state 120
    MULT            shift and go to state 121
    NOTEQUAL        shift and go to state 122
    DIVIDE          shift and go to state 123
    PEQUAL          shift and go to state 124
    MEQUAL          shift and go to state 125
    PLUSPLUS        shift and go to state 126

    OP                             shift and go to state 112

state 160

    (51) STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT . ELSE STATEMENT
    (52) STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 173
    OPENAKOL        reduce using rule 52 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    IF              reduce using rule 52 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    FOR             reduce using rule 52 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    WHILE           reduce using rule 52 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    THIS            reduce using rule 52 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    ID              reduce using rule 52 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    INT             reduce using rule 52 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    BOOLEAN         reduce using rule 52 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    STRING          reduce using rule 52 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    DOUBLE          reduce using rule 52 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    CHARACTER       reduce using rule 52 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    FLOAT           reduce using rule 52 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    VOID            reduce using rule 52 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    RETURN          reduce using rule 52 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    CLOSEAKOL       reduce using rule 52 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT .)

  ! ELSE            [ reduce using rule 52 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT .) ]


state 161

    (53) STATEMENT -> FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT .

    OPENAKOL        reduce using rule 53 (STATEMENT -> FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    IF              reduce using rule 53 (STATEMENT -> FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    FOR             reduce using rule 53 (STATEMENT -> FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    WHILE           reduce using rule 53 (STATEMENT -> FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    THIS            reduce using rule 53 (STATEMENT -> FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    ID              reduce using rule 53 (STATEMENT -> FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    INT             reduce using rule 53 (STATEMENT -> FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    BOOLEAN         reduce using rule 53 (STATEMENT -> FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    STRING          reduce using rule 53 (STATEMENT -> FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    DOUBLE          reduce using rule 53 (STATEMENT -> FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    CHARACTER       reduce using rule 53 (STATEMENT -> FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    FLOAT           reduce using rule 53 (STATEMENT -> FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    VOID            reduce using rule 53 (STATEMENT -> FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    RETURN          reduce using rule 53 (STATEMENT -> FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    CLOSEAKOL       reduce using rule 53 (STATEMENT -> FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    ELSE            reduce using rule 53 (STATEMENT -> FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT .)


state 162

    (54) STATEMENT -> WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT .

    OPENAKOL        reduce using rule 54 (STATEMENT -> WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    IF              reduce using rule 54 (STATEMENT -> WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    FOR             reduce using rule 54 (STATEMENT -> WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    WHILE           reduce using rule 54 (STATEMENT -> WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    THIS            reduce using rule 54 (STATEMENT -> WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    ID              reduce using rule 54 (STATEMENT -> WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    INT             reduce using rule 54 (STATEMENT -> WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    BOOLEAN         reduce using rule 54 (STATEMENT -> WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    STRING          reduce using rule 54 (STATEMENT -> WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    DOUBLE          reduce using rule 54 (STATEMENT -> WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    CHARACTER       reduce using rule 54 (STATEMENT -> WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    FLOAT           reduce using rule 54 (STATEMENT -> WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    VOID            reduce using rule 54 (STATEMENT -> WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    RETURN          reduce using rule 54 (STATEMENT -> WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    CLOSEAKOL       reduce using rule 54 (STATEMENT -> WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT .)
    ELSE            reduce using rule 54 (STATEMENT -> WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT .)


state 163

    (9) METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .

    STATIC          reduce using rule 9 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    PUBLIC          reduce using rule 9 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    PRIVATE         reduce using rule 9 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    INT             reduce using rule 9 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    BOOLEAN         reduce using rule 9 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    STRING          reduce using rule 9 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    DOUBLE          reduce using rule 9 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    CHARACTER       reduce using rule 9 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    FLOAT           reduce using rule 9 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    VOID            reduce using rule 9 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    ID              reduce using rule 9 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)
    CLOSEAKOL       reduce using rule 9 (METHODDECLARATION -> DECLARATORS ID OPENPAR PARAMERERLIST CLOSEPAR OPENAKOL B RETURN EXPRESSION SEMI CLOSEAKOL .)


state 164

    (65) EXPRESSION -> EXPRESSION OP EXPRESSION SEMI .

    SEMI            reduce using rule 65 (EXPRESSION -> EXPRESSION OP EXPRESSION SEMI .)
    LESSEQUAL       reduce using rule 65 (EXPRESSION -> EXPRESSION OP EXPRESSION SEMI .)
    ASSIGN          reduce using rule 65 (EXPRESSION -> EXPRESSION OP EXPRESSION SEMI .)
    EQUALS          reduce using rule 65 (EXPRESSION -> EXPRESSION OP EXPRESSION SEMI .)
    GREATEREQUAL    reduce using rule 65 (EXPRESSION -> EXPRESSION OP EXPRESSION SEMI .)
    GREATERTHAN     reduce using rule 65 (EXPRESSION -> EXPRESSION OP EXPRESSION SEMI .)
    LESSTHAN        reduce using rule 65 (EXPRESSION -> EXPRESSION OP EXPRESSION SEMI .)
    ADD             reduce using rule 65 (EXPRESSION -> EXPRESSION OP EXPRESSION SEMI .)
    MINUS           reduce using rule 65 (EXPRESSION -> EXPRESSION OP EXPRESSION SEMI .)
    MULT            reduce using rule 65 (EXPRESSION -> EXPRESSION OP EXPRESSION SEMI .)
    NOTEQUAL        reduce using rule 65 (EXPRESSION -> EXPRESSION OP EXPRESSION SEMI .)
    DIVIDE          reduce using rule 65 (EXPRESSION -> EXPRESSION OP EXPRESSION SEMI .)
    PEQUAL          reduce using rule 65 (EXPRESSION -> EXPRESSION OP EXPRESSION SEMI .)
    MEQUAL          reduce using rule 65 (EXPRESSION -> EXPRESSION OP EXPRESSION SEMI .)
    PLUSPLUS        reduce using rule 65 (EXPRESSION -> EXPRESSION OP EXPRESSION SEMI .)
    CLOSEBRACKET    reduce using rule 65 (EXPRESSION -> EXPRESSION OP EXPRESSION SEMI .)
    COMMA           reduce using rule 65 (EXPRESSION -> EXPRESSION OP EXPRESSION SEMI .)
    CLOSEPAR        reduce using rule 65 (EXPRESSION -> EXPRESSION OP EXPRESSION SEMI .)


state 165

    (60) EXPRESSION -> NEW ID OPENPAR CLOSEPAR .

    SEMI            reduce using rule 60 (EXPRESSION -> NEW ID OPENPAR CLOSEPAR .)
    LESSEQUAL       reduce using rule 60 (EXPRESSION -> NEW ID OPENPAR CLOSEPAR .)
    ASSIGN          reduce using rule 60 (EXPRESSION -> NEW ID OPENPAR CLOSEPAR .)
    EQUALS          reduce using rule 60 (EXPRESSION -> NEW ID OPENPAR CLOSEPAR .)
    GREATEREQUAL    reduce using rule 60 (EXPRESSION -> NEW ID OPENPAR CLOSEPAR .)
    GREATERTHAN     reduce using rule 60 (EXPRESSION -> NEW ID OPENPAR CLOSEPAR .)
    LESSTHAN        reduce using rule 60 (EXPRESSION -> NEW ID OPENPAR CLOSEPAR .)
    ADD             reduce using rule 60 (EXPRESSION -> NEW ID OPENPAR CLOSEPAR .)
    MINUS           reduce using rule 60 (EXPRESSION -> NEW ID OPENPAR CLOSEPAR .)
    MULT            reduce using rule 60 (EXPRESSION -> NEW ID OPENPAR CLOSEPAR .)
    NOTEQUAL        reduce using rule 60 (EXPRESSION -> NEW ID OPENPAR CLOSEPAR .)
    DIVIDE          reduce using rule 60 (EXPRESSION -> NEW ID OPENPAR CLOSEPAR .)
    PEQUAL          reduce using rule 60 (EXPRESSION -> NEW ID OPENPAR CLOSEPAR .)
    MEQUAL          reduce using rule 60 (EXPRESSION -> NEW ID OPENPAR CLOSEPAR .)
    PLUSPLUS        reduce using rule 60 (EXPRESSION -> NEW ID OPENPAR CLOSEPAR .)
    CLOSEBRACKET    reduce using rule 60 (EXPRESSION -> NEW ID OPENPAR CLOSEPAR .)
    COMMA           reduce using rule 60 (EXPRESSION -> NEW ID OPENPAR CLOSEPAR .)
    CLOSEPAR        reduce using rule 60 (EXPRESSION -> NEW ID OPENPAR CLOSEPAR .)


state 166

    (62) EXPRESSION -> NEW ID OPENBRACKET EXPRESSION . CLOSEBRACKET
    (64) EXPRESSION -> EXPRESSION . OP EXPRESSION
    (65) EXPRESSION -> EXPRESSION . OP EXPRESSION SEMI
    (74) OP -> . LESSEQUAL
    (75) OP -> . ASSIGN
    (76) OP -> . EQUALS
    (77) OP -> . GREATEREQUAL
    (78) OP -> . GREATERTHAN
    (79) OP -> . LESSTHAN
    (80) OP -> . ADD
    (81) OP -> . MINUS
    (82) OP -> . MULT
    (83) OP -> . NOTEQUAL
    (84) OP -> . DIVIDE
    (85) OP -> . PEQUAL
    (86) OP -> . MEQUAL
    (87) OP -> . PLUSPLUS

    CLOSEBRACKET    shift and go to state 174
    LESSEQUAL       shift and go to state 113
    ASSIGN          shift and go to state 114
    EQUALS          shift and go to state 115
    GREATEREQUAL    shift and go to state 116
    GREATERTHAN     shift and go to state 117
    LESSTHAN        shift and go to state 118
    ADD             shift and go to state 119
    MINUS           shift and go to state 120
    MULT            shift and go to state 121
    NOTEQUAL        shift and go to state 122
    DIVIDE          shift and go to state 123
    PEQUAL          shift and go to state 124
    MEQUAL          shift and go to state 125
    PLUSPLUS        shift and go to state 126

    OP                             shift and go to state 112

state 167

    (61) EXPRESSION -> NEW INT OPENBRACKET EXPRESSION . CLOSEBRACKET
    (64) EXPRESSION -> EXPRESSION . OP EXPRESSION
    (65) EXPRESSION -> EXPRESSION . OP EXPRESSION SEMI
    (74) OP -> . LESSEQUAL
    (75) OP -> . ASSIGN
    (76) OP -> . EQUALS
    (77) OP -> . GREATEREQUAL
    (78) OP -> . GREATERTHAN
    (79) OP -> . LESSTHAN
    (80) OP -> . ADD
    (81) OP -> . MINUS
    (82) OP -> . MULT
    (83) OP -> . NOTEQUAL
    (84) OP -> . DIVIDE
    (85) OP -> . PEQUAL
    (86) OP -> . MEQUAL
    (87) OP -> . PLUSPLUS

    CLOSEBRACKET    shift and go to state 175
    LESSEQUAL       shift and go to state 113
    ASSIGN          shift and go to state 114
    EQUALS          shift and go to state 115
    GREATEREQUAL    shift and go to state 116
    GREATERTHAN     shift and go to state 117
    LESSTHAN        shift and go to state 118
    ADD             shift and go to state 119
    MINUS           shift and go to state 120
    MULT            shift and go to state 121
    NOTEQUAL        shift and go to state 122
    DIVIDE          shift and go to state 123
    PEQUAL          shift and go to state 124
    MEQUAL          shift and go to state 125
    PLUSPLUS        shift and go to state 126

    OP                             shift and go to state 112

state 168

    (67) EXPRESSION -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR .

    SEMI            reduce using rule 67 (EXPRESSION -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR .)
    LESSEQUAL       reduce using rule 67 (EXPRESSION -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR .)
    ASSIGN          reduce using rule 67 (EXPRESSION -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR .)
    EQUALS          reduce using rule 67 (EXPRESSION -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR .)
    GREATEREQUAL    reduce using rule 67 (EXPRESSION -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR .)
    GREATERTHAN     reduce using rule 67 (EXPRESSION -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR .)
    LESSTHAN        reduce using rule 67 (EXPRESSION -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR .)
    ADD             reduce using rule 67 (EXPRESSION -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR .)
    MINUS           reduce using rule 67 (EXPRESSION -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR .)
    MULT            reduce using rule 67 (EXPRESSION -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR .)
    NOTEQUAL        reduce using rule 67 (EXPRESSION -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR .)
    DIVIDE          reduce using rule 67 (EXPRESSION -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR .)
    PEQUAL          reduce using rule 67 (EXPRESSION -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR .)
    MEQUAL          reduce using rule 67 (EXPRESSION -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR .)
    PLUSPLUS        reduce using rule 67 (EXPRESSION -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR .)
    CLOSEBRACKET    reduce using rule 67 (EXPRESSION -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR .)
    COMMA           reduce using rule 67 (EXPRESSION -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR .)
    CLOSEPAR        reduce using rule 67 (EXPRESSION -> REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR .)


state 169

    (69) EXPRESSION -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET .

    SEMI            reduce using rule 69 (EXPRESSION -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET .)
    LESSEQUAL       reduce using rule 69 (EXPRESSION -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET .)
    ASSIGN          reduce using rule 69 (EXPRESSION -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET .)
    EQUALS          reduce using rule 69 (EXPRESSION -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET .)
    GREATEREQUAL    reduce using rule 69 (EXPRESSION -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET .)
    GREATERTHAN     reduce using rule 69 (EXPRESSION -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET .)
    LESSTHAN        reduce using rule 69 (EXPRESSION -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET .)
    ADD             reduce using rule 69 (EXPRESSION -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET .)
    MINUS           reduce using rule 69 (EXPRESSION -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET .)
    MULT            reduce using rule 69 (EXPRESSION -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET .)
    NOTEQUAL        reduce using rule 69 (EXPRESSION -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET .)
    DIVIDE          reduce using rule 69 (EXPRESSION -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET .)
    PEQUAL          reduce using rule 69 (EXPRESSION -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET .)
    MEQUAL          reduce using rule 69 (EXPRESSION -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET .)
    PLUSPLUS        reduce using rule 69 (EXPRESSION -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET .)
    CLOSEBRACKET    reduce using rule 69 (EXPRESSION -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET .)
    COMMA           reduce using rule 69 (EXPRESSION -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET .)
    CLOSEPAR        reduce using rule 69 (EXPRESSION -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET .)


state 170

    (71) EXPRESSION -> REFERENCE ASSIGN REFERENCE SEMI . REFERENCE OP REFERENCE SEMI I
    (41) REFERENCE -> . THIS G
    (42) REFERENCE -> . ID G

    THIS            shift and go to state 61
    ID              shift and go to state 89

    REFERENCE                      shift and go to state 176

state 171

    (72) EXPRESSION -> REFERENCE ASSIGN NUMBER SEMI . REFERENCE OP NUMBER SEMI I
    (73) EXPRESSION -> REFERENCE ASSIGN NUMBER SEMI . REFERENCE OP REFERENCE SEMI I
    (41) REFERENCE -> . THIS G
    (42) REFERENCE -> . ID G

    THIS            shift and go to state 61
    ID              shift and go to state 89

    REFERENCE                      shift and go to state 177

state 172

    (47) STATEMENT -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION . SEMI
    (64) EXPRESSION -> EXPRESSION . OP EXPRESSION
    (65) EXPRESSION -> EXPRESSION . OP EXPRESSION SEMI
    (74) OP -> . LESSEQUAL
    (75) OP -> . ASSIGN
    (76) OP -> . EQUALS
    (77) OP -> . GREATEREQUAL
    (78) OP -> . GREATERTHAN
    (79) OP -> . LESSTHAN
    (80) OP -> . ADD
    (81) OP -> . MINUS
    (82) OP -> . MULT
    (83) OP -> . NOTEQUAL
    (84) OP -> . DIVIDE
    (85) OP -> . PEQUAL
    (86) OP -> . MEQUAL
    (87) OP -> . PLUSPLUS

    SEMI            shift and go to state 178
    LESSEQUAL       shift and go to state 113
    ASSIGN          shift and go to state 114
    EQUALS          shift and go to state 115
    GREATEREQUAL    shift and go to state 116
    GREATERTHAN     shift and go to state 117
    LESSTHAN        shift and go to state 118
    ADD             shift and go to state 119
    MINUS           shift and go to state 120
    MULT            shift and go to state 121
    NOTEQUAL        shift and go to state 122
    DIVIDE          shift and go to state 123
    PEQUAL          shift and go to state 124
    MEQUAL          shift and go to state 125
    PLUSPLUS        shift and go to state 126

    OP                             shift and go to state 112

state 173

    (51) STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE . STATEMENT
    (45) STATEMENT -> . OPENAKOL H CLOSEAKOL
    (46) STATEMENT -> . TYPE ID ASSIGN EXPRESSION SEMI
    (47) STATEMENT -> . REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI
    (48) STATEMENT -> . REFERENCE ASSIGN EXPRESSION SEMI
    (49) STATEMENT -> . REFERENCE OPENPAR CLOSEPAR SEMI
    (50) STATEMENT -> . REFERENCE OPENPAR ARGUMENTLIST CLOSEPAR SEMI
    (51) STATEMENT -> . IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT
    (52) STATEMENT -> . IF OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (53) STATEMENT -> . FOR OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (54) STATEMENT -> . WHILE OPENPAR EXPRESSION CLOSEPAR STATEMENT
    (22) TYPE -> . PRIMTYPE
    (23) TYPE -> . CLASSTYPE
    (24) TYPE -> . ARRTYPE
    (41) REFERENCE -> . THIS G
    (42) REFERENCE -> . ID G
    (25) PRIMTYPE -> . INT
    (26) PRIMTYPE -> . BOOLEAN
    (27) PRIMTYPE -> . STRING
    (28) PRIMTYPE -> . DOUBLE
    (29) PRIMTYPE -> . CHARACTER
    (30) PRIMTYPE -> . FLOAT
    (31) PRIMTYPE -> . VOID
    (32) CLASSTYPE -> . ID
    (33) ARRTYPE -> . INT OPENBRACKET CLOSEBRACKET
    (34) ARRTYPE -> . CLASSTYPE OPENBRACKET CLOSEBRACKET

    OPENAKOL        shift and go to state 52
    IF              shift and go to state 58
    FOR             shift and go to state 59
    WHILE           shift and go to state 60
    THIS            shift and go to state 61
    ID              shift and go to state 51
    INT             shift and go to state 23
    BOOLEAN         shift and go to state 24
    STRING          shift and go to state 25
    DOUBLE          shift and go to state 26
    CHARACTER       shift and go to state 27
    FLOAT           shift and go to state 28
    VOID            shift and go to state 29

    STATEMENT                      shift and go to state 179
    TYPE                           shift and go to state 56
    REFERENCE                      shift and go to state 57
    PRIMTYPE                       shift and go to state 20
    CLASSTYPE                      shift and go to state 21
    ARRTYPE                        shift and go to state 22

state 174

    (62) EXPRESSION -> NEW ID OPENBRACKET EXPRESSION CLOSEBRACKET .

    SEMI            reduce using rule 62 (EXPRESSION -> NEW ID OPENBRACKET EXPRESSION CLOSEBRACKET .)
    LESSEQUAL       reduce using rule 62 (EXPRESSION -> NEW ID OPENBRACKET EXPRESSION CLOSEBRACKET .)
    ASSIGN          reduce using rule 62 (EXPRESSION -> NEW ID OPENBRACKET EXPRESSION CLOSEBRACKET .)
    EQUALS          reduce using rule 62 (EXPRESSION -> NEW ID OPENBRACKET EXPRESSION CLOSEBRACKET .)
    GREATEREQUAL    reduce using rule 62 (EXPRESSION -> NEW ID OPENBRACKET EXPRESSION CLOSEBRACKET .)
    GREATERTHAN     reduce using rule 62 (EXPRESSION -> NEW ID OPENBRACKET EXPRESSION CLOSEBRACKET .)
    LESSTHAN        reduce using rule 62 (EXPRESSION -> NEW ID OPENBRACKET EXPRESSION CLOSEBRACKET .)
    ADD             reduce using rule 62 (EXPRESSION -> NEW ID OPENBRACKET EXPRESSION CLOSEBRACKET .)
    MINUS           reduce using rule 62 (EXPRESSION -> NEW ID OPENBRACKET EXPRESSION CLOSEBRACKET .)
    MULT            reduce using rule 62 (EXPRESSION -> NEW ID OPENBRACKET EXPRESSION CLOSEBRACKET .)
    NOTEQUAL        reduce using rule 62 (EXPRESSION -> NEW ID OPENBRACKET EXPRESSION CLOSEBRACKET .)
    DIVIDE          reduce using rule 62 (EXPRESSION -> NEW ID OPENBRACKET EXPRESSION CLOSEBRACKET .)
    PEQUAL          reduce using rule 62 (EXPRESSION -> NEW ID OPENBRACKET EXPRESSION CLOSEBRACKET .)
    MEQUAL          reduce using rule 62 (EXPRESSION -> NEW ID OPENBRACKET EXPRESSION CLOSEBRACKET .)
    PLUSPLUS        reduce using rule 62 (EXPRESSION -> NEW ID OPENBRACKET EXPRESSION CLOSEBRACKET .)
    CLOSEBRACKET    reduce using rule 62 (EXPRESSION -> NEW ID OPENBRACKET EXPRESSION CLOSEBRACKET .)
    COMMA           reduce using rule 62 (EXPRESSION -> NEW ID OPENBRACKET EXPRESSION CLOSEBRACKET .)
    CLOSEPAR        reduce using rule 62 (EXPRESSION -> NEW ID OPENBRACKET EXPRESSION CLOSEBRACKET .)


state 175

    (61) EXPRESSION -> NEW INT OPENBRACKET EXPRESSION CLOSEBRACKET .

    SEMI            reduce using rule 61 (EXPRESSION -> NEW INT OPENBRACKET EXPRESSION CLOSEBRACKET .)
    LESSEQUAL       reduce using rule 61 (EXPRESSION -> NEW INT OPENBRACKET EXPRESSION CLOSEBRACKET .)
    ASSIGN          reduce using rule 61 (EXPRESSION -> NEW INT OPENBRACKET EXPRESSION CLOSEBRACKET .)
    EQUALS          reduce using rule 61 (EXPRESSION -> NEW INT OPENBRACKET EXPRESSION CLOSEBRACKET .)
    GREATEREQUAL    reduce using rule 61 (EXPRESSION -> NEW INT OPENBRACKET EXPRESSION CLOSEBRACKET .)
    GREATERTHAN     reduce using rule 61 (EXPRESSION -> NEW INT OPENBRACKET EXPRESSION CLOSEBRACKET .)
    LESSTHAN        reduce using rule 61 (EXPRESSION -> NEW INT OPENBRACKET EXPRESSION CLOSEBRACKET .)
    ADD             reduce using rule 61 (EXPRESSION -> NEW INT OPENBRACKET EXPRESSION CLOSEBRACKET .)
    MINUS           reduce using rule 61 (EXPRESSION -> NEW INT OPENBRACKET EXPRESSION CLOSEBRACKET .)
    MULT            reduce using rule 61 (EXPRESSION -> NEW INT OPENBRACKET EXPRESSION CLOSEBRACKET .)
    NOTEQUAL        reduce using rule 61 (EXPRESSION -> NEW INT OPENBRACKET EXPRESSION CLOSEBRACKET .)
    DIVIDE          reduce using rule 61 (EXPRESSION -> NEW INT OPENBRACKET EXPRESSION CLOSEBRACKET .)
    PEQUAL          reduce using rule 61 (EXPRESSION -> NEW INT OPENBRACKET EXPRESSION CLOSEBRACKET .)
    MEQUAL          reduce using rule 61 (EXPRESSION -> NEW INT OPENBRACKET EXPRESSION CLOSEBRACKET .)
    PLUSPLUS        reduce using rule 61 (EXPRESSION -> NEW INT OPENBRACKET EXPRESSION CLOSEBRACKET .)
    CLOSEBRACKET    reduce using rule 61 (EXPRESSION -> NEW INT OPENBRACKET EXPRESSION CLOSEBRACKET .)
    COMMA           reduce using rule 61 (EXPRESSION -> NEW INT OPENBRACKET EXPRESSION CLOSEBRACKET .)
    CLOSEPAR        reduce using rule 61 (EXPRESSION -> NEW INT OPENBRACKET EXPRESSION CLOSEBRACKET .)


state 176

    (71) EXPRESSION -> REFERENCE ASSIGN REFERENCE SEMI REFERENCE . OP REFERENCE SEMI I
    (74) OP -> . LESSEQUAL
    (75) OP -> . ASSIGN
    (76) OP -> . EQUALS
    (77) OP -> . GREATEREQUAL
    (78) OP -> . GREATERTHAN
    (79) OP -> . LESSTHAN
    (80) OP -> . ADD
    (81) OP -> . MINUS
    (82) OP -> . MULT
    (83) OP -> . NOTEQUAL
    (84) OP -> . DIVIDE
    (85) OP -> . PEQUAL
    (86) OP -> . MEQUAL
    (87) OP -> . PLUSPLUS

    LESSEQUAL       shift and go to state 113
    ASSIGN          shift and go to state 114
    EQUALS          shift and go to state 115
    GREATEREQUAL    shift and go to state 116
    GREATERTHAN     shift and go to state 117
    LESSTHAN        shift and go to state 118
    ADD             shift and go to state 119
    MINUS           shift and go to state 120
    MULT            shift and go to state 121
    NOTEQUAL        shift and go to state 122
    DIVIDE          shift and go to state 123
    PEQUAL          shift and go to state 124
    MEQUAL          shift and go to state 125
    PLUSPLUS        shift and go to state 126

    OP                             shift and go to state 180

state 177

    (72) EXPRESSION -> REFERENCE ASSIGN NUMBER SEMI REFERENCE . OP NUMBER SEMI I
    (73) EXPRESSION -> REFERENCE ASSIGN NUMBER SEMI REFERENCE . OP REFERENCE SEMI I
    (74) OP -> . LESSEQUAL
    (75) OP -> . ASSIGN
    (76) OP -> . EQUALS
    (77) OP -> . GREATEREQUAL
    (78) OP -> . GREATERTHAN
    (79) OP -> . LESSTHAN
    (80) OP -> . ADD
    (81) OP -> . MINUS
    (82) OP -> . MULT
    (83) OP -> . NOTEQUAL
    (84) OP -> . DIVIDE
    (85) OP -> . PEQUAL
    (86) OP -> . MEQUAL
    (87) OP -> . PLUSPLUS

    LESSEQUAL       shift and go to state 113
    ASSIGN          shift and go to state 114
    EQUALS          shift and go to state 115
    GREATEREQUAL    shift and go to state 116
    GREATERTHAN     shift and go to state 117
    LESSTHAN        shift and go to state 118
    ADD             shift and go to state 119
    MINUS           shift and go to state 120
    MULT            shift and go to state 121
    NOTEQUAL        shift and go to state 122
    DIVIDE          shift and go to state 123
    PEQUAL          shift and go to state 124
    MEQUAL          shift and go to state 125
    PLUSPLUS        shift and go to state 126

    OP                             shift and go to state 181

state 178

    (47) STATEMENT -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI .

    OPENAKOL        reduce using rule 47 (STATEMENT -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI .)
    IF              reduce using rule 47 (STATEMENT -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI .)
    FOR             reduce using rule 47 (STATEMENT -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI .)
    WHILE           reduce using rule 47 (STATEMENT -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI .)
    THIS            reduce using rule 47 (STATEMENT -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI .)
    ID              reduce using rule 47 (STATEMENT -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI .)
    INT             reduce using rule 47 (STATEMENT -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI .)
    BOOLEAN         reduce using rule 47 (STATEMENT -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI .)
    STRING          reduce using rule 47 (STATEMENT -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI .)
    DOUBLE          reduce using rule 47 (STATEMENT -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI .)
    CHARACTER       reduce using rule 47 (STATEMENT -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI .)
    FLOAT           reduce using rule 47 (STATEMENT -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI .)
    VOID            reduce using rule 47 (STATEMENT -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI .)
    RETURN          reduce using rule 47 (STATEMENT -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI .)
    CLOSEAKOL       reduce using rule 47 (STATEMENT -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI .)
    ELSE            reduce using rule 47 (STATEMENT -> REFERENCE OPENBRACKET EXPRESSION CLOSEBRACKET ASSIGN EXPRESSION SEMI .)


state 179

    (51) STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT .

    OPENAKOL        reduce using rule 51 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT .)
    IF              reduce using rule 51 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT .)
    FOR             reduce using rule 51 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT .)
    WHILE           reduce using rule 51 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT .)
    THIS            reduce using rule 51 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT .)
    ID              reduce using rule 51 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT .)
    INT             reduce using rule 51 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT .)
    BOOLEAN         reduce using rule 51 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT .)
    STRING          reduce using rule 51 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT .)
    DOUBLE          reduce using rule 51 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT .)
    CHARACTER       reduce using rule 51 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT .)
    FLOAT           reduce using rule 51 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT .)
    VOID            reduce using rule 51 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT .)
    RETURN          reduce using rule 51 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT .)
    CLOSEAKOL       reduce using rule 51 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT .)
    ELSE            reduce using rule 51 (STATEMENT -> IF OPENPAR EXPRESSION CLOSEPAR STATEMENT ELSE STATEMENT .)


state 180

    (71) EXPRESSION -> REFERENCE ASSIGN REFERENCE SEMI REFERENCE OP . REFERENCE SEMI I
    (41) REFERENCE -> . THIS G
    (42) REFERENCE -> . ID G

    THIS            shift and go to state 61
    ID              shift and go to state 89

    REFERENCE                      shift and go to state 182

state 181

    (72) EXPRESSION -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP . NUMBER SEMI I
    (73) EXPRESSION -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP . REFERENCE SEMI I
    (41) REFERENCE -> . THIS G
    (42) REFERENCE -> . ID G

    NUMBER          shift and go to state 184
    THIS            shift and go to state 61
    ID              shift and go to state 89

    REFERENCE                      shift and go to state 183

state 182

    (71) EXPRESSION -> REFERENCE ASSIGN REFERENCE SEMI REFERENCE OP REFERENCE . SEMI I

    SEMI            shift and go to state 185


state 183

    (73) EXPRESSION -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE . SEMI I

    SEMI            shift and go to state 186


state 184

    (72) EXPRESSION -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP NUMBER . SEMI I

    SEMI            shift and go to state 187


state 185

    (71) EXPRESSION -> REFERENCE ASSIGN REFERENCE SEMI REFERENCE OP REFERENCE SEMI . I
    (88) I -> . REFERENCE OP
    (89) I -> . REFERENCE OP NUMBER
    (90) I -> . REFERENCE OP REFERENCE
    (41) REFERENCE -> . THIS G
    (42) REFERENCE -> . ID G

    THIS            shift and go to state 61
    ID              shift and go to state 89

    REFERENCE                      shift and go to state 188
    I                              shift and go to state 189

state 186

    (73) EXPRESSION -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI . I
    (88) I -> . REFERENCE OP
    (89) I -> . REFERENCE OP NUMBER
    (90) I -> . REFERENCE OP REFERENCE
    (41) REFERENCE -> . THIS G
    (42) REFERENCE -> . ID G

    THIS            shift and go to state 61
    ID              shift and go to state 89

    REFERENCE                      shift and go to state 188
    I                              shift and go to state 190

state 187

    (72) EXPRESSION -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP NUMBER SEMI . I
    (88) I -> . REFERENCE OP
    (89) I -> . REFERENCE OP NUMBER
    (90) I -> . REFERENCE OP REFERENCE
    (41) REFERENCE -> . THIS G
    (42) REFERENCE -> . ID G

    THIS            shift and go to state 61
    ID              shift and go to state 89

    REFERENCE                      shift and go to state 188
    I                              shift and go to state 191

state 188

    (88) I -> REFERENCE . OP
    (89) I -> REFERENCE . OP NUMBER
    (90) I -> REFERENCE . OP REFERENCE
    (74) OP -> . LESSEQUAL
    (75) OP -> . ASSIGN
    (76) OP -> . EQUALS
    (77) OP -> . GREATEREQUAL
    (78) OP -> . GREATERTHAN
    (79) OP -> . LESSTHAN
    (80) OP -> . ADD
    (81) OP -> . MINUS
    (82) OP -> . MULT
    (83) OP -> . NOTEQUAL
    (84) OP -> . DIVIDE
    (85) OP -> . PEQUAL
    (86) OP -> . MEQUAL
    (87) OP -> . PLUSPLUS

    LESSEQUAL       shift and go to state 113
    ASSIGN          shift and go to state 114
    EQUALS          shift and go to state 115
    GREATEREQUAL    shift and go to state 116
    GREATERTHAN     shift and go to state 117
    LESSTHAN        shift and go to state 118
    ADD             shift and go to state 119
    MINUS           shift and go to state 120
    MULT            shift and go to state 121
    NOTEQUAL        shift and go to state 122
    DIVIDE          shift and go to state 123
    PEQUAL          shift and go to state 124
    MEQUAL          shift and go to state 125
    PLUSPLUS        shift and go to state 126

    OP                             shift and go to state 192

state 189

    (71) EXPRESSION -> REFERENCE ASSIGN REFERENCE SEMI REFERENCE OP REFERENCE SEMI I .

    SEMI            reduce using rule 71 (EXPRESSION -> REFERENCE ASSIGN REFERENCE SEMI REFERENCE OP REFERENCE SEMI I .)
    LESSEQUAL       reduce using rule 71 (EXPRESSION -> REFERENCE ASSIGN REFERENCE SEMI REFERENCE OP REFERENCE SEMI I .)
    ASSIGN          reduce using rule 71 (EXPRESSION -> REFERENCE ASSIGN REFERENCE SEMI REFERENCE OP REFERENCE SEMI I .)
    EQUALS          reduce using rule 71 (EXPRESSION -> REFERENCE ASSIGN REFERENCE SEMI REFERENCE OP REFERENCE SEMI I .)
    GREATEREQUAL    reduce using rule 71 (EXPRESSION -> REFERENCE ASSIGN REFERENCE SEMI REFERENCE OP REFERENCE SEMI I .)
    GREATERTHAN     reduce using rule 71 (EXPRESSION -> REFERENCE ASSIGN REFERENCE SEMI REFERENCE OP REFERENCE SEMI I .)
    LESSTHAN        reduce using rule 71 (EXPRESSION -> REFERENCE ASSIGN REFERENCE SEMI REFERENCE OP REFERENCE SEMI I .)
    ADD             reduce using rule 71 (EXPRESSION -> REFERENCE ASSIGN REFERENCE SEMI REFERENCE OP REFERENCE SEMI I .)
    MINUS           reduce using rule 71 (EXPRESSION -> REFERENCE ASSIGN REFERENCE SEMI REFERENCE OP REFERENCE SEMI I .)
    MULT            reduce using rule 71 (EXPRESSION -> REFERENCE ASSIGN REFERENCE SEMI REFERENCE OP REFERENCE SEMI I .)
    NOTEQUAL        reduce using rule 71 (EXPRESSION -> REFERENCE ASSIGN REFERENCE SEMI REFERENCE OP REFERENCE SEMI I .)
    DIVIDE          reduce using rule 71 (EXPRESSION -> REFERENCE ASSIGN REFERENCE SEMI REFERENCE OP REFERENCE SEMI I .)
    PEQUAL          reduce using rule 71 (EXPRESSION -> REFERENCE ASSIGN REFERENCE SEMI REFERENCE OP REFERENCE SEMI I .)
    MEQUAL          reduce using rule 71 (EXPRESSION -> REFERENCE ASSIGN REFERENCE SEMI REFERENCE OP REFERENCE SEMI I .)
    PLUSPLUS        reduce using rule 71 (EXPRESSION -> REFERENCE ASSIGN REFERENCE SEMI REFERENCE OP REFERENCE SEMI I .)
    CLOSEBRACKET    reduce using rule 71 (EXPRESSION -> REFERENCE ASSIGN REFERENCE SEMI REFERENCE OP REFERENCE SEMI I .)
    COMMA           reduce using rule 71 (EXPRESSION -> REFERENCE ASSIGN REFERENCE SEMI REFERENCE OP REFERENCE SEMI I .)
    CLOSEPAR        reduce using rule 71 (EXPRESSION -> REFERENCE ASSIGN REFERENCE SEMI REFERENCE OP REFERENCE SEMI I .)


state 190

    (73) EXPRESSION -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .

    SEMI            reduce using rule 73 (EXPRESSION -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    LESSEQUAL       reduce using rule 73 (EXPRESSION -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    ASSIGN          reduce using rule 73 (EXPRESSION -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    EQUALS          reduce using rule 73 (EXPRESSION -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    GREATEREQUAL    reduce using rule 73 (EXPRESSION -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    GREATERTHAN     reduce using rule 73 (EXPRESSION -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    LESSTHAN        reduce using rule 73 (EXPRESSION -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    ADD             reduce using rule 73 (EXPRESSION -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    MINUS           reduce using rule 73 (EXPRESSION -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    MULT            reduce using rule 73 (EXPRESSION -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    NOTEQUAL        reduce using rule 73 (EXPRESSION -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    DIVIDE          reduce using rule 73 (EXPRESSION -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    PEQUAL          reduce using rule 73 (EXPRESSION -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    MEQUAL          reduce using rule 73 (EXPRESSION -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    PLUSPLUS        reduce using rule 73 (EXPRESSION -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    CLOSEBRACKET    reduce using rule 73 (EXPRESSION -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    COMMA           reduce using rule 73 (EXPRESSION -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)
    CLOSEPAR        reduce using rule 73 (EXPRESSION -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP REFERENCE SEMI I .)


state 191

    (72) EXPRESSION -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP NUMBER SEMI I .

    SEMI            reduce using rule 72 (EXPRESSION -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP NUMBER SEMI I .)
    LESSEQUAL       reduce using rule 72 (EXPRESSION -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP NUMBER SEMI I .)
    ASSIGN          reduce using rule 72 (EXPRESSION -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP NUMBER SEMI I .)
    EQUALS          reduce using rule 72 (EXPRESSION -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP NUMBER SEMI I .)
    GREATEREQUAL    reduce using rule 72 (EXPRESSION -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP NUMBER SEMI I .)
    GREATERTHAN     reduce using rule 72 (EXPRESSION -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP NUMBER SEMI I .)
    LESSTHAN        reduce using rule 72 (EXPRESSION -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP NUMBER SEMI I .)
    ADD             reduce using rule 72 (EXPRESSION -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP NUMBER SEMI I .)
    MINUS           reduce using rule 72 (EXPRESSION -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP NUMBER SEMI I .)
    MULT            reduce using rule 72 (EXPRESSION -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP NUMBER SEMI I .)
    NOTEQUAL        reduce using rule 72 (EXPRESSION -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP NUMBER SEMI I .)
    DIVIDE          reduce using rule 72 (EXPRESSION -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP NUMBER SEMI I .)
    PEQUAL          reduce using rule 72 (EXPRESSION -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP NUMBER SEMI I .)
    MEQUAL          reduce using rule 72 (EXPRESSION -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP NUMBER SEMI I .)
    PLUSPLUS        reduce using rule 72 (EXPRESSION -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP NUMBER SEMI I .)
    CLOSEBRACKET    reduce using rule 72 (EXPRESSION -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP NUMBER SEMI I .)
    COMMA           reduce using rule 72 (EXPRESSION -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP NUMBER SEMI I .)
    CLOSEPAR        reduce using rule 72 (EXPRESSION -> REFERENCE ASSIGN NUMBER SEMI REFERENCE OP NUMBER SEMI I .)


state 192

    (88) I -> REFERENCE OP .
    (89) I -> REFERENCE OP . NUMBER
    (90) I -> REFERENCE OP . REFERENCE
    (41) REFERENCE -> . THIS G
    (42) REFERENCE -> . ID G

    SEMI            reduce using rule 88 (I -> REFERENCE OP .)
    LESSEQUAL       reduce using rule 88 (I -> REFERENCE OP .)
    ASSIGN          reduce using rule 88 (I -> REFERENCE OP .)
    EQUALS          reduce using rule 88 (I -> REFERENCE OP .)
    GREATEREQUAL    reduce using rule 88 (I -> REFERENCE OP .)
    GREATERTHAN     reduce using rule 88 (I -> REFERENCE OP .)
    LESSTHAN        reduce using rule 88 (I -> REFERENCE OP .)
    ADD             reduce using rule 88 (I -> REFERENCE OP .)
    MINUS           reduce using rule 88 (I -> REFERENCE OP .)
    MULT            reduce using rule 88 (I -> REFERENCE OP .)
    NOTEQUAL        reduce using rule 88 (I -> REFERENCE OP .)
    DIVIDE          reduce using rule 88 (I -> REFERENCE OP .)
    PEQUAL          reduce using rule 88 (I -> REFERENCE OP .)
    MEQUAL          reduce using rule 88 (I -> REFERENCE OP .)
    PLUSPLUS        reduce using rule 88 (I -> REFERENCE OP .)
    CLOSEBRACKET    reduce using rule 88 (I -> REFERENCE OP .)
    COMMA           reduce using rule 88 (I -> REFERENCE OP .)
    CLOSEPAR        reduce using rule 88 (I -> REFERENCE OP .)
    NUMBER          shift and go to state 194
    THIS            shift and go to state 61
    ID              shift and go to state 89

    REFERENCE                      shift and go to state 193

state 193

    (90) I -> REFERENCE OP REFERENCE .

    SEMI            reduce using rule 90 (I -> REFERENCE OP REFERENCE .)
    LESSEQUAL       reduce using rule 90 (I -> REFERENCE OP REFERENCE .)
    ASSIGN          reduce using rule 90 (I -> REFERENCE OP REFERENCE .)
    EQUALS          reduce using rule 90 (I -> REFERENCE OP REFERENCE .)
    GREATEREQUAL    reduce using rule 90 (I -> REFERENCE OP REFERENCE .)
    GREATERTHAN     reduce using rule 90 (I -> REFERENCE OP REFERENCE .)
    LESSTHAN        reduce using rule 90 (I -> REFERENCE OP REFERENCE .)
    ADD             reduce using rule 90 (I -> REFERENCE OP REFERENCE .)
    MINUS           reduce using rule 90 (I -> REFERENCE OP REFERENCE .)
    MULT            reduce using rule 90 (I -> REFERENCE OP REFERENCE .)
    NOTEQUAL        reduce using rule 90 (I -> REFERENCE OP REFERENCE .)
    DIVIDE          reduce using rule 90 (I -> REFERENCE OP REFERENCE .)
    PEQUAL          reduce using rule 90 (I -> REFERENCE OP REFERENCE .)
    MEQUAL          reduce using rule 90 (I -> REFERENCE OP REFERENCE .)
    PLUSPLUS        reduce using rule 90 (I -> REFERENCE OP REFERENCE .)
    CLOSEBRACKET    reduce using rule 90 (I -> REFERENCE OP REFERENCE .)
    COMMA           reduce using rule 90 (I -> REFERENCE OP REFERENCE .)
    CLOSEPAR        reduce using rule 90 (I -> REFERENCE OP REFERENCE .)


state 194

    (89) I -> REFERENCE OP NUMBER .

    SEMI            reduce using rule 89 (I -> REFERENCE OP NUMBER .)
    LESSEQUAL       reduce using rule 89 (I -> REFERENCE OP NUMBER .)
    ASSIGN          reduce using rule 89 (I -> REFERENCE OP NUMBER .)
    EQUALS          reduce using rule 89 (I -> REFERENCE OP NUMBER .)
    GREATEREQUAL    reduce using rule 89 (I -> REFERENCE OP NUMBER .)
    GREATERTHAN     reduce using rule 89 (I -> REFERENCE OP NUMBER .)
    LESSTHAN        reduce using rule 89 (I -> REFERENCE OP NUMBER .)
    ADD             reduce using rule 89 (I -> REFERENCE OP NUMBER .)
    MINUS           reduce using rule 89 (I -> REFERENCE OP NUMBER .)
    MULT            reduce using rule 89 (I -> REFERENCE OP NUMBER .)
    NOTEQUAL        reduce using rule 89 (I -> REFERENCE OP NUMBER .)
    DIVIDE          reduce using rule 89 (I -> REFERENCE OP NUMBER .)
    PEQUAL          reduce using rule 89 (I -> REFERENCE OP NUMBER .)
    MEQUAL          reduce using rule 89 (I -> REFERENCE OP NUMBER .)
    PLUSPLUS        reduce using rule 89 (I -> REFERENCE OP NUMBER .)
    CLOSEBRACKET    reduce using rule 89 (I -> REFERENCE OP NUMBER .)
    COMMA           reduce using rule 89 (I -> REFERENCE OP NUMBER .)
    CLOSEPAR        reduce using rule 89 (I -> REFERENCE OP NUMBER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ASSIGN in state 97 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 147 resolved as shift
WARNING: shift/reduce conflict for LESSEQUAL in state 147 resolved as shift
WARNING: shift/reduce conflict for ASSIGN in state 147 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 147 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 147 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 147 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 147 resolved as shift
WARNING: shift/reduce conflict for ADD in state 147 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 147 resolved as shift
WARNING: shift/reduce conflict for MULT in state 147 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 147 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 147 resolved as shift
WARNING: shift/reduce conflict for PEQUAL in state 147 resolved as shift
WARNING: shift/reduce conflict for MEQUAL in state 147 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 147 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 160 resolved as shift
WARNING: reduce/reduce conflict in state 51 resolved using rule (EMPTY -> <empty>)
WARNING: rejected rule (CLASSTYPE -> ID) in state 51
